//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_e "bufio";_bed "bytes";_da "crypto/rand";_cg "crypto/sha1";_g "crypto/x509";_ca "encoding/binary";_a "encoding/hex";_ga "errors";_b "fmt";_fc "github.com/unidoc/pkcs7";_dgf "github.com/unidoc/unipdf/v3/common";_gb "github.com/unidoc/unipdf/v3/core";
_gg "github.com/unidoc/unipdf/v3/core/security";_aaa "github.com/unidoc/unipdf/v3/core/security/crypt";_de "github.com/unidoc/unipdf/v3/internal/cmap";_fe "github.com/unidoc/unipdf/v3/internal/imageutil";_cgb "github.com/unidoc/unipdf/v3/internal/license";
_cag "github.com/unidoc/unipdf/v3/internal/sampling";_fed "github.com/unidoc/unipdf/v3/internal/textencoding";_ad "github.com/unidoc/unipdf/v3/model/internal/fonts";_ea "github.com/unidoc/unipdf/v3/model/sigutil";_gc "github.com/unidoc/unipdf/v3/ps";_dab "github.com/unidoc/unitype";
_adf "golang.org/x/xerrors";_dg "image";_af "image/color";_ "image/gif";_ "image/png";_cf "io";_ee "io/ioutil";_fg "math";_aa "math/rand";_fb "os";_be "regexp";_ec "sort";_fa "strconv";_fd "strings";_c "sync";_f "time";_dbf "unicode";_ff "unicode/utf8";
);

// SetShadingByName sets a shading resource specified by keyName.
func (_cdeeg *PdfPageResources )SetShadingByName (keyName _gb .PdfObjectName ,shadingObj _gb .PdfObject )error {if _cdeeg .Shading ==nil {_cdeeg .Shading =_gb .MakeDict ();};_dccbbg ,_dageb :=_cdeeg .Shading .(*_gb .PdfObjectDictionary );if !_dageb {return _gb .ErrTypeError ;
};_dccbbg .Set (keyName ,shadingObj );return nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_gddab *PdfPageResources )HasExtGState (keyName _gb .PdfObjectName )bool {_ ,_gaaeg :=_gddab .GetFontByName (keyName );return _gaaeg ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _gb .PdfObject ;Flags _gb .PdfObject ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_dgcc *PdfPageResources )SetXObjectByName (keyName _gb .PdfObjectName ,stream *_gb .PdfObjectStream )error {if _dgcc .XObject ==nil {_dgcc .XObject =_gb .MakeDict ();};_addad :=_gb .TraceToDirectObject (_dgcc .XObject );_ebeac ,_face :=_addad .(*_gb .PdfObjectDictionary );
if !_face {_dgf .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_dgcc .XObject ,_addad );return _ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ebeac .Set (keyName ,stream );return nil ;};func (_ede *PdfReader )newPdfActionGotoRFromDict (_ffbb *_gb .PdfObjectDictionary )(*PdfActionGoToR ,error ){_bad ,_agg :=_ebg (_ffbb .Get ("\u0046"));if _agg !=nil {return nil ,_agg ;};return &PdfActionGoToR {D :_ffbb .Get ("\u0044"),NewWindow :_ffbb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bad },nil ;
};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_bfgc *PdfOutlineTreeNode )GetContainingPdfObject ()_gb .PdfObject {return _bfgc .GetContext ().GetContainingPdfObject ();};

// AddWatermarkImage adds a watermark to the page.
func (_dfgcca *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_eggbc ,_agfe :=_dfgcca .GetMediaBox ();if _agfe !=nil {return _agfe ;};_edggc :=_eggbc .Urx -_eggbc .Llx ;_ffgab :=_eggbc .Ury -_eggbc .Lly ;_fdbec :=float64 (*ximg .Width );
_gegef :=(_edggc -_fdbec )/2;if opt .FitToWidth {_fdbec =_edggc ;_gegef =0;};_dbed :=_ffgab ;_bgce :=float64 (0);if opt .PreserveAspectRatio {_dbed =_fdbec *float64 (*ximg .Height )/float64 (*ximg .Width );_bgce =(_ffgab -_dbed )/2;};if _dfgcca .Resources ==nil {_dfgcca .Resources =NewPdfPageResources ();
};_dgag :=0;_bafag :=_gb .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_dgag ));for _dfgcca .Resources .HasXObjectByName (_bafag ){_dgag ++;_bafag =_gb .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_dgag ));};_agfe =_dfgcca .AddImageResource (_bafag ,ximg );
if _agfe !=nil {return _agfe ;};_dgag =0;_bcegd :=_gb .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_dgag ));for _dfgcca .HasExtGState (_bcegd ){_dgag ++;_bcegd =_gb .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_dgag ));};_gebac :=_gb .MakeDict ();
_gebac .Set ("\u0042\u004d",_gb .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_gebac .Set ("\u0043\u0041",_gb .MakeFloat (opt .Alpha ));_gebac .Set ("\u0063\u0061",_gb .MakeFloat (opt .Alpha ));_agfe =_dfgcca .AddExtGState (_bcegd ,_gebac );if _agfe !=nil {return _agfe ;
};_aadgc :=_b .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_bcegd ,_fdbec ,_dbed ,_gegef ,_bgce ,_bafag );
_dfgcca .AddContentStreamByString (_aadgc );return nil ;};func _efdf (_egbb _gb .PdfObject ,_bcbc *PdfReader )(*OutlineDest ,error ){_cdea ,_fagbc :=_gb .GetArray (_egbb );if !_fagbc {return nil ,_ga .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_edbad :=_cdea .Len ();if _edbad < 2{return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_edbad );
};_gfcae :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_gfad :=_cdea .Get (0);if _eedee ,_dfaf :=_gb .GetIndirect (_gfad );_dfaf {if _ ,_cbceb ,_bbdfd :=_bcbc .PageFromIndirectObject (_eedee );_bbdfd ==nil {_gfcae .Page =int64 (_cbceb -1);}else {_dgf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_eedee );
};_gfcae .PageObj =_eedee ;}else if _bfafe ,_cbaf :=_gb .GetIntVal (_gfad );_cbaf {if _bfafe >=0&&_bfafe < len (_bcbc .PageList ){_gfcae .PageObj =_bcbc .PageList [_bfafe ].GetPageAsIndirectObject ();}else {_dgf .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_bfafe );
};_gfcae .Page =int64 (_bfafe );}else {return nil ,_b .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_gfad );};_gfcbg ,_fagbc :=_gb .GetNameVal (_cdea .Get (1));
if !_fagbc {_dgf .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cdea .Get (1));
return _gfcae ,nil ;};switch _gfcbg {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _edbad > 2{_gfcae .Y ,_ =_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_cdea .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _edbad > 2{_gfcae .X ,_ =_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_cdea .Get (2)));
};case "\u0058\u0059\u005a":if _edbad > 4{_gfcae .X ,_ =_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_cdea .Get (2)));_gfcae .Y ,_ =_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_cdea .Get (3)));_gfcae .Zoom ,_ =_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_cdea .Get (4)));
};default:_gfcbg ="\u0046\u0069\u0074";};_gfcae .Mode =_gfcbg ;return _gfcae ,nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_gdeda interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _gb .PdfObject ;V _gb .PdfObject ;};func (_acca *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// ToPdfObject implements interface PdfModel.
func (_degd *PdfActionTrans )ToPdfObject ()_gb .PdfObject {_degd .PdfAction .ToPdfObject ();_gggf :=_degd ._cd ;_eb :=_gggf .PdfObject .(*_gb .PdfObjectDictionary );_eb .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeTrans )));_eb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_degd .Trans );
return _gggf ;};

// ToPdfObject returns the PDF representation of the function.
func (_dabfe *PdfFunctionType2 )ToPdfObject ()_gb .PdfObject {_cfde :=_gb .MakeDict ();_cfde .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gb .MakeInteger (2));_fcab :=&_gb .PdfObjectArray {};for _ ,_eagac :=range _dabfe .Domain {_fcab .Append (_gb .MakeFloat (_eagac ));
};_cfde .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fcab );if _dabfe .Range !=nil {_aefga :=&_gb .PdfObjectArray {};for _ ,_dbfc :=range _dabfe .Range {_aefga .Append (_gb .MakeFloat (_dbfc ));};_cfde .Set ("\u0052\u0061\u006eg\u0065",_aefga );};if _dabfe .C0 !=nil {_aafg :=&_gb .PdfObjectArray {};
for _ ,_eddf :=range _dabfe .C0 {_aafg .Append (_gb .MakeFloat (_eddf ));};_cfde .Set ("\u0043\u0030",_aafg );};if _dabfe .C1 !=nil {_aeab :=&_gb .PdfObjectArray {};for _ ,_egbg :=range _dabfe .C1 {_aeab .Append (_gb .MakeFloat (_egbg ));};_cfde .Set ("\u0043\u0031",_aeab );
};_cfde .Set ("\u004e",_gb .MakeFloat (_dabfe .N ));if _dabfe ._eccb !=nil {_dabfe ._eccb .PdfObject =_cfde ;return _dabfe ._eccb ;};return _cfde ;};

// ToPdfObject implements interface PdfModel.
func (_cfg *PdfActionHide )ToPdfObject ()_gb .PdfObject {_cfg .PdfAction .ToPdfObject ();_fbf :=_cfg ._cd ;_fca :=_fbf .PdfObject .(*_gb .PdfObjectDictionary );_fca .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeHide )));_fca .SetIfNotNil ("\u0054",_cfg .T );
_fca .SetIfNotNil ("\u0048",_cfg .H );return _fbf ;};

// Encoder returns the font's text encoder.
func (_deea pdfCIDFontType2 )Encoder ()_fed .TextEncoder {return _deea ._agca };var _ pdfFont =(*pdfCIDFontType0 )(nil );

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_fbcd *PdfFont )CharcodesToUnicodeWithStats (charcodes []_fed .CharCode )(_adggd []rune ,_dcedc ,_efgdf int ){_ebae ,_dcedc ,_efgdf :=_fbcd .CharcodesToStrings (charcodes );return []rune (_fd .Join (_ebae ,"")),_dcedc ,_efgdf ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_dcgca *PdfPageResources )GetFontByName (keyName _gb .PdfObjectName )(_gb .PdfObject ,bool ){if _dcgca .Font ==nil {return nil ,false ;};_faacd ,_eefdg :=_gb .TraceToDirectObject (_dcgca .Font ).(*_gb .PdfObjectDictionary );if !_eefdg {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gb .TraceToDirectObject (_dcgca .Font ));
return nil ,false ;};if _dgdea :=_faacd .Get (keyName );_dgdea !=nil {return _dgdea ,true ;};return nil ,false ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_gbe :=NewPdfAnnotation ();_gbb :=&PdfAnnotationPrinterMark {};_gbb .PdfAnnotation =_gbe ;_gbe .SetContext (_gbb );return _gbb ;};

// B returns the value of the blue component of the color.
func (_gfde *PdfColorDeviceRGB )B ()float64 {return _gfde [2]};func _ggfc (_eabcb string )map[string ]string {_ffgaa :=_adfge .Split (_eabcb ,-1);_ecggc :=map[string ]string {};for _ ,_egbe :=range _ffgaa {_bfafd :=_gfcgd .FindStringSubmatch (_egbe );if _bfafd ==nil {continue ;
};_eaag ,_gaebf :=_bfafd [1],_bfafd [2];_ecggc [_eaag ]=_gaebf ;};return _ecggc ;};

// Items returns all children outline items.
func (_dcda *Outline )Items ()[]*OutlineItem {return _dcda .Entries };func _eaff (_ddfbg *PdfField ,_bfadf _gb .PdfObject )error {switch _ddfbg .GetContext ().(type ){case *PdfFieldText :switch _eccg :=_bfadf .(type ){case *_gb .PdfObjectName :_ecebf :=_eccg ;
_dgf .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_ecebf .String ());
_ddfbg .V =_gb .MakeEncodedString (_eccg .String (),true );case *_gb .PdfObjectString :_ddfbg .V =_gb .MakeEncodedString (_eccg .String (),true );default:_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_eccg ,_eccg );
};case *PdfFieldButton :switch _bfadf .(type ){case *_gb .PdfObjectName :if len (_bfadf .String ())> 0{_ddfbg .V =_bfadf ;_affb (_ddfbg ,_bfadf );};case *_gb .PdfObjectString :if len (_bfadf .String ())> 0{_ddfbg .V =_gb .MakeName (_bfadf .String ());_affb (_ddfbg ,_ddfbg .V );
};default:_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ddfbg .PartialName (),_bfadf );_ddfbg .V =_bfadf ;};case *PdfFieldChoice :switch _bfadf .(type ){case *_gb .PdfObjectName :if len (_bfadf .String ())> 0{_ddfbg .V =_gb .MakeString (_bfadf .String ());
_affb (_ddfbg ,_bfadf );};case *_gb .PdfObjectString :if len (_bfadf .String ())> 0{_ddfbg .V =_bfadf ;_affb (_ddfbg ,_gb .MakeName (_bfadf .String ()));};default:_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ddfbg .PartialName (),_bfadf );
_ddfbg .V =_bfadf ;};case *PdfFieldSignature :_dgf .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_ddfbg .PartialName (),_bfadf );
};return nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _gb .PdfObject ;Dest _gb .PdfObject ;H _gb .PdfObject ;PA _gb .PdfObject ;QuadPoints _gb .PdfObject ;BS _gb .PdfObject ;_ace *PdfAction ;_faab *PdfReader ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_gedb *_gb .PdfParser ;_gdged _gb .PdfObject ;_bgcdb *_gb .PdfIndirectObject ;_fgfb *_gb .PdfObjectDictionary ;_aegfg []*_gb .PdfIndirectObject ;PageList []*PdfPage ;_efba int ;_ggce *_gb .PdfObjectDictionary ;_gafe *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;_dfffec *modelManager ;_ggea bool ;_addbfc map[_gb .PdfObject ]struct{};_cgae _cf .ReadSeeker ;_cdfea string ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_fbafg []byte ;_fega []uint32 ;_gdece *_gb .PdfObjectStream ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_afdd :=NewPdfAction ();_bf :=&PdfActionImportData {};_bf .PdfAction =_afdd ;_afdd .SetContext (_bf );return _bf ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_dagbg *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cggc :=vals [0];if _cggc < 0.0||_cggc > 100.0{_dgf .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_cggc );
return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eede :=vals [1];_egga :=float64 (-100);_ddaag :=float64 (100);if len (_dagbg .Range )> 1{_egga =_dagbg .Range [0];_ddaag =_dagbg .Range [1];};if _eede < _egga ||_eede > _ddaag {_dgf .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_eede ,_egga ,_ddaag );
return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfag :=vals [2];_ggcd :=float64 (-100);_ccace :=float64 (100);if len (_dagbg .Range )> 3{_ggcd =_dagbg .Range [2];_ccace =_dagbg .Range [3];};if _bfag < _ggcd ||_bfag > _ccace {_dgf .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bfag ,_ggcd ,_ccace );
return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbedf :=NewPdfColorLab (_cggc ,_eede ,_bfag );return _cbedf ,nil ;};func _ecef (_cfcge _gb .PdfObject )(*PdfFunctionType2 ,error ){_gedg :=&PdfFunctionType2 {};var _afgg *_gb .PdfObjectDictionary ;
if _dccba ,_bddcc :=_cfcge .(*_gb .PdfIndirectObject );_bddcc {_ecgbe ,_bgdaa :=_dccba .PdfObject .(*_gb .PdfObjectDictionary );if !_bgdaa {return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gedg ._eccb =_dccba ;_afgg =_ecgbe ;}else if _dgdc ,_dccd :=_cfcge .(*_gb .PdfObjectDictionary );_dccd {_afgg =_dgdc ;}else {return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dgf .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_afgg .String ());
_gfddg ,_cadf :=_gb .TraceToDirectObject (_afgg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gb .PdfObjectArray );if !_cadf {_dgf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ga .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gfddg .Len ()< 0||_gfddg .Len ()%2!=0{_dgf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ga .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_degfc ,_gacfa :=_gfddg .ToFloat64Array ();if _gacfa !=nil {return nil ,_gacfa ;};_gedg .Domain =_degfc ;_gfddg ,_cadf =_gb .TraceToDirectObject (_afgg .Get ("\u0052\u0061\u006eg\u0065")).(*_gb .PdfObjectArray );if _cadf {if _gfddg .Len ()< 0||_gfddg .Len ()%2!=0{return nil ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_dcfa ,_befb :=_gfddg .ToFloat64Array ();if _befb !=nil {return nil ,_befb ;};_gedg .Range =_dcfa ;};_gfddg ,_cadf =_gb .TraceToDirectObject (_afgg .Get ("\u0043\u0030")).(*_gb .PdfObjectArray );if _cadf {_bddgbe ,_eecg :=_gfddg .ToFloat64Array ();if _eecg !=nil {return nil ,_eecg ;
};_gedg .C0 =_bddgbe ;};_gfddg ,_cadf =_gb .TraceToDirectObject (_afgg .Get ("\u0043\u0031")).(*_gb .PdfObjectArray );if _cadf {_bbff ,_eccaa :=_gfddg .ToFloat64Array ();if _eccaa !=nil {return nil ,_eccaa ;};_gedg .C1 =_bbff ;};if len (_gedg .C0 )!=len (_gedg .C1 ){_dgf .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_gb .ErrRangeError ;};N ,_gacfa :=_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_afgg .Get ("\u004e")));if _gacfa !=nil {_dgf .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_afgg .String ());
return nil ,_gacfa ;};_gedg .N =N ;return _gedg ,nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_fdfga *PdfColorspaceSpecialIndexed )ToPdfObject ()_gb .PdfObject {_bbdd :=_gb .MakeArray (_gb .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_bbdd .Append (_fdfga .Base .ToPdfObject ());_bbdd .Append (_gb .MakeInteger (int64 (_fdfga .HiVal )));
_bbdd .Append (_fdfga .Lookup );if _fdfga ._fddb !=nil {_fdfga ._fddb .PdfObject =_bbdd ;return _fdfga ._fddb ;};return _bbdd ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_deef *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_ddcad *PdfReader )buildOutlineTree (_acebf _gb .PdfObject ,_cbbcc *PdfOutlineTreeNode ,_dgbbe *PdfOutlineTreeNode ,_fddfe map[_gb .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _fddfe ==nil {_fddfe =map[_gb .PdfObject ]struct{}{};
};_fddfe [_acebf ]=struct{}{};_dbfee ,_agfa :=_acebf .(*_gb .PdfIndirectObject );if !_agfa {return nil ,nil ,_b .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_acebf );
};_bdegb ,_faaa :=_dbfee .PdfObject .(*_gb .PdfObjectDictionary );if !_faaa {return nil ,nil ,_ga .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dgf .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_bdegb ,_dbfee ,_dbfee );
if _acgb :=_bdegb .Get ("\u0054\u0069\u0074l\u0065");_acgb !=nil {_bfecab ,_abdg :=_ddcad .newPdfOutlineItemFromIndirectObject (_dbfee );if _abdg !=nil {return nil ,nil ,_abdg ;};_bfecab .Parent =_cbbcc ;_bfecab .Prev =_dgbbe ;_ecdda :=_gb .ResolveReference (_bdegb .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_bbbfc :=_fddfe [_ecdda ];_ecdda !=nil &&_ecdda !=_dbfee &&!_bbbfc {if !_gb .IsNullObject (_ecdda ){_ebab ,_fggd ,_eggecb :=_ddcad .buildOutlineTree (_ecdda ,&_bfecab .PdfOutlineTreeNode ,nil ,_fddfe );if _eggecb !=nil {_dgf .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_eggecb );
}else {_bfecab .First =_ebab ;_bfecab .Last =_fggd ;};};};_facg :=_gb .ResolveReference (_bdegb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_gdeed :=_fddfe [_facg ];_facg !=nil &&_facg !=_dbfee &&!_gdeed {if !_gb .IsNullObject (_facg ){_egae ,_afabff ,_eggg :=_ddcad .buildOutlineTree (_facg ,_cbbcc ,&_bfecab .PdfOutlineTreeNode ,_fddfe );
if _eggg !=nil {_dgf .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_eggg );
}else {_bfecab .Next =_egae ;return &_bfecab .PdfOutlineTreeNode ,_afabff ,nil ;};};};return &_bfecab .PdfOutlineTreeNode ,&_bfecab .PdfOutlineTreeNode ,nil ;};_abdgf ,_bcfcb :=_gbagf (_dbfee );if _bcfcb !=nil {return nil ,nil ,_bcfcb ;};_abdgf .Parent =_cbbcc ;
if _ggfde :=_bdegb .Get ("\u0046\u0069\u0072s\u0074");_ggfde !=nil {_ggfde =_gb .ResolveReference (_ggfde );if _ ,_ggaga :=_fddfe [_ggfde ];_ggfde !=nil &&_ggfde !=_dbfee &&!_ggaga {_addec :=_gb .TraceToDirectObject (_ggfde );if _ ,_ffbaf :=_addec .(*_gb .PdfObjectNull );
!_ffbaf &&_addec !=nil {_ebccf ,_bfdda ,_acde :=_ddcad .buildOutlineTree (_ggfde ,&_abdgf .PdfOutlineTreeNode ,nil ,_fddfe );if _acde !=nil {_dgf .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_acde );
}else {_abdgf .First =_ebccf ;_abdgf .Last =_bfdda ;};};};};return &_abdgf .PdfOutlineTreeNode ,&_abdgf .PdfOutlineTreeNode ,nil ;};func (_bgge *DSS )generateHashMaps ()error {_efagf ,_aagc :=_bgge .generateHashMap (_bgge .Certs );if _aagc !=nil {return _aagc ;
};_fdbga ,_aagc :=_bgge .generateHashMap (_bgge .OCSPs );if _aagc !=nil {return _aagc ;};_cfcaa ,_aagc :=_bgge .generateHashMap (_bgge .CRLs );if _aagc !=nil {return _aagc ;};_bgge ._ggaa =_efagf ;_bgge ._dgcd =_fdbga ;_bgge ._bcbd =_cfcaa ;return nil ;
};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_ebcdc []byte )(_gcgb int ,_bbgcb error );};

// ColorToRGB converts a Lab color to an RGB color.
func (_fbeg *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_ebef :=func (_dcag float64 )float64 {if _dcag >=6.0/29{return _dcag *_dcag *_dcag ;};return 108.0/841*(_dcag -4/29);};_dgcf ,_fcge :=color .(*PdfColorLab );if !_fcge {_dgf .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_dgcf .L ();AStar :=_dgcf .A ();BStar :=_dgcf .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_fbeg .WhitePoint [0]*_ebef (L );Y :=_fbeg .WhitePoint [1]*_ebef (M );Z :=_fbeg .WhitePoint [2]*_ebef (N );_bdeg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gfcb :=-0.969256*X +1.875992*Y +0.041556*Z ;_cbbdg :=0.055648*X +-0.204043*Y +1.057311*Z ;_bdeg =_fg .Min (_fg .Max (_bdeg ,0),1.0);
_gfcb =_fg .Min (_fg .Max (_gfcb ,0),1.0);_cbbdg =_fg .Min (_fg .Max (_cbbdg ,0),1.0);return NewPdfColorDeviceRGB (_bdeg ,_gfcb ,_cbbdg ),nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_gbce PdfModel ;_faea *_gb .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_gb .PdfObjectName ;T *_gb .PdfObjectString ;TU *_gb .PdfObjectString ;TM *_gb .PdfObjectString ;Ff *_gb .PdfObjectInteger ;
V _gb .PdfObject ;DV _gb .PdfObject ;AA _gb .PdfObject ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_faa :=NewPdfAction ();_egc :=&PdfActionURI {};_egc .PdfAction =_faa ;_faa .SetContext (_egc );return _egc ;};

// ToPdfObject returns the PDF representation of the function.
func (_acacc *PdfFunctionType0 )ToPdfObject ()_gb .PdfObject {if _acacc ._gdece ==nil {_acacc ._gdece =&_gb .PdfObjectStream {};};_edgg :=_gb .MakeDict ();_edgg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gb .MakeInteger (0));
_adgd :=&_gb .PdfObjectArray {};for _ ,_dbbdc :=range _acacc .Domain {_adgd .Append (_gb .MakeFloat (_dbbdc ));};_edgg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_adgd );_fdbb :=&_gb .PdfObjectArray {};for _ ,_babg :=range _acacc .Range {_fdbb .Append (_gb .MakeFloat (_babg ));
};_edgg .Set ("\u0052\u0061\u006eg\u0065",_fdbb );_feaee :=&_gb .PdfObjectArray {};for _ ,_adffg :=range _acacc .Size {_feaee .Append (_gb .MakeInteger (int64 (_adffg )));};_edgg .Set ("\u0053\u0069\u007a\u0065",_feaee );_edgg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_gb .MakeInteger (int64 (_acacc .BitsPerSample )));
if _acacc .Order !=1{_edgg .Set ("\u004f\u0072\u0064e\u0072",_gb .MakeInteger (int64 (_acacc .Order )));};_edgg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_acacc ._fbafg ))));_acacc ._gdece .Stream =_acacc ._fbafg ;_acacc ._gdece .PdfObjectDictionary =_edgg ;
return _acacc ._gdece ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_cfb :=NewPdfAnnotation ();_dcb :=&PdfAnnotationFreeText {};_dcb .PdfAnnotation =_cfb ;_dcb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfb .SetContext (_dcb );return _dcb ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cgdc .Lock ();defer _cgdc .Unlock ();_eebce =keywords };

// SetDecode sets the decode image float slice.
func (_ceaa *Image )SetDecode (decode []float64 ){_ceaa ._ggcdd =decode };

// ToPdfObject implements interface PdfModel.
func (_ccf *PdfActionJavaScript )ToPdfObject ()_gb .PdfObject {_ccf .PdfAction .ToPdfObject ();_dbe :=_ccf ._cd ;_ef :=_dbe .PdfObject .(*_gb .PdfObjectDictionary );_ef .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeJavaScript )));_ef .SetIfNotNil ("\u004a\u0053",_ccf .JS );
return _dbe ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToPdfObject implements interface PdfModel.
func (_bfe *PdfActionSubmitForm )ToPdfObject ()_gb .PdfObject {_bfe .PdfAction .ToPdfObject ();_bcb :=_bfe ._cd ;_cee :=_bcb .PdfObject .(*_gb .PdfObjectDictionary );_cee .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeSubmitForm )));if _bfe .F !=nil {_cee .Set ("\u0046",_bfe .F .ToPdfObject ());
};_cee .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bfe .Fields );_cee .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bfe .Flags );return _bcb ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject implements interface PdfModel.
func (_dfd *PdfActionURI )ToPdfObject ()_gb .PdfObject {_dfd .PdfAction .ToPdfObject ();_ac :=_dfd ._cd ;_fgf :=_ac .PdfObject .(*_gb .PdfObjectDictionary );_fgf .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeURI )));_fgf .SetIfNotNil ("\u0055\u0052\u0049",_dfd .URI );
_fgf .SetIfNotNil ("\u0049\u0073\u004da\u0070",_dfd .IsMap );return _ac ;};func (_fdgbe *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _dcbdg []*PdfFieldSignature ;for _ ,_feab :=range _fdgbe .AllFields (){switch _dgae :=_feab .GetContext ().(type ){case *PdfFieldSignature :_eabb :=_dgae ;
_dcbdg =append (_dcbdg ,_eabb );};};return _dcbdg ;};func _dffgeg ()string {_cgdc .Lock ();defer _cgdc .Unlock ();return _gccfdg };func (_egcbf *PdfReader )newPdfActionSetOCGStateFromDict (_gffe *_gb .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_gffe .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_gffe .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};func (_ddbaa *PdfAppender )addNewObject (_gccf _gb .PdfObject ){if _ ,_fbed :=_ddbaa ._cgda [_gccf ];!_fbed {_ddbaa ._ccac =append (_ddbaa ._ccac ,_gccf );_ddbaa ._cgda [_gccf ]=struct{}{};};};

// GetPage returns the PdfPage model for the specified page number.
func (_dcbf *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _dcbf ._gedb .GetCrypter ()!=nil &&!_dcbf ._gedb .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_dcbf ._aegfg )< pageNumber {return nil ,_ga .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_fdbab :=pageNumber -1;if _fdbab < 0{return nil ,_b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_bdafd :=_dcbf .PageList [_fdbab ];
return _bdafd ,nil ;};

// M returns the value of the magenta component of the color.
func (_eedb *PdfColorDeviceCMYK )M ()float64 {return _eedb [1]};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_ebfef DefaultImageHandler )NewGrayImageFromGoImage (goimg _dg .Image )(*Image ,error ){_abed :=goimg .Bounds ();_fddcd :=&Image {Width :int64 (_abed .Dx ()),Height :int64 (_abed .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _ddgcd :=goimg .(type ){case *_dg .Gray :if len (_ddgcd .Pix )!=_abed .Dx ()*_abed .Dy (){_gefcf ,_caeb :=_fe .GrayConverter .Convert (goimg );
if _caeb !=nil {return nil ,_caeb ;};_fddcd .Data =_gefcf .Pix ();}else {_fddcd .Data =_ddgcd .Pix ;};case *_dg .Gray16 :_fddcd .BitsPerComponent =16;if len (_ddgcd .Pix )!=_abed .Dx ()*_abed .Dy ()*2{_eggec ,_abeb :=_fe .Gray16Converter .Convert (goimg );
if _abeb !=nil {return nil ,_abeb ;};_fddcd .Data =_eggec .Pix ();}else {_fddcd .Data =_ddgcd .Pix ;};case _fe .Image :_aggag :=_ddgcd .Base ();if _aggag .ColorComponents ==1{_fddcd .BitsPerComponent =int64 (_aggag .BitsPerComponent );_fddcd .Data =_aggag .Data ;
return _fddcd ,nil ;};_gbbac ,_bbdc :=_fe .GrayConverter .Convert (goimg );if _bbdc !=nil {return nil ,_bbdc ;};_fddcd .Data =_gbbac .Pix ();default:_dbaaa ,_affd :=_fe .GrayConverter .Convert (goimg );if _affd !=nil {return nil ,_affd ;};_fddcd .Data =_dbaaa .Pix ();
};return _fddcd ,nil ;};

// ToPdfObject converts date to a PDF string object.
func (_gbgfb *PdfDate )ToPdfObject ()_gb .PdfObject {_bcdfd :=_b .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_gbgfb ._dcage ,_gbgfb ._fgecg ,_gbgfb ._fdafa ,_gbgfb ._ccbea ,_gbgfb ._aafc ,_gbgfb ._cfddc ,_gbgfb ._gbdde ,_gbgfb ._fefca ,_gbgfb ._fddca );
return _gb .MakeString (_bcdfd );};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_faba :=NewPdfAnnotation ();_agbf :=&PdfAnnotationCaret {};_agbf .PdfAnnotation =_faba ;_agbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_faba .SetContext (_agbf );return _agbf ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_gag :=NewPdfAnnotation ();_dda :=&PdfAnnotationFileAttachment {};_dda .PdfAnnotation =_gag ;_dda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gag .SetContext (_dda );return _dda ;};


// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_addae *PdfFieldButton )IsCheckbox ()bool {return _addae .GetType ()==ButtonTypeCheckbox };

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_gb .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_defbe *_gb .PdfIndirectObject ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_fgd _cf .ReadSeeker ;_fag *_gb .PdfParser ;_ddda *PdfReader ;Reader *PdfReader ;_bcabf []*PdfPage ;_fbc *PdfAcroForm ;_ccgbe *DSS ;_gebf _gb .XrefTable ;_bdg int64 ;_efde int ;_ccac []_gb .PdfObject ;_cgda map[_gb .PdfObject ]struct{};
_dbgc map[_gb .PdfObject ]int64 ;_dbcge map[_gb .PdfObject ]struct{};_cbbf map[_gb .PdfObject ]struct{};_cbbc int64 ;_abad bool ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_gfada *PdfPageResources )SetFontByName (keyName _gb .PdfObjectName ,obj _gb .PdfObject )error {if _gfada .Font ==nil {_gfada .Font =_gb .MakeDict ();};_fecce ,_aeccf :=_gb .TraceToDirectObject (_gfada .Font ).(*_gb .PdfObjectDictionary );if !_aeccf {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gb .TraceToDirectObject (_gfada .Font ));
return _gb .ErrTypeError ;};_fecce .Set (keyName ,obj );return nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_eab :=NewPdfAnnotation ();_abba :=&PdfAnnotationInk {};_abba .PdfAnnotation =_eab ;_abba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eab .SetContext (_abba );return _abba ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_ccbbc *PdfColorspaceLab )DecodeArray ()[]float64 {_gaebbd :=[]float64 {0,100};if _ccbbc .Range !=nil &&len (_ccbbc .Range )==4{_gaebbd =append (_gaebbd ,_ccbbc .Range ...);}else {_gaebbd =append (_gaebbd ,-100,100,-100,100);};return _gaebbd ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _gb .PdfObject ;MK _gb .PdfObject ;A _gb .PdfObject ;AA _gb .PdfObject ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_ggee *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ggee .Alternate ==nil {_dgf .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ggee .N ==1{_dgf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_bcee :=NewPdfColorspaceDeviceGray ();return _bcee .ColorToRGB (color );}else if _ggee .N ==3{_dgf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _ggee .N ==4{_dgf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_gfcg :=NewPdfColorspaceDeviceCMYK ();return _gfcg .ColorToRGB (color );}else {return nil ,_ga .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dgf .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ggee );
return _ggee .Alternate .ColorToRGB (color );};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_dbfg :=NewPdfAnnotation ();_cbcb :=&PdfAnnotationTrapNet {};_cbcb .PdfAnnotation =_dbfg ;_dbfg .SetContext (_cbcb );return _cbcb ;};func _acfd (_gced _gb .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_dgf .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_gced .String (),_gced );
_fafc :=NewPdfColorspaceSpecialPattern ();if _egfgc ,_bbeba :=_gced .(*_gb .PdfIndirectObject );_bbeba {_fafc ._dfbd =_egfgc ;};_gced =_gb .TraceToDirectObject (_gced );if _caddb ,_fffed :=_gced .(*_gb .PdfObjectName );_fffed {if *_caddb !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _fafc ,nil ;};_fece ,_eeff :=_gced .(*_gb .PdfObjectArray );if !_eeff {_dgf .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_gced );
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _fece .Len ()!=1&&_fece .Len ()!=2{_dgf .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_fece );
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_gced =_fece .Get (0);if _eded ,_gbabc :=_gced .(*_gb .PdfObjectName );_gbabc {if *_eded !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dgf .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_eded );
return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _fece .Len ()> 1{_gced =_fece .Get (1);_gced =_gb .TraceToDirectObject (_gced );_addb ,_eeed :=NewPdfColorspaceFromPdfObject (_gced );if _eeed !=nil {return nil ,_eeed ;
};_fafc .UnderlyingCS =_addb ;};_dgf .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_fafc .UnderlyingCS );
return _fafc ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_ecga *PdfFont )GetCharMetrics (code _fed .CharCode )(CharMetrics ,bool ){var _fcgaf _ad .CharMetrics ;switch _bada :=_ecga ._cbab .(type ){case *pdfFontSimple :if _ecee ,_dgfeg :=_bada .GetCharMetrics (code );_dgfeg {return _ecee ,_dgfeg ;};case *pdfFontType0 :if _fedea ,_gcbd :=_bada .GetCharMetrics (code );
_gcbd {return _fedea ,_gcbd ;};case *pdfCIDFontType0 :if _gdgeg ,_bbef :=_bada .GetCharMetrics (code );_bbef {return _gdgeg ,_bbef ;};case *pdfCIDFontType2 :if _deab ,_cffaa :=_bada .GetCharMetrics (code );_cffaa {return _deab ,_cffaa ;};default:_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_ecga ._cbab );
return _fcgaf ,false ;};if _bcca ,_edbde :=_ecga .GetFontDescriptor ();_edbde ==nil &&_bcca !=nil {return _ad .CharMetrics {Wx :_bcca ._gabd },true ;};_dgf .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_ecga );
return _fcgaf ,false ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_efgec :_gb .MakeIndirectObject (_gb .MakeDict ())};};

// ToPdfObject returns the PDF representation of the function.
func (_egadcc *PdfFunctionType3 )ToPdfObject ()_gb .PdfObject {_dfeb :=_gb .MakeDict ();_dfeb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gb .MakeInteger (3));_ceebe :=&_gb .PdfObjectArray {};for _ ,_dacac :=range _egadcc .Domain {_ceebe .Append (_gb .MakeFloat (_dacac ));
};_dfeb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ceebe );if _egadcc .Range !=nil {_egfgb :=&_gb .PdfObjectArray {};for _ ,_bafab :=range _egadcc .Range {_egfgb .Append (_gb .MakeFloat (_bafab ));};_dfeb .Set ("\u0052\u0061\u006eg\u0065",_egfgb );};
if _egadcc .Functions !=nil {_bgcbca :=&_gb .PdfObjectArray {};for _ ,_bacc :=range _egadcc .Functions {_bgcbca .Append (_bacc .ToPdfObject ());};_dfeb .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_bgcbca );};if _egadcc .Bounds !=nil {_cdbdc :=&_gb .PdfObjectArray {};
for _ ,_fgadb :=range _egadcc .Bounds {_cdbdc .Append (_gb .MakeFloat (_fgadb ));};_dfeb .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_cdbdc );};if _egadcc .Encode !=nil {_ecgaf :=&_gb .PdfObjectArray {};for _ ,_dadc :=range _egadcc .Encode {_ecgaf .Append (_gb .MakeFloat (_dadc ));
};_dfeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_ecgaf );};if _egadcc ._ecdd !=nil {_egadcc ._ecdd .PdfObject =_dfeb ;return _egadcc ._ecdd ;};return _dfeb ;};func _cffac ()string {_cgdc .Lock ();defer _cgdc .Unlock ();return _fcecf };func _aecb (_feed *_fe .ImageBase )(_ccedc Image ){_ccedc .Width =int64 (_feed .Width );
_ccedc .Height =int64 (_feed .Height );_ccedc .BitsPerComponent =int64 (_feed .BitsPerComponent );_ccedc .ColorComponents =_feed .ColorComponents ;_ccedc .Data =_feed .Data ;_ccedc ._ggcdd =_feed .Decode ;_ccedc ._abecg =_feed .Alpha ;return _ccedc ;};
const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);func (_bbd *PdfReader )newPdfAnnotationTextFromDict (_gaga *_gb .PdfObjectDictionary )(*PdfAnnotationText ,error ){_aec :=PdfAnnotationText {};
_gggff ,_cfec :=_bbd .newPdfAnnotationMarkupFromDict (_gaga );if _cfec !=nil {return nil ,_cfec ;};_aec .PdfAnnotationMarkup =_gggff ;_aec .Open =_gaga .Get ("\u004f\u0070\u0065\u006e");_aec .Name =_gaga .Get ("\u004e\u0061\u006d\u0065");_aec .State =_gaga .Get ("\u0053\u0074\u0061t\u0065");
_aec .StateModel =_gaga .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_aec ,nil ;};

// Y returns the value of the yellow component of the color.
func (_cagf *PdfColorDeviceCMYK )Y ()float64 {return _cagf [2]};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_gfee :=&PdfFilespec {};_gfee ._ebc =_gb .MakeIndirectObject (_gb .MakeDict ());return _gfee ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_ecegd *Image )GetParamsDict ()*_gb .PdfObjectDictionary {_dcdee :=_gb .MakeDict ();_dcdee .Set ("\u0057\u0069\u0064t\u0068",_gb .MakeInteger (_ecegd .Width ));_dcdee .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gb .MakeInteger (_ecegd .Height ));
_dcdee .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gb .MakeInteger (int64 (_ecegd .ColorComponents )));_dcdee .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gb .MakeInteger (_ecegd .BitsPerComponent ));
return _dcdee ;};func (_gabg *Image )samplesAddPadding (_fcbbg []uint32 )[]uint32 {_adcf :=_fe .BytesPerLine (int (_gabg .Width ),int (_gabg .BitsPerComponent ),_gabg .ColorComponents )*(8/int (_gabg .BitsPerComponent ));_ebce :=_adcf *int (_gabg .Height );
if len (_fcbbg )==_ebce {return _fcbbg ;};_aabda :=make ([]uint32 ,_ebce );_dfccf :=int (_gabg .Width )*_gabg .ColorComponents ;for _fbea :=0;_fbea < int (_gabg .Height );_fbea ++{_ededd :=_fbea *int (_gabg .Width );_adbdb :=_fbea *_adcf ;for _ddga :=0;
_ddga < _dfccf ;_ddga ++{_aabda [_adbdb +_ddga ]=_fcbbg [_ededd +_ddga ];};};return _aabda ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_agcc *PdfPattern )GetContext ()PdfModel {return _agcc ._bcaggd };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_bbde *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_cdefb :=PdfColorLab {l ,a ,b };return &_cdefb };

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_gbbg *PdfFieldButton )IsRadio ()bool {return _gbbg .GetType ()==ButtonTypeRadio };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_ffcdg *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdcca ,_gaab :=_gb .GetNumbersAsFloat (objects );
if _gaab !=nil {return nil ,_gaab ;};return _ffcdg .ColorFromFloats (_fdcca );};type pdfFont interface{_ad .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_gb .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToPdfObject returns a stream object.
func (_eeeef *XObjectForm )ToPdfObject ()_gb .PdfObject {_fbbag :=_eeeef ._fadf ;_edgdd :=_fbbag .PdfObjectDictionary ;if _eeeef .Filter !=nil {_edgdd =_eeeef .Filter .MakeStreamDict ();_fbbag .PdfObjectDictionary =_edgdd ;};_edgdd .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_edgdd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0046\u006f\u0072\u006d"));_edgdd .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_eeeef .FormType );_edgdd .SetIfNotNil ("\u0042\u0042\u006f\u0078",_eeeef .BBox );_edgdd .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_eeeef .Matrix );
if _eeeef .Resources !=nil {_edgdd .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eeeef .Resources .ToPdfObject ());};_edgdd .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_eeeef .Group );_edgdd .SetIfNotNil ("\u0052\u0065\u0066",_eeeef .Ref );
_edgdd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_eeeef .MetaData );_edgdd .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_eeeef .PieceInfo );_edgdd .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_eeeef .LastModified );
_edgdd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_eeeef .StructParent );_edgdd .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_eeeef .StructParents );_edgdd .SetIfNotNil ("\u004f\u0050\u0049",_eeeef .OPI );
_edgdd .SetIfNotNil ("\u004f\u0043",_eeeef .OC );_edgdd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eeeef .Name );_edgdd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_eeeef .Stream ))));_fbbag .Stream =_eeeef .Stream ;return _fbbag ;
};

// ToPdfObject implements interface PdfModel.
func (_deff *PdfAnnotationSound )ToPdfObject ()_gb .PdfObject {_deff .PdfAnnotation .ToPdfObject ();_cfecf :=_deff ._dccf ;_fcdc :=_cfecf .PdfObject .(*_gb .PdfObjectDictionary );_deff .PdfAnnotationMarkup .appendToPdfDictionary (_fcdc );_fcdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053\u006f\u0075n\u0064"));
_fcdc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_deff .Sound );_fcdc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_deff .Name );return _cfecf ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_abdfd pdfFontType0 )GetRuneMetrics (r rune )(_ad .CharMetrics ,bool ){if _abdfd .DescendantFont ==nil {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_abdfd );
return _ad .CharMetrics {},false ;};return _abdfd .DescendantFont .GetRuneMetrics (r );};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// SetAction sets the PDF action for the annotation link.
func (_cbe *PdfAnnotationLink )SetAction (action *PdfAction ){_cbe ._ace =action ;if action ==nil {_cbe .A =nil ;};};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_dcbad *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _dcbad ._cafdf !=nil {return _dcbad ._cafdf ,nil ;};if _dcbad .Annots ==nil {_dcbad ._cafdf =[]*PdfAnnotation {};return nil ,nil ;};if _dcbad ._aefcc ==nil {_dcbad ._cafdf =[]*PdfAnnotation {};
return nil ,nil ;};_bdgd ,_aacc :=_dcbad ._aefcc .loadAnnotations (_dcbad .Annots );if _aacc !=nil {return nil ,_aacc ;};if _bdgd ==nil {_dcbad ._cafdf =[]*PdfAnnotation {};};_dcbad ._cafdf =_bdgd ;return _dcbad ._cafdf ,nil ;};func _faef (_ggcg *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_ggcg }};


// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_dgfb :=NewPdfAction ();_ggg :=&PdfActionGoTo {};_ggg .PdfAction =_dgfb ;_dgfb .SetContext (_ggg );return _ggg ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_dgfd *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_dgfd .updateObjectsDeep (dss .ToPdfObject (),nil );};_dgfd ._ccgbe =dss ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_adaba *PdfPageResources )GetExtGState (keyName _gb .PdfObjectName )(_gb .PdfObject ,bool ){if _adaba .ExtGState ==nil {return nil ,false ;};_bddgd ,_degdc :=_gb .TraceToDirectObject (_adaba .ExtGState ).(*_gb .PdfObjectDictionary );if !_degdc {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_adaba .ExtGState );
return nil ,false ;};if _cbbb :=_bddgd .Get (keyName );_cbbb !=nil {return _cbbb ,true ;};return nil ,false ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// MergePageWith appends page content to source Pdf file page content.
func (_bddg *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_babd :=pageNum -1;var _efbg *PdfPage ;for _gafb ,_feff :=range _bddg ._bcabf {if _gafb ==_babd {_efbg =_feff ;};};if _efbg ==nil {return _b .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _efbg ._gggeb !=nil &&_efbg ._gggeb .GetParser ()==_bddg ._ddda ._gedb {_efbg =_efbg .Duplicate ();_bddg ._bcabf [_babd ]=_efbg ;};page =page .Duplicate ();_eceb :=_baae (_efbg );_ccbg :=_baae (page );_edeba :=make (map[_gb .PdfObjectName ]_gb .PdfObjectName );
for _gbde :=range _ccbg {if _ ,_dbce :=_eceb [_gbde ];_dbce {for _cdcd :=1;true ;_cdcd ++{_gfcf :=_gb .PdfObjectName (string (_gbde )+_fa .Itoa (_cdcd ));if _ ,_cdga :=_eceb [_gfcf ];!_cdga {_edeba [_gbde ]=_gfcf ;break ;};};};};_fgc ,_eadf :=page .GetContentStreams ();
if _eadf !=nil {return _eadf ;};_dgcae ,_eadf :=_efbg .GetContentStreams ();if _eadf !=nil {return _eadf ;};for _aagd ,_aaeb :=range _fgc {for _dgff ,_gbdec :=range _edeba {_aaeb =_fd .Replace (_aaeb ,"\u002f"+string (_dgff ),"\u002f"+string (_gbdec ),-1);
};_fgc [_aagd ]=_aaeb ;};_dgcae =append (_dgcae ,_fgc ...);if _eafd :=_efbg .SetContentStreams (_dgcae ,_gb .NewFlateEncoder ());_eafd !=nil {return _eafd ;};_efbg ._cafdf =append (_efbg ._cafdf ,page ._cafdf ...);if _efbg .Resources ==nil {_efbg .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_efbg .Resources .Font =_bddg .mergeResources (_efbg .Resources .Font ,page .Resources .Font ,_edeba );_efbg .Resources .XObject =_bddg .mergeResources (_efbg .Resources .XObject ,page .Resources .XObject ,_edeba );_efbg .Resources .Properties =_bddg .mergeResources (_efbg .Resources .Properties ,page .Resources .Properties ,_edeba );
if _efbg .Resources .ProcSet ==nil {_efbg .Resources .ProcSet =page .Resources .ProcSet ;};_efbg .Resources .Shading =_bddg .mergeResources (_efbg .Resources .Shading ,page .Resources .Shading ,_edeba );_efbg .Resources .ExtGState =_bddg .mergeResources (_efbg .Resources .ExtGState ,page .Resources .ExtGState ,_edeba );
};_dbeea ,_eadf :=_efbg .GetMediaBox ();if _eadf !=nil {return _eadf ;};_ffcd ,_eadf :=page .GetMediaBox ();if _eadf !=nil {return _eadf ;};var _ccff bool ;if _dbeea .Llx > _ffcd .Llx {_dbeea .Llx =_ffcd .Llx ;_ccff =true ;};if _dbeea .Lly > _ffcd .Lly {_dbeea .Lly =_ffcd .Lly ;
_ccff =true ;};if _dbeea .Urx < _ffcd .Urx {_dbeea .Urx =_ffcd .Urx ;_ccff =true ;};if _dbeea .Ury < _ffcd .Ury {_dbeea .Ury =_ffcd .Ury ;_ccff =true ;};if _ccff {_efbg .MediaBox =_dbeea ;};return nil ;};func (_fdcd *PdfReader )newPdfAnnotationPolygonFromDict (_ccec *_gb .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_agbe :=PdfAnnotationPolygon {};
_adga ,_aaee :=_fdcd .newPdfAnnotationMarkupFromDict (_ccec );if _aaee !=nil {return nil ,_aaee ;};_agbe .PdfAnnotationMarkup =_adga ;_agbe .Vertices =_ccec .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_agbe .LE =_ccec .Get ("\u004c\u0045");
_agbe .BS =_ccec .Get ("\u0042\u0053");_agbe .IC =_ccec .Get ("\u0049\u0043");_agbe .BE =_ccec .Get ("\u0042\u0045");_agbe .IT =_ccec .Get ("\u0049\u0054");_agbe .Measure =_ccec .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_agbe ,nil ;};func (_ggbcf *LTV )generateVRIKey (_geage *PdfSignature )(string ,error ){_aaad ,_egbcd :=_fdafb (_geage .Contents .Bytes ());
if _egbcd !=nil {return "",_egbcd ;};return _fd .ToUpper (_a .EncodeToString (_aaad )),nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_bagdf :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_bagdf .N =N ;return _bagdf ,nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_cgg *PdfAnnotationWidget )Field ()*PdfField {return _cgg ._fcd };func (_dcgf *PdfReader )newPdfAnnotationTrapNetFromDict (_bgc *_gb .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_dfg :=PdfAnnotationTrapNet {};return &_dfg ,nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_affc *PdfAnnotation )ToPdfObject ()_gb .PdfObject {_aceeae :=_affc ._dccf ;_cgee :=_aceeae .PdfObject .(*_gb .PdfObjectDictionary );_cgee .Clear ();_cgee .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0041\u006e\u006eo\u0074"));_cgee .SetIfNotNil ("\u0052\u0065\u0063\u0074",_affc .Rect );
_cgee .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_affc .Contents );_cgee .SetIfNotNil ("\u0050",_affc .P );_cgee .SetIfNotNil ("\u004e\u004d",_affc .NM );_cgee .SetIfNotNil ("\u004d",_affc .M );_cgee .SetIfNotNil ("\u0046",_affc .F );
_cgee .SetIfNotNil ("\u0041\u0050",_affc .AP );_cgee .SetIfNotNil ("\u0041\u0053",_affc .AS );_cgee .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_affc .Border );_cgee .SetIfNotNil ("\u0043",_affc .C );_cgee .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_affc .StructParent );
_cgee .SetIfNotNil ("\u004f\u0043",_affc .OC );return _aceeae ;};

// PartialName returns the partial name of the field.
func (_bffc *PdfField )PartialName ()string {_gdec :="";if _bffc .T !=nil {_gdec =_bffc .T .Decoded ();}else {_dgf .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _gdec ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_ecgb :=NewPdfAnnotation ();_bbf :=&PdfAnnotationStrikeOut {};_bbf .PdfAnnotation =_ecgb ;_bbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecgb .SetContext (_bbf );return _bbf ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_bce :=NewPdfAnnotation ();_fdea :=&PdfAnnotationProjection {};_fdea .PdfAnnotation =_bce ;_fdea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bce .SetContext (_fdea );return _fdea ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_gb .PdfObjectArray ;Domain *_gb .PdfObjectArray ;Function []PdfFunction ;Extend *_gb .PdfObjectArray ;};func _fagbgf (_bgeg _gb .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_bfdb :=NewPdfColorspaceSpecialSeparation ();
if _bgag ,_ebgeg :=_bgeg .(*_gb .PdfIndirectObject );_ebgeg {_bfdb ._efag =_bgag ;};_bgeg =_gb .TraceToDirectObject (_bgeg );_ecggf ,_dec :=_bgeg .(*_gb .PdfObjectArray );if !_dec {return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _ecggf .Len ()!=4{return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_bgeg =_ecggf .Get (0);
_fegb ,_dec :=_bgeg .(*_gb .PdfObjectName );if !_dec {return nil ,_b .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_fegb !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_b .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_bgeg =_ecggf .Get (1);_fegb ,_dec =_bgeg .(*_gb .PdfObjectName );if !_dec {return nil ,_b .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_bfdb .ColorantName =_fegb ;_bgeg =_ecggf .Get (2);_ggefc ,_bfbe :=NewPdfColorspaceFromPdfObject (_bgeg );if _bfbe !=nil {return nil ,_bfbe ;};_bfdb .AlternateSpace =_ggefc ;_eddeb ,_bfbe :=_ceagc (_ecggf .Get (3));if _bfbe !=nil {return nil ,_bfbe ;
};_bfdb .TintTransform =_eddeb ;return _bfdb ,nil ;};func (_acf *PdfReader )newPdfActionRenditionFromDict (_bdd *_gb .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_bdd .Get ("\u0052"),AN :_bdd .Get ("\u0041\u004e"),OP :_bdd .Get ("\u004f\u0050"),JS :_bdd .Get ("\u004a\u0053")},nil ;
};func _adcde (_ffcg _gb .PdfObject )(*PdfColorspaceICCBased ,error ){_fbfg :=&PdfColorspaceICCBased {};if _ecgc ,_baga :=_ffcg .(*_gb .PdfIndirectObject );_baga {_fbfg ._aeca =_ecgc ;};_ffcg =_gb .TraceToDirectObject (_ffcg );_eefd ,_cdbe :=_ffcg .(*_gb .PdfObjectArray );
if !_cdbe {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eefd .Len ()!=2{return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_ffcg =_gb .TraceToDirectObject (_eefd .Get (0));_fggf ,_cdbe :=_ffcg .(*_gb .PdfObjectName );if !_cdbe {return nil ,_b .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_fggf !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_b .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_ffcg =_eefd .Get (1);
_ggcc ,_cdbe :=_gb .GetStream (_ffcg );if !_cdbe {_dgf .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_ffcg );
return nil ,_b .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bfbf :=_ggcc .PdfObjectDictionary ;_dcee ,_cdbe :=_bfbf .Get ("\u004e").(*_gb .PdfObjectInteger );
if !_cdbe {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_dcee !=1&&*_dcee !=3&&*_dcee !=4{return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_fbfg .N =int (*_dcee );if _ddcb :=_bfbf .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_ddcb !=nil {_cddec ,_abafa :=NewPdfColorspaceFromPdfObject (_ddcb );if _abafa !=nil {return nil ,_abafa ;};_fbfg .Alternate =_cddec ;};if _aaaee :=_bfbf .Get ("\u0052\u0061\u006eg\u0065");
_aaaee !=nil {_aaaee =_gb .TraceToDirectObject (_aaaee );_abf ,_adda :=_aaaee .(*_gb .PdfObjectArray );if !_adda {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _abf .Len ()!=2*_fbfg .N {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_ebac ,_becf :=_abf .GetAsFloat64Slice ();if _becf !=nil {return nil ,_becf ;};_fbfg .Range =_ebac ;}else {_fbfg .Range =make ([]float64 ,2*_fbfg .N );for _caaa :=0;_caaa < _fbfg .N ;_caaa ++{_fbfg .Range [2*_caaa ]=0.0;_fbfg .Range [2*_caaa +1]=1.0;
};};if _fefg :=_bfbf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fefg !=nil {_bcad ,_dedaa :=_fefg .(*_gb .PdfObjectStream );if !_dedaa {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_fbfg .Metadata =_bcad ;};_gcdaf ,_fecb :=_gb .DecodeStream (_ggcc );if _fecb !=nil {return nil ,_fecb ;};_fbfg .Data =_gcdaf ;_fbfg ._aafd =_ggcc ;return _fbfg ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_effdd *PdfWriter )GetOptimizer ()Optimizer {return _effdd ._cccfc };func (_gbdeea *PdfSignature )extractChainFromPKCS7 ()([]*_g .Certificate ,error ){_gbbgf ,_egcbfc :=_fc .Parse (_gbdeea .Contents .Bytes ());if _egcbfc !=nil {return nil ,_egcbfc ;
};return _gbbgf .Certificates ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fffe *PdfAnnotationWidget )ToPdfObject ()_gb .PdfObject {_fffe .PdfAnnotation .ToPdfObject ();_acd :=_fffe ._dccf ;_bafd :=_acd .PdfObject .(*_gb .PdfObjectDictionary );if _fffe ._fcac {return _acd ;};_fffe ._fcac =true ;_bafd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_bafd .SetIfNotNil ("\u0048",_fffe .H );_bafd .SetIfNotNil ("\u004d\u004b",_fffe .MK );_bafd .SetIfNotNil ("\u0041",_fffe .A );_bafd .SetIfNotNil ("\u0041\u0041",_fffe .AA );_bafd .SetIfNotNil ("\u0042\u0053",_fffe .BS );_dfdc :=_fffe .Parent ;if _fffe ._fcd !=nil {if _fffe ._fcd ._faea ==_fffe ._dccf {_fffe ._fcd .ToPdfObject ();
};_dfdc =_fffe ._fcd .GetContainingPdfObject ();};if _dfdc !=_acd {_bafd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dfdc );};_fffe ._fcac =false ;return _acd ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_dbeeb *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _dbeeb .UnderlyingCS .GetNumComponents ();};

// ToInteger convert to an integer format.
func (_bff *PdfColorDeviceGray )ToInteger (bits int )uint32 {_ddgd :=_fg .Pow (2,float64 (bits ))-1;return uint32 (_ddgd *_bff .Val ());};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_gcdb *LTV )Enable (sig *PdfSignature ,extraCerts []*_g .Certificate )error {if _ccefd :=_gcdb .validateSig (sig );_ccefd !=nil {return _ccefd ;};_cddd ,_dbfd :=_gcdb .generateVRIKey (sig );if _dbfd !=nil {return _dbfd ;};if _ ,_dcagf :=_gcdb ._egce .VRI [_cddd ];
_dcagf &&_gcdb .SkipExisting {return nil ;};_eafac ,_dbfd :=sig .GetCerts ();if _dbfd !=nil {return _dbfd ;};return _gcdb .enable (_eafac ,extraCerts ,_cddd );};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_gb .PdfObjectBool ;SigFlags *_gb .PdfObjectInteger ;CO *_gb .PdfObjectArray ;DR *PdfPageResources ;DA *_gb .PdfObjectString ;Q *_gb .PdfObjectInteger ;XFA _gb .PdfObject ;_efgec *_gb .PdfIndirectObject ;
};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_bede :=NewPdfAction ();_aab :=&PdfActionMovie {};_aab .PdfAction =_bede ;_bede .SetContext (_aab );return _aab ;};func (_aabg *pdfFontType0 )baseFields ()*fontCommon {return &_aabg .fontCommon };func (_fdce *DSS )generateHashMap (_gggc []*_gb .PdfObjectStream )(map[string ]*_gb .PdfObjectStream ,error ){_dceg :=map[string ]*_gb .PdfObjectStream {};
for _ ,_bggc :=range _gggc {_bcce ,_eeaf :=_gb .DecodeStream (_bggc );if _eeaf !=nil {return nil ,_eeaf ;};_agaea ,_eeaf :=_fdafb (_bcce );if _eeaf !=nil {return nil ,_eeaf ;};_dceg [string (_agaea )]=_bggc ;};return _dceg ,nil ;};

// A returns the value of the A component of the color.
func (_cabf *PdfColorLab )A ()float64 {return _cabf [1]};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_daef :=&PdfColorspaceDeviceN {};return _daef };

// Encoder returns the font's text encoder.
func (_egec pdfCIDFontType0 )Encoder ()_fed .TextEncoder {return _egec ._geda };

// Evaluate runs the function on the passed in slice and returns the results.
func (_cecc *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_cecc .NumInputs {_dgf .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ga .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _cecc ._fega ==nil {_gbaga :=_cecc .processSamples ();if _gbaga !=nil {return nil ,_gbaga ;};};_cffc :=_cecc .Encode ;if _cffc ==nil {_cffc =[]float64 {};
for _abaeg :=0;_abaeg < len (_cecc .Size );_abaeg ++{_cffc =append (_cffc ,0);_cffc =append (_cffc ,float64 (_cecc .Size [_abaeg ]-1));};};_dggc :=_cecc .Decode ;if _dggc ==nil {_dggc =_cecc .Range ;};_ddbfec :=make ([]int ,len (x ));for _abbafb :=0;_abbafb < len (x );
_abbafb ++{_gebfc :=x [_abbafb ];_cfcad :=_fg .Min (_fg .Max (_gebfc ,_cecc .Domain [2*_abbafb ]),_cecc .Domain [2*_abbafb +1]);_gaca :=_fe .LinearInterpolate (_cfcad ,_cecc .Domain [2*_abbafb ],_cecc .Domain [2*_abbafb +1],_cffc [2*_abbafb ],_cffc [2*_abbafb +1]);
_adcdab :=_fg .Min (_fg .Max (_gaca ,0),float64 (_cecc .Size [_abbafb ]-1));_feffa :=int (_fg .Floor (_adcdab +0.5));if _feffa < 0{_feffa =0;}else if _feffa > _cecc .Size [_abbafb ]{_feffa =_cecc .Size [_abbafb ]-1;};_ddbfec [_abbafb ]=_feffa ;};_fgcbe :=_ddbfec [0];
for _bfdgd :=1;_bfdgd < _cecc .NumInputs ;_bfdgd ++{_cdgg :=_ddbfec [_bfdgd ];for _adged :=0;_adged < _bfdgd ;_adged ++{_cdgg *=_cecc .Size [_adged ];};_fgcbe +=_cdgg ;};_fgcbe *=_cecc .NumOutputs ;var _aeefd []float64 ;for _gcaae :=0;_gcaae < _cecc .NumOutputs ;
_gcaae ++{_afffe :=_fgcbe +_gcaae ;if _afffe >=len (_cecc ._fega ){_dgf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_gadgc :=_cecc ._fega [_afffe ];_gadgf :=_fe .LinearInterpolate (float64 (_gadgc ),0,_fg .Pow (2,float64 (_cecc .BitsPerSample )),_dggc [2*_gcaae ],_dggc [2*_gcaae +1]);_bccaf :=_fg .Min (_fg .Max (_gadgf ,_cecc .Range [2*_gcaae ]),_cecc .Range [2*_gcaae +1]);
_aeefd =append (_aeefd ,_bccaf );};return _aeefd ,nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_bdddd *PdfTilingPattern )SetContentStream (content []byte ,encoder _gb .StreamEncoder )error {_eafc ,_cege :=_bdddd ._agab .(*_gb .PdfObjectStream );if !_cege {_dgf .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdddd ._agab );
return _gb .ErrTypeError ;};if encoder ==nil {encoder =_gb .NewRawEncoder ();};_caece :=_eafc .PdfObjectDictionary ;_dfcge :=encoder .MakeStreamDict ();_caece .Merge (_dfcge );_cebg ,_faee :=encoder .EncodeBytes (content );if _faee !=nil {return _faee ;
};_caece .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_cebg ))));_eafc .Stream =_cebg ;return nil ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_afgaa *PdfPage )GetContentStreamObjs ()[]_gb .PdfObject {if _afgaa .Contents ==nil {return nil ;};_dgga :=_gb .TraceToDirectObject (_afgaa .Contents );if _gfgb ,_ggade :=_dgga .(*_gb .PdfObjectArray );_ggade {return _gfgb .Elements ();};return []_gb .PdfObject {_dgga };
};func (_ffec *PdfReader )newPdfAnnotationUnderlineFromDict (_defd *_gb .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_adfd :=PdfAnnotationUnderline {};_gdac ,_degb :=_ffec .newPdfAnnotationMarkupFromDict (_defd );if _degb !=nil {return nil ,_degb ;
};_adfd .PdfAnnotationMarkup =_gdac ;_adfd .QuadPoints =_defd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_adfd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_agde *PdfActionSetOCGState )ToPdfObject ()_gb .PdfObject {_agde .PdfAction .ToPdfObject ();_ed :=_agde ._cd ;_gbf :=_ed .PdfObject .(*_gb .PdfObjectDictionary );_gbf .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeSetOCGState )));_gbf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_agde .State );
_gbf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_agde .PreserveRB );return _ed ;};

// SetVersion sets the PDF version of the output file.
func (_dgfdg *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_dgfdg ._cgde =majorVersion ;_dgfdg ._dcggb =minorVersion ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_dbfgfc *PdfPageResources )AddExtGState (gsName _gb .PdfObjectName ,gsDict _gb .PdfObject )error {if _dbfgfc .ExtGState ==nil {_dbfgfc .ExtGState =_gb .MakeDict ();};_ffbc :=_dbfgfc .ExtGState ;_dcccg ,_ccdc :=_gb .TraceToDirectObject (_ffbc ).(*_gb .PdfObjectDictionary );
if !_ccdc {_dgf .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_ffbc ,_gb .TraceToDirectObject (_ffbc ));
return _gb .ErrTypeError ;};_dcccg .Set (gsName ,gsDict );return nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_gb .PdfObjectArray ;TI *_gb .PdfObjectInteger ;I *_gb .PdfObjectArray ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_eadcd *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _eadcd .fill (provider ,appGen );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bdbf *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcdgg :=vals [0];if _dcdgg < 0.0||_dcdgg > 1.0{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bbdba :=NewPdfColorCalGray (_dcdgg );return _bbdba ,nil ;};func (_gbcb *PdfReader )newPdfAnnotationWatermarkFromDict (_fgfd *_gb .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_eac :=PdfAnnotationWatermark {};_eac .FixedPrint =_fgfd .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_eac ,nil ;};

// SetContext sets the sub annotation (context).
func (_bfd *PdfAnnotation )SetContext (ctx PdfModel ){_bfd ._defe =ctx };

// Initialize initializes the PdfSignature.
func (_aged *PdfSignature )Initialize ()error {if _aged .Handler ==nil {return _ga .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _aged .Handler .InitSignature (_aged );};

// GetFontDescriptor returns the font descriptor for `font`.
func (_aaebf PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _aaebf ._cbab .getFontDescriptor (),nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);var (_cgdc _c .Mutex ;_gccfdg ="";_gdfccc _f .Time ;_fbae ="";_eebce ="";_bacgg _f .Time ;_ccdef ="";_fcecf ="";_ecbfg ="";);

// WriteToFile writes the output PDF to file.
func (_dedf *PdfWriter )WriteToFile (outputFilePath string )error {_bfcae ,_cbgga :=_fb .Create (outputFilePath );if _cbgga !=nil {return _cbgga ;};defer _bfcae .Close ();return _dedf .Write (_bfcae );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _gb .PdfObject ;_acag []byte ;_fddb *_gb .PdfIndirectObject ;};func (_feadc *PdfWriter )addObject (_afaca _gb .PdfObject )bool {_gcbee :=_feadc .hasObject (_afaca );if !_gcbee {_abadc :=_gb .ResolveReferencesDeep (_afaca ,_feadc ._bgcdbd );
if _abadc !=nil {_dgf .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_abadc );};_feadc ._eeafb =append (_feadc ._eeafb ,_afaca );_feadc ._dbbcgf [_afaca ]=struct{}{};return true ;};return false ;
};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_acega *modelManager )GetModelFromPrimitive (primitive _gb .PdfObject )PdfModel {model ,_bcdb :=_acega ._dbfgg [primitive ];if !_bcdb {return nil ;};return model ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_ebfae :=appender .Reader .DSS ;if _ebfae ==nil {_ebfae =NewDSS ();};if _acegg :=_ebfae .generateHashMaps ();_acegg !=nil {return nil ,_acegg ;};return &LTV {CertClient :_ea .NewCertClient (),OCSPClient :_ea .NewOCSPClient (),CRLClient :_ea .NewCRLClient (),SkipExisting :true ,_aaaed :appender ,_egce :_ebfae },nil ;
};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_dcage int64 ;_fgecg int64 ;_fdafa int64 ;_ccbea int64 ;_aafc int64 ;_cfddc int64 ;_gbdde byte ;_fefca int64 ;_fddca int64 ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gb .PdfObject ;IC _gb .PdfObject ;RO _gb .PdfObject ;OverlayText _gb .PdfObject ;Repeat _gb .PdfObject ;DA _gb .PdfObject ;Q _gb .PdfObject ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_acdbf :=&PdfSignature {Type :_gb .MakeName ("\u0053\u0069\u0067"),Handler :handler };_gffdf :=&pdfSignDictionary {PdfObjectDictionary :_gb .MakeDict (),_aeece :&handler ,_gfebb :_acdbf };_acdbf ._cbdae =_gb .MakeIndirectObject (_gffdf );
return _acdbf ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_gdffe *PdfColorspaceDeviceNAttributes )ToPdfObject ()_gb .PdfObject {_fage :=_gb .MakeDict ();if _gdffe .Subtype !=nil {_fage .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gdffe .Subtype );};_fage .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_gdffe .Colorants );
_fage .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_gdffe .Process );_fage .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_gdffe .MixingHints );if _gdffe ._egbf !=nil {_gdffe ._egbf .PdfObject =_fage ;return _gdffe ._egbf ;
};return _fage ;};

// C returns the value of the C component of the color.
func (_abdeg *PdfColorCalRGB )C ()float64 {return _abdeg [2]};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_dfef *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_gb .StreamEncoder ,error ){_fabeb ,_bbdgb :=_dfef ._agab .(*_gb .PdfObjectStream );if !_bbdgb {_dgf .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfef ._agab );
return nil ,nil ,_gb .ErrTypeError ;};_agffg ,_dfbdf :=_gb .DecodeStream (_fabeb );if _dfbdf !=nil {_dgf .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_dfbdf );
return nil ,nil ,_dfbdf ;};_bbgge ,_dfbdf :=_gb .NewEncoderFromStream (_fabeb );if _dfbdf !=nil {_dgf .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_dfbdf );
return nil ,nil ,_dfbdf ;};return _agffg ,_bbgge ,nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_ggadg :=&XObjectImage {};_ffgge :=&_gb .PdfObjectStream {};_ffgge .PdfObjectDictionary =_gb .MakeDict ();_ggadg ._abfbc =_ffgge ;return _ggadg ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_bfcg *Image )GetSamples ()[]uint32 {_ccdb :=_cag .ResampleBytes (_bfcg .Data ,int (_bfcg .BitsPerComponent ));if _bfcg .BitsPerComponent < 8{_ccdb =_bfcg .samplesTrimPadding (_ccdb );};_bdec :=int (_bfcg .Width )*int (_bfcg .Height )*_bfcg .ColorComponents ;
if len (_ccdb )< _bdec {_dgf .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_ccdb ),_bdec );
return _ccdb ;}else if len (_ccdb )> _bdec {_dgf .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_ccdb ),_bdec );
_ccdb =_ccdb [:_bdec ];};return _ccdb ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _cf .ReadSeeker )(*PdfFont ,error ){const _edba =_fed .CharCode (32);const _dgce =_fed .CharCode (255);_ddee ,_dbddg :=_ee .ReadAll (r );if _dbddg !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dbddg );
return nil ,_dbddg ;};_ccbbe ,_dbddg :=_ad .TtfParse (_bed .NewReader (_ddee ));if _dbddg !=nil {_dgf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_dbddg );
return nil ,_dbddg ;};_gcafae :=&pdfFontSimple {_efcg :make (map[_fed .CharCode ]float64 ),fontCommon :fontCommon {_cedad :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_gcafae ._dgdge =_fed .NewWinAnsiEncoder ();_gcafae ._ebadb =_ccbbe .PostScriptName ;
_gcafae .FirstChar =_gb .MakeInteger (int64 (_edba ));_gcafae .LastChar =_gb .MakeInteger (int64 (_dgce ));_fgbgd :=1000.0/float64 (_ccbbe .UnitsPerEm );if len (_ccbbe .Widths )<=0{return nil ,_ga .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_efaga :=_fgbgd *float64 (_ccbbe .Widths [0]);_dcaf :=make ([]float64 ,0,_dgce -_edba +1);for _ddbe :=_edba ;_ddbe <=_dgce ;_ddbe ++{_beced ,_ddeg :=_gcafae .Encoder ().CharcodeToRune (_ddbe );if !_ddeg {_dgf .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ddbe );
_dcaf =append (_dcaf ,_efaga );continue ;};_dbaa ,_bcbbbb :=_ccbbe .Chars [_beced ];if !_bcbbbb {_dgf .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_dcaf =append (_dcaf ,_efaga );continue ;
};_bagg :=_fgbgd *float64 (_ccbbe .Widths [_dbaa ]);_dcaf =append (_dcaf ,_bagg );};_gcafae .Widths =_gb .MakeIndirectObject (_gb .MakeArrayFromFloats (_dcaf ));if len (_dcaf )< int (_dgce -_edba +1){_dgf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_dcaf ),255-32+1);
return nil ,_gb .ErrRangeError ;};for _ffdcg :=_edba ;_ffdcg <=_dgce ;_ffdcg ++{_gcafae ._efcg [_ffdcg ]=_dcaf [_ffdcg -_edba ];};_gcafae .Encoding =_gb .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_dfbe :=&PdfFontDescriptor {};
_dfbe .FontName =_gb .MakeName (_ccbbe .PostScriptName );_dfbe .Ascent =_gb .MakeFloat (_fgbgd *float64 (_ccbbe .TypoAscender ));_dfbe .Descent =_gb .MakeFloat (_fgbgd *float64 (_ccbbe .TypoDescender ));_dfbe .CapHeight =_gb .MakeFloat (_fgbgd *float64 (_ccbbe .CapHeight ));
_dfbe .FontBBox =_gb .MakeArrayFromFloats ([]float64 {_fgbgd *float64 (_ccbbe .Xmin ),_fgbgd *float64 (_ccbbe .Ymin ),_fgbgd *float64 (_ccbbe .Xmax ),_fgbgd *float64 (_ccbbe .Ymax )});_dfbe .ItalicAngle =_gb .MakeFloat (_ccbbe .ItalicAngle );_dfbe .MissingWidth =_gb .MakeFloat (_fgbgd *float64 (_ccbbe .Widths [0]));
_cdbb ,_dbddg :=_gb .MakeStream (_ddee ,_gb .NewFlateEncoder ());if _dbddg !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dbddg );
return nil ,_dbddg ;};_cdbb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gb .MakeInteger (int64 (len (_ddee ))));_dfbe .FontFile2 =_cdbb ;if _ccbbe .Bold {_dfbe .StemV =_gb .MakeInteger (120);}else {_dfbe .StemV =_gb .MakeInteger (70);
};_efaae :=_bagba ;if _ccbbe .IsFixedPitch {_efaae |=_cgdgb ;};if _ccbbe .ItalicAngle !=0{_efaae |=_ggbc ;};_dfbe .Flags =_gb .MakeInteger (int64 (_efaae ));_gcafae ._fcgcf =_dfbe ;_fdead :=&PdfFont {_cbab :_gcafae };return _fdead ,nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _gb .PdfObject ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_eeef *PdfAcroForm )ToPdfObject ()_gb .PdfObject {_fegc :=_eeef ._efgec ;_acef :=_fegc .PdfObject .(*_gb .PdfObjectDictionary );if _eeef .Fields !=nil {_egcad :=_gb .PdfObjectArray {};for _ ,_dgde :=range *_eeef .Fields {_gbcde :=_dgde .GetContext ();
if _gbcde !=nil {_egcad .Append (_gbcde .ToPdfObject ());}else {_egcad .Append (_dgde .ToPdfObject ());};};_acef .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_egcad );};if _eeef .NeedAppearances !=nil {_acef .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_eeef .NeedAppearances );
};if _eeef .SigFlags !=nil {_acef .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_eeef .SigFlags );};if _eeef .CO !=nil {_acef .Set ("\u0043\u004f",_eeef .CO );};if _eeef .DR !=nil {_acef .Set ("\u0044\u0052",_eeef .DR .ToPdfObject ());};if _eeef .DA !=nil {_acef .Set ("\u0044\u0041",_eeef .DA );
};if _eeef .Q !=nil {_acef .Set ("\u0051",_eeef .Q );};if _eeef .XFA !=nil {_acef .Set ("\u0058\u0046\u0041",_eeef .XFA );};return _fegc ;};func _fcbc (_ddef *_gb .PdfObjectDictionary )(*PdfFieldButton ,error ){_aabb :=&PdfFieldButton {};_aabb .Opt ,_ =_gb .GetArray (_ddef .Get ("\u004f\u0070\u0074"));
return _aabb ,nil ;};func (_gaeg *PdfReader )newPdfFieldSignatureFromDict (_cddab *_gb .PdfObjectDictionary )(*PdfFieldSignature ,error ){_cbgc :=&PdfFieldSignature {};_eggee ,_abda :=_gb .GetIndirect (_cddab .Get ("\u0056"));if _abda {var _fdbc error ;
_cbgc .V ,_fdbc =_gaeg .newPdfSignatureFromIndirect (_eggee );if _fdbc !=nil {return nil ,_fdbc ;};};_cbgc .Lock ,_ =_gb .GetIndirect (_cddab .Get ("\u004c\u006f\u0063\u006b"));_cbgc .SV ,_ =_gb .GetIndirect (_cddab .Get ("\u0053\u0056"));return _cbgc ,nil ;
};

// ToInteger convert to an integer format.
func (_aacg *PdfColorLab )ToInteger (bits int )[3]uint32 {_dacc :=_fg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dacc *_aacg .L ()),uint32 (_dacc *_aacg .A ()),uint32 (_dacc *_aacg .B ())};};

// String implements interface PdfObject.
func (_dag *PdfAction )String ()string {_caga ,_bd :=_dag .ToPdfObject ().(*_gb .PdfIndirectObject );if _bd {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dag ._ce ,_caga .PdfObject .String ());};return "";};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_eedd *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_gdde :=_eedd .actualFont ();if _gdde ==nil {_dgf .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_eedd ._cbab );
return _ad .CharMetrics {},false ;};if _edgf ,_bbbf :=_gdde .GetRuneMetrics (r );_bbbf {return _edgf ,true ;};if _aaag ,_ffgf :=_eedd .GetFontDescriptor ();_ffgf ==nil &&_aaag !=nil {return _ad .CharMetrics {Wx :_aaag ._gabd },true ;};_dgf .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eedd );
return _ad .CharMetrics {},false ;};func (_fcfb *PdfAcroForm )filteredFields (_cedcfb FieldFilterFunc ,_efcff bool )[]*PdfField {if _fcfb ==nil {return nil ;};return _dbaeb (_fcfb .Fields ,_cedcfb ,_efcff );};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_cgdc .Lock ();defer _cgdc .Unlock ();_fcecf =subject };

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bbcd pdfFontType0 )GetCharMetrics (code _fed .CharCode )(_ad .CharMetrics ,bool ){if _bbcd .DescendantFont ==nil {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bbcd );
return _ad .CharMetrics {},false ;};return _bbcd .DescendantFont .GetCharMetrics (code );};func (_dbcf *PdfAppender )updateObjectsDeep (_acad _gb .PdfObject ,_fdb map[_gb .PdfObject ]struct{}){if _fdb ==nil {_fdb =map[_gb .PdfObject ]struct{}{};};if _ ,_dcbd :=_fdb [_acad ];
_dcbd ||_acad ==nil {return ;};_fdb [_acad ]=struct{}{};_eaegf :=_gb .ResolveReferencesDeep (_acad ,_dbcf ._cbbf );if _eaegf !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eaegf );};switch _cacg :=_acad .(type ){case *_gb .PdfIndirectObject :switch {case _cacg .GetParser ()==_dbcf ._ddda ._gedb :return ;
case _cacg .GetParser ()==_dbcf .Reader ._gedb :_aege ,_ :=_dbcf ._ddda .GetIndirectObjectByNumber (int (_cacg .ObjectNumber ));_cacf ,_cdaf :=_aege .(*_gb .PdfIndirectObject );if _cdaf &&_cacf !=nil {if _cacf .PdfObject !=_cacg .PdfObject &&_cacf .PdfObject .WriteString ()!=_cacg .PdfObject .WriteString (){_dbcf .addNewObject (_acad );
_dbcf ._dbgc [_acad ]=_cacg .ObjectNumber ;};};default:_dbcf .addNewObject (_acad );};_dbcf .updateObjectsDeep (_cacg .PdfObject ,_fdb );case *_gb .PdfObjectArray :for _ ,_eee :=range _cacg .Elements (){_dbcf .updateObjectsDeep (_eee ,_fdb );};case *_gb .PdfObjectDictionary :for _ ,_dce :=range _cacg .Keys (){_dbcf .updateObjectsDeep (_cacg .Get (_dce ),_fdb );
};case *_gb .PdfObjectStreams :if _cacg .GetParser ()!=_dbcf ._ddda ._gedb {for _ ,_daac :=range _cacg .Elements (){_dbcf .updateObjectsDeep (_daac ,_fdb );};};case *_gb .PdfObjectStream :switch {case _cacg .GetParser ()==_dbcf ._ddda ._gedb :return ;case _cacg .GetParser ()==_dbcf .Reader ._gedb :if _dfdf ,_addd :=_dbcf ._ddda ._gedb .LookupByReference (_cacg .PdfObjectReference );
_addd ==nil {var _abea bool ;if _fdae ,_gegg :=_gb .GetStream (_dfdf );_gegg &&_bed .Equal (_fdae .Stream ,_cacg .Stream ){_abea =true ;};if _fgeg ,_degeg :=_gb .GetDict (_dfdf );_abea &&_degeg {_abea =_fgeg .WriteString ()==_cacg .PdfObjectDictionary .WriteString ();
};if _abea {return ;};};if _cacg .ObjectNumber !=0{_dbcf ._dbgc [_acad ]=_cacg .ObjectNumber ;};default:if _ ,_faec :=_dbcf ._cgda [_acad ];!_faec {_dbcf .addNewObject (_acad );};};_dbcf .updateObjectsDeep (_cacg .PdfObjectDictionary ,_fdb );};};func (_edgdc fontCommon )coreString ()string {_eafa :="";
if _edgdc ._fcgcf !=nil {_eafa =_edgdc ._fcgcf .String ();};return _b .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_edgdc ._cedad ,_edgdc ._ebadb ,_edgdc ._bege ,_edgdc ._bgbfa ,_edgdc ._egbcb !=nil ,_edgdc .fontFlags (),_eafa );
};func (_febf *DSS )add (_gcgfb *[]*_gb .PdfObjectStream ,_gfcfb map[string ]*_gb .PdfObjectStream ,_abbd [][]byte )([]*_gb .PdfObjectStream ,error ){_feeg :=make ([]*_gb .PdfObjectStream ,0,len (_abbd ));for _ ,_fffg :=range _abbd {_affg ,_abbag :=_fdafb (_fffg );
if _abbag !=nil {return nil ,_abbag ;};_gdgc ,_fgdb :=_gfcfb [string (_affg )];if !_fgdb {_gdgc ,_abbag =_gb .MakeStream (_fffg ,_gb .NewRawEncoder ());if _abbag !=nil {return nil ,_abbag ;};_gfcfb [string (_affg )]=_gdgc ;*_gcgfb =append (*_gcgfb ,_gdgc );
};_feeg =append (_feeg ,_gdgc );};return _feeg ,nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
type PageCallback func (_gabf int ,_gfcdg *PdfPage );

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_bcbcg *PdfPattern )SetContext (ctx PdfModel ){_bcbcg ._bcaggd =ctx };

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_dbfba *PdfOutlineTreeNode )GetContext ()PdfModel {if _dgdf ,_dede :=_dbfba ._gdeda .(*PdfOutline );_dede {return _dgdf ;};if _ecafe ,_aecff :=_dbfba ._gdeda .(*PdfOutlineItem );_aecff {return _ecafe ;};_dgf .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// Write writes out the PDF.
func (_gddfd *PdfWriter )Write (writer _cf .Writer )error {_dgf .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");if _gddfd ._cafeb !=nil {_dgf .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_gddfd ._cafeb );
_cefac :=_gddfd ._cafeb .ToPdfObject ();_dgf .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_cefac ,_cefac ,_cefac );_gddfd ._dfcaf .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_cefac );
_gbcfe :=_gddfd .addObjects (_cefac );if _gbcfe !=nil {return _gbcfe ;};};if _gddfd ._dfcgf !=nil {_dgf .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_beebg :=_gddfd ._dfcgf .ToPdfObject ();_dgf .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_beebg );
_gddfd ._dfcaf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_beebg );_dagbe :=_gddfd .addObjects (_beebg );if _dagbe !=nil {return _dagbe ;};};for _acacf ,_defa :=range _gddfd ._cfgcc {if !_gddfd .hasObject (_acacf ){_dgf .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_acacf ,_acacf ,_acacf );
for _ ,_dccgf :=range _defa {for _ ,_cgcda :=range _dccgf .Keys (){_afbfa :=_dccgf .Get (_cgcda );if _afbfa ==_acacf {_dgf .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_dccgf .Set (_cgcda ,_gb .MakeNull ());break ;};};};};};_gddfd ._dfcaf .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_gb .MakeName (_b .Sprintf ("\u0025\u0064\u002e%\u0064",_gddfd ._cgde ,_gddfd ._dcggb )));_gddfd .copyObjects ();if _gddfd ._cccfc !=nil {var _begc error ;
_gddfd ._eeafb ,_begc =_gddfd ._cccfc .Optimize (_gddfd ._eeafb );if _begc !=nil {return _begc ;};_ddbfee :=make (map[_gb .PdfObject ]struct{},len (_gddfd ._eeafb ));for _ ,_eeaee :=range _gddfd ._eeafb {_ddbfee [_eeaee ]=struct{}{};};_gddfd ._dbbcgf =_ddbfee ;
};_gddfd ._bdabg =_gddfd ._dfcgb ;_gddfd ._bcebe =_e .NewWriter (writer );_bcdeg :=_gddfd ._cgde > 1||(_gddfd ._cgde ==1&&_gddfd ._dcggb > 4);if _gddfd ._bfab !=nil {_bcdeg =*_gddfd ._bfab ;};_affcb :=make (map[_gb .PdfObject ]bool );for _ ,_eeeeg :=range _gddfd ._eeafb {if _cdead ,_bggae :=_eeeeg .(*_gb .PdfObjectStreams );
_bggae {_bcdeg =true ;for _ ,_agaba :=range _cdead .Elements (){_affcb [_agaba ]=true ;if _ggfdf ,_decc :=_agaba .(*_gb .PdfIndirectObject );_decc {_affcb [_ggfdf .PdfObject ]=true ;};};};};if _bcdeg &&_gddfd ._cgde ==1&&_gddfd ._dcggb < 5{_gddfd ._dcggb =5;
};if _gddfd ._afgga {_gddfd .writeString ("\u000a");}else {_gddfd .writeString (_b .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_gddfd ._cgde ,_gddfd ._dcggb ));_gddfd .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");
};_gddfd .updateObjectNumbers ();_dgf .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gddfd ._eeafb ));_gddfd ._gdfe =make (map[int ]crossReference );_gddfd ._gdfe [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _gddfd ._gddac .ObjectMap !=nil {for _aacb ,_afceb :=range _gddfd ._gddac .ObjectMap {if _aacb ==0{continue ;};if _afceb .XType ==_gb .XrefTypeObjectStream {_cgfb :=crossReference {Type :2,ObjectNumber :_afceb .OsObjNumber ,Index :_afceb .OsObjIndex };
_gddfd ._gdfe [_aacb ]=_cgfb ;};if _afceb .XType ==_gb .XrefTypeTableEntry {_dade :=crossReference {Type :1,ObjectNumber :_afceb .ObjectNumber ,Offset :_afceb .Offset };_gddfd ._gdfe [_aacb ]=_dade ;};};};for _ ,_aece :=range _gddfd ._eeafb {if _bfaaa :=_affcb [_aece ];
_bfaaa {continue ;};_bccd :=int64 (0);switch _efgfg :=_aece .(type ){case *_gb .PdfIndirectObject :_bccd =_efgfg .ObjectNumber ;case *_gb .PdfObjectStream :_bccd =_efgfg .ObjectNumber ;case *_gb .PdfObjectStreams :_bccd =_efgfg .ObjectNumber ;default:_dgf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_aece );
return ErrTypeCheck ;};if _gddfd ._eggbd !=nil &&_aece !=_gddfd ._fcecc {_ecadc :=_gddfd ._eggbd .Encrypt (_aece ,_bccd ,0);if _ecadc !=nil {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_ecadc );
return _ecadc ;};};_gddfd .writeObject (int (_bccd ),_aece );};_gebca :=_gddfd ._bdabg ;var _edbgbd int ;for _ccffe :=range _gddfd ._gdfe {if _ccffe > _edbgbd {_edbgbd =_ccffe ;};};if _bcdeg {_gffca :=_edbgbd +1;_gddfd ._gdfe [_gffca ]=crossReference {Type :1,ObjectNumber :_gffca ,Offset :_gebca };
_ageb :=_bed .NewBuffer (nil );_fdgcc :=_gb .MakeArray ();for _afacaf :=0;_afacaf <=_edbgbd ;{for ;_afacaf <=_edbgbd ;_afacaf ++{_edage ,_ffgcc :=_gddfd ._gdfe [_afacaf ];if _ffgcc &&(!_gddfd ._afgga ||_gddfd ._afgga &&(_edage .Type ==1&&_edage .Offset >=_gddfd ._dfaaad ||_edage .Type ==0)){break ;
};};var _fgdae int ;for _fgdae =_afacaf +1;_fgdae <=_edbgbd ;_fgdae ++{_aabbfg ,_adfce :=_gddfd ._gdfe [_fgdae ];if _adfce &&(!_gddfd ._afgga ||_gddfd ._afgga &&(_aabbfg .Type ==1&&_aabbfg .Offset > _gddfd ._dfaaad )){continue ;};break ;};_fdgcc .Append (_gb .MakeInteger (int64 (_afacaf )),_gb .MakeInteger (int64 (_fgdae -_afacaf )));
for _aeeff :=_afacaf ;_aeeff < _fgdae ;_aeeff ++{_gcagd :=_gddfd ._gdfe [_aeeff ];switch _gcagd .Type {case 0:_ca .Write (_ageb ,_ca .BigEndian ,byte (0));_ca .Write (_ageb ,_ca .BigEndian ,uint32 (0));_ca .Write (_ageb ,_ca .BigEndian ,uint16 (0xFFFF));
case 1:_ca .Write (_ageb ,_ca .BigEndian ,byte (1));_ca .Write (_ageb ,_ca .BigEndian ,uint32 (_gcagd .Offset ));_ca .Write (_ageb ,_ca .BigEndian ,uint16 (_gcagd .Generation ));case 2:_ca .Write (_ageb ,_ca .BigEndian ,byte (2));_ca .Write (_ageb ,_ca .BigEndian ,uint32 (_gcagd .ObjectNumber ));
_ca .Write (_ageb ,_ca .BigEndian ,uint16 (_gcagd .Index ));};};_afacaf =_fgdae +1;};_dadfc ,_dgdb :=_gb .MakeStream (_ageb .Bytes (),_gb .NewFlateEncoder ());if _dgdb !=nil {return _dgdb ;};_dadfc .ObjectNumber =int64 (_gffca );_dadfc .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0058\u0052\u0065\u0066"));
_dadfc .PdfObjectDictionary .Set ("\u0057",_gb .MakeArray (_gb .MakeInteger (1),_gb .MakeInteger (4),_gb .MakeInteger (2)));_dadfc .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_fdgcc );_dadfc .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_gb .MakeInteger (int64 (_gffca +1)));
_dadfc .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_gddfd ._cgcab );_dadfc .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_gddfd ._gceec );if _gddfd ._afgga &&_gddfd ._gbbea > 0{_dadfc .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_gb .MakeInteger (_gddfd ._gbbea ));
};if _gddfd ._eggbd !=nil {_dadfc .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gddfd ._fcecc );_dadfc .Set ("\u0049\u0044",_gddfd ._febdg );_dgf .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gddfd ._febdg );};_gddfd .writeObject (int (_dadfc .ObjectNumber ),_dadfc );
}else {_gddfd .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _accfg :=0;_accfg <=_edbgbd ;{for ;_accfg <=_edbgbd ;_accfg ++{_gfbabb ,_fcafcc :=_gddfd ._gdfe [_accfg ];if _fcafcc &&(!_gddfd ._afgga ||_gddfd ._afgga &&(_gfbabb .Type ==1&&_gfbabb .Offset >=_gddfd ._dfaaad ||_gfbabb .Type ==0)){break ;
};};var _edagb int ;for _edagb =_accfg +1;_edagb <=_edbgbd ;_edagb ++{_dbdcef ,_cfbcg :=_gddfd ._gdfe [_edagb ];if _cfbcg &&(!_gddfd ._afgga ||_gddfd ._afgga &&(_dbdcef .Type ==1&&_dbdcef .Offset > _gddfd ._dfaaad )){continue ;};break ;};_dgabgb :=_b .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_accfg ,_edagb -_accfg );
_gddfd .writeString (_dgabgb );for _gfdec :=_accfg ;_gfdec < _edagb ;_gfdec ++{_bdecd :=_gddfd ._gdfe [_gfdec ];switch _bdecd .Type {case 0:_dgabgb =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_gddfd .writeString (_dgabgb );case 1:_dgabgb =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_bdecd .Offset ,0);_gddfd .writeString (_dgabgb );};};_accfg =_edagb +1;};_gdeccf :=_gb .MakeDict ();_gdeccf .Set ("\u0049\u006e\u0066\u006f",_gddfd ._cgcab );
_gdeccf .Set ("\u0052\u006f\u006f\u0074",_gddfd ._gceec );_gdeccf .Set ("\u0053\u0069\u007a\u0065",_gb .MakeInteger (int64 (_edbgbd +1)));if _gddfd ._afgga &&_gddfd ._gbbea > 0{_gdeccf .Set ("\u0050\u0072\u0065\u0076",_gb .MakeInteger (_gddfd ._gbbea ));
};if _gddfd ._eggbd !=nil {_gdeccf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gddfd ._fcecc );_gdeccf .Set ("\u0049\u0044",_gddfd ._febdg );_dgf .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gddfd ._febdg );};_gddfd .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");
_gddfd .writeString (_gdeccf .WriteString ());_gddfd .writeString ("\u000a");};_gcdad :=_b .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_gebca );_gddfd .writeString (_gcdad );_gddfd .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
if _gddfd ._ffgef ==nil {_gddfd ._ffgef =_gddfd ._bcebe .Flush ();};return _gddfd ._ffgef ;};

// SetOCProperties sets the optional content properties.
func (_eafce *PdfWriter )SetOCProperties (ocProperties _gb .PdfObject )error {_gbdba :=_eafce ._dfcaf ;if ocProperties !=nil {_dgf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_gbdba .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _eafce .addObjects (ocProperties );};return nil ;};func _cfafc (_bgfgg ,_aagb string )string {if _fd .Contains (_bgfgg ,"\u002b"){_befg :=_fd .Split (_bgfgg ,"\u002b");
if len (_befg )==2{_bgfgg =_befg [1];};};return _aagb +"\u002b"+_bgfgg ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_dc :=NewPdfAction ();_dd :=&PdfActionGoToR {};_dd .PdfAction =_dc ;_dc .SetContext (_dd );return _dd ;};

// ToInteger convert to an integer format.
func (_adecd *PdfColorCalGray )ToInteger (bits int )uint32 {_cfca :=_fg .Pow (2,float64 (bits ))-1;return uint32 (_cfca *_adecd .Val ());};func _baae (_deece *PdfPage )map[_gb .PdfObjectName ]_gb .PdfObject {_ccag :=make (map[_gb .PdfObjectName ]_gb .PdfObject );
if _deece .Resources ==nil {return _ccag ;};if _deece .Resources .Font !=nil {if _gafd ,_dbbc :=_gb .GetDict (_deece .Resources .Font );_dbbc {for _ ,_fcdf :=range _gafd .Keys (){_ccag [_fcdf ]=_gafd .Get (_fcdf );};};};if _deece .Resources .ExtGState !=nil {if _ebgf ,_aefe :=_gb .GetDict (_deece .Resources .ExtGState );
_aefe {for _ ,_dggf :=range _ebgf .Keys (){_ccag [_dggf ]=_ebgf .Get (_dggf );};};};if _deece .Resources .XObject !=nil {if _bbfc ,_gbdf :=_gb .GetDict (_deece .Resources .XObject );_gbdf {for _ ,_ffebf :=range _bbfc .Keys (){_ccag [_ffebf ]=_bbfc .Get (_ffebf );
};};};if _deece .Resources .Pattern !=nil {if _edeb ,_ccbbg :=_gb .GetDict (_deece .Resources .Pattern );_ccbbg {for _ ,_dbdc :=range _edeb .Keys (){_ccag [_dbdc ]=_edeb .Get (_dbdc );};};};if _deece .Resources .Shading !=nil {if _cgbd ,_ggba :=_gb .GetDict (_deece .Resources .Shading );
_ggba {for _ ,_cffe :=range _cgbd .Keys (){_ccag [_cffe ]=_cgbd .Get (_cffe );};};};if _deece .Resources .ProcSet !=nil {if _bcedc ,_fgad :=_gb .GetDict (_deece .Resources .ProcSet );_fgad {for _ ,_dgad :=range _bcedc .Keys (){_ccag [_dgad ]=_bcedc .Get (_dgad );
};};};if _deece .Resources .Properties !=nil {if _fae ,_gacg :=_gb .GetDict (_deece .Resources .Properties );_gacg {for _ ,_bebg :=range _fae .Keys (){_ccag [_bebg ]=_fae .Get (_bebg );};};};return _ccag ;};

// Add appends a top level outline item to the outline.
func (_agbge *Outline )Add (item *OutlineItem ){_agbge .Entries =append (_agbge .Entries ,item )};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_gdacd *PdfAcroForm )GetContainingPdfObject ()_gb .PdfObject {return _gdacd ._efgec };

// ToPdfObject implements interface PdfModel.
func (_dbae *PdfAnnotationRedact )ToPdfObject ()_gb .PdfObject {_dbae .PdfAnnotation .ToPdfObject ();_aeg :=_dbae ._dccf ;_cfa :=_aeg .PdfObject .(*_gb .PdfObjectDictionary );_dbae .PdfAnnotationMarkup .appendToPdfDictionary (_cfa );_cfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_cfa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dbae .QuadPoints );_cfa .SetIfNotNil ("\u0049\u0043",_dbae .IC );_cfa .SetIfNotNil ("\u0052\u004f",_dbae .RO );_cfa .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_dbae .OverlayText );
_cfa .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dbae .Repeat );_cfa .SetIfNotNil ("\u0044\u0041",_dbae .DA );_cfa .SetIfNotNil ("\u0051",_dbae .Q );return _aeg ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_eecdf *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_accaa :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_gbgbc ,_ffda :=_eecdf .GetNumPages ();if _ffda !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffda );
return nil ,_ffda ;};for _agaf :=1;_agaf <=_gbgbc ;_agaf ++{_deedb ,_fbbg :=_eecdf .GetPage (_agaf );if _fbbg !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbbg );return nil ,_fbbg ;};if opts .PageCallback !=nil {opts .PageCallback (_agaf ,_deedb );
};_fbbg =_accaa .AddPage (_deedb );if _fbbg !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbbg );return nil ,_fbbg ;};};_accaa ._cgde =_eecdf .PdfVersion ().Major ;_accaa ._dcggb =_eecdf .PdfVersion ().Minor ;if !opts .SkipInfo {_dccg ,_adddb :=_eecdf .GetPdfInfo ();
if _adddb !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adddb );}else {_accaa ._cgcab .PdfObject =_dccg .ToPdfObject ();};};if !opts .SkipAcroForm {_aebaa :=_accaa .SetForms (_eecdf .AcroForm );if _aebaa !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aebaa );
return nil ,_aebaa ;};};if !opts .SkipOutlines {_accaa .AddOutlineTree (_eecdf .GetOutlineTree ());};if !opts .SkipOCProperties {_gdgdg ,_cedf :=_eecdf .GetOCProperties ();if _cedf !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cedf );
}else {_cedf =_accaa .SetOCProperties (_gdgdg );if _cedf !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cedf );};};};if !opts .SkipPageLabels {_bfac ,_ccbbcc :=_eecdf .GetPageLabels ();if _ccbbcc !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccbbcc );
}else {_ccbbcc =_accaa .SetPageLabels (_bfac );if _ccbbcc !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccbbcc );};};};if !opts .SkipNamedDests {_bfaa ,_ccbbea :=_eecdf .GetNamedDestinations ();if _ccbbea !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccbbea );
}else {_ccbbea =_accaa .SetNamedDestinations (_bfaa );if _ccbbea !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccbbea );};};};return &_accaa ,nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_ebdgd *PdfReader )Decrypt (password []byte )(bool ,error ){_acada ,_gaed :=_ebdgd ._gedb .Decrypt (password );if _gaed !=nil {return false ,_gaed ;};if !_acada {return false ,nil ;};_gaed =_ebdgd .loadStructure ();if _gaed !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_gaed );
return false ,_gaed ;};return true ,nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_gb .PdfObjectArray ;ExtGState _gb .PdfObject ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_gb .PdfObjectArray ;Domain *_gb .PdfObjectArray ;Function []PdfFunction ;Extend *_gb .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_gcgaf *PdfSignature )ToPdfObject ()_gb .PdfObject {_ecea :=_gcgaf ._cbdae ;var _dbgfg *_gb .PdfObjectDictionary ;if _gaceg ,_fabc :=_ecea .PdfObject .(*pdfSignDictionary );_fabc {_dbgfg =_gaceg .PdfObjectDictionary ;}else {_dbgfg =_ecea .PdfObject .(*_gb .PdfObjectDictionary );
};_dbgfg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_gcgaf .Type );_dbgfg .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_gcgaf .Filter );_dbgfg .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_gcgaf .SubFilter );_dbgfg .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_gcgaf .ByteRange );
_dbgfg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gcgaf .Contents );_dbgfg .SetIfNotNil ("\u0043\u0065\u0072\u0074",_gcgaf .Cert );_dbgfg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gcgaf .Name );_dbgfg .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_gcgaf .Reason );
_dbgfg .SetIfNotNil ("\u004d",_gcgaf .M );_dbgfg .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_gcgaf .Reference );_dbgfg .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_gcgaf .Changes );_dbgfg .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_gcgaf .ContactInfo );
return _ecea ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _gb .PdfObject ;Popup *PdfAnnotationPopup ;CA _gb .PdfObject ;RC _gb .PdfObject ;CreationDate _gb .PdfObject ;IRT _gb .PdfObject ;Subj _gb .PdfObject ;RT _gb .PdfObject ;IT _gb .PdfObject ;ExData _gb .PdfObject ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_gb .PdfObjectStream )(*XObjectImage ,error ){_fffge :=&XObjectImage {};_fffge ._abfbc =stream ;_gbgag :=*(stream .PdfObjectDictionary );_fbdbbe ,_ccbde :=_gb .NewEncoderFromStream (stream );if _ccbde !=nil {return nil ,_ccbde ;
};_fffge .Filter =_fbdbbe ;if _ebed :=_gb .TraceToDirectObject (_gbgag .Get ("\u0057\u0069\u0064t\u0068"));_ebed !=nil {_bedc ,_cefbg :=_ebed .(*_gb .PdfObjectInteger );if !_cefbg {return nil ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_eabcf :=int64 (*_bedc );_fffge .Width =&_eabcf ;}else {return nil ,_ga .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _dadae :=_gb .TraceToDirectObject (_gbgag .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_dadae !=nil {_bbebg ,_bdebb :=_dadae .(*_gb .PdfObjectInteger );if !_bdebb {return nil ,_ga .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fgceb :=int64 (*_bbebg );
_fffge .Height =&_fgceb ;}else {return nil ,_ga .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _gadbb :=_gb .TraceToDirectObject (_gbgag .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_gadbb !=nil {_gebgb ,_bedbb :=NewPdfColorspaceFromPdfObject (_gadbb );if _bedbb !=nil {return nil ,_bedbb ;};_fffge .ColorSpace =_gebgb ;}else {_dgf .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");
_fffge .ColorSpace =NewPdfColorspaceDeviceGray ();};if _cfffe :=_gb .TraceToDirectObject (_gbgag .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_cfffe !=nil {_bdae ,_cbggf :=_cfffe .(*_gb .PdfObjectInteger );
if !_cbggf {return nil ,_ga .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ccebg :=int64 (*_bdae );_fffge .BitsPerComponent =&_ccebg ;};_fffge .Intent =_gbgag .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_fffge .ImageMask =_gbgag .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_fffge .Mask =_gbgag .Get ("\u004d\u0061\u0073\u006b");_fffge .Decode =_gbgag .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_fffge .Interpolate =_gbgag .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_fffge .Alternatives =_gbgag .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_fffge .SMask =_gbgag .Get ("\u0053\u004d\u0061s\u006b");_fffge .SMaskInData =_gbgag .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_fffge .Matte =_gbgag .Get ("\u004d\u0061\u0074t\u0065");_fffge .Name =_gbgag .Get ("\u004e\u0061\u006d\u0065");_fffge .StructParent =_gbgag .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fffge .ID =_gbgag .Get ("\u0049\u0044");
_fffge .OPI =_gbgag .Get ("\u004f\u0050\u0049");_fffge .Metadata =_gbgag .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fffge .OC =_gbgag .Get ("\u004f\u0043");_fffge .Stream =stream .Stream ;return _fffge ,nil ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_cdef *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_bbca :=_cag .NewReader (img .getBase ());_fgacg :=_fe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_daaa :=_cag .NewWriter (_fgacg );
_fdde :=_fg .Pow (2,float64 (img .BitsPerComponent ))-1;_dfee :=make ([]uint32 ,3);var (_aaae uint32 ;ANorm ,X ,Y ,Z ,_bgfg ,_ddaa ,_gdaf float64 ;_abdc error ;);for {_aaae ,_abdc =_bbca .ReadSample ();if _abdc ==_cf .EOF {break ;}else if _abdc !=nil {return img ,_abdc ;
};ANorm =float64 (_aaae )/_fdde ;X =_cdef .WhitePoint [0]*_fg .Pow (ANorm ,_cdef .Gamma );Y =_cdef .WhitePoint [1]*_fg .Pow (ANorm ,_cdef .Gamma );Z =_cdef .WhitePoint [2]*_fg .Pow (ANorm ,_cdef .Gamma );_bgfg =3.240479*X +-1.537150*Y +-0.498535*Z ;_ddaa =-0.969256*X +1.875992*Y +0.041556*Z ;
_gdaf =0.055648*X +-0.204043*Y +1.057311*Z ;_bgfg =_fg .Min (_fg .Max (_bgfg ,0),1.0);_ddaa =_fg .Min (_fg .Max (_ddaa ,0),1.0);_gdaf =_fg .Min (_fg .Max (_gdaf ,0),1.0);_dfee [0]=uint32 (_bgfg *_fdde );_dfee [1]=uint32 (_ddaa *_fdde );_dfee [2]=uint32 (_gdaf *_fdde );
if _abdc =_daaa .WriteSamples (_dfee );_abdc !=nil {return img ,_abdc ;};};return _aecb (&_fgacg ),nil ;};func _dccddg (_bfdeg string )(string ,error ){var _bbbdg _bed .Buffer ;_bbbdg .WriteString (_bfdeg );_cdfcb :=make ([]byte ,8+16);_dcfg :=_f .Now ().UTC ().UnixNano ();
_ca .BigEndian .PutUint64 (_cdfcb ,uint64 (_dcfg ));_ ,_edagg :=_da .Read (_cdfcb [8:]);if _edagg !=nil {return "",_edagg ;};_bbbdg .WriteString (_a .EncodeToString (_cdfcb ));return _bbbdg .String (),nil ;};

// AddOutlineTree adds outlines to a PDF file.
func (_gedgd *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_gedgd ._cafeb =outlineTree };

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_bcab *BorderStyle )GetPdfName ()string {switch *_bcab {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// GetNumComponents returns the number of color components (1 for Separation).
func (_addf *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// SetLocation sets the `Location` field of the signature.
func (_egfbg *PdfSignature )SetLocation (location string ){_egfbg .Location =_gb .MakeString (location )};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _cf .ReadSeeker )(*PdfFont ,error ){_ffeba ,_beac :=_ee .ReadAll (r );if _beac !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_beac );
return nil ,_beac ;};_aaefa ,_beac :=_ad .TtfParse (_bed .NewReader (_ffeba ));if _beac !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_beac );
return nil ,_beac ;};_feaed :=&pdfCIDFontType2 {fontCommon :fontCommon {_cedad :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_gb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_dfcee :=make ([]rune ,0,len (_aaefa .Chars ));
for _ecdab :=range _aaefa .Chars {_dfcee =append (_dfcee ,_ecdab );};_ec .Slice (_dfcee ,func (_deabg ,_faae int )bool {return _dfcee [_deabg ]< _dfcee [_faae ]});_gcdeg :=1000.0/float64 (_aaefa .UnitsPerEm );if len (_aaefa .Widths )<=0{return nil ,_ga .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_eggdb :=_gcdeg *float64 (_aaefa .Widths [0]);_bcaa :=make (map[rune ]int );for _ ,_debfd :=range _dfcee {_bbcf :=_aaefa .Chars [_debfd ];_gbfg :=_gcdeg *float64 (_aaefa .Widths [_bbcf ]);_bcaa [_debfd ]=int (_gbfg );};_feaed ._dfcb =_bcaa ;_feaed .DW =_gb .MakeInteger (int64 (_eggdb ));
_agfg :=_bdgac (_dfcee ,_bcaa ,_aaefa .Chars );_feaed .W =_gb .MakeIndirectObject (_agfg );_fbfbf :=_gb .MakeDict ();_fbfbf .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_gb .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_fbfbf .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_gb .MakeString ("\u0041\u0064\u006fb\u0065"));
_fbfbf .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_gb .MakeInteger (0));_feaed .CIDSystemInfo =_fbfbf ;_gagaf :=&PdfFontDescriptor {FontName :_gb .MakeName (_aaefa .PostScriptName ),Ascent :_gb .MakeFloat (_gcdeg *float64 (_aaefa .TypoAscender )),Descent :_gb .MakeFloat (_gcdeg *float64 (_aaefa .TypoDescender )),CapHeight :_gb .MakeFloat (_gcdeg *float64 (_aaefa .CapHeight )),FontBBox :_gb .MakeArrayFromFloats ([]float64 {_gcdeg *float64 (_aaefa .Xmin ),_gcdeg *float64 (_aaefa .Ymin ),_gcdeg *float64 (_aaefa .Xmax ),_gcdeg *float64 (_aaefa .Ymax )}),ItalicAngle :_gb .MakeFloat (_aaefa .ItalicAngle ),MissingWidth :_gb .MakeFloat (_gcdeg *float64 (_aaefa .Widths [0]))};
_bedef ,_beac :=_gb .MakeStream (_ffeba ,_gb .NewFlateEncoder ());if _beac !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_beac );
return nil ,_beac ;};_bedef .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gb .MakeInteger (int64 (len (_ffeba ))));_gagaf .FontFile2 =_bedef ;if _aaefa .Bold {_gagaf .StemV =_gb .MakeInteger (120);}else {_gagaf .StemV =_gb .MakeInteger (70);
};_cdagd :=_dafg ;if _aaefa .IsFixedPitch {_cdagd |=_cgdgb ;};if _aaefa .ItalicAngle !=0{_cdagd |=_ggbc ;};_gagaf .Flags =_gb .MakeInteger (int64 (_cdagd ));_feaed ._ebadb =_aaefa .PostScriptName ;_feaed ._fcgcf =_gagaf ;_fecf :=pdfFontType0 {fontCommon :fontCommon {_cedad :"\u0054\u0079\u0070e\u0030",_ebadb :_aaefa .PostScriptName },DescendantFont :&PdfFont {_cbab :_feaed },Encoding :_gb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_bdde :_aaefa .NewEncoder ()};
if len (_aaefa .Chars )> 0{_egcc :=make (map[_de .CharCode ]rune ,len (_aaefa .Chars ));for _acgg ,_dedgb :=range _aaefa .Chars {_dbfgf :=_de .CharCode (_dedgb );if _gcafa ,_gdbc :=_egcc [_dbfgf ];!_gdbc ||(_gdbc &&_gcafa > _acgg ){_egcc [_dbfgf ]=_acgg ;
};};_fecf ._bfdd =_de .NewToUnicodeCMap (_egcc );};_fbbd :=PdfFont {_cbab :&_fecf };return &_fbbd ,nil ;};func (_dfdeb *PdfReader )newPdfAnnotationStrikeOut (_bcag *_gb .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_eggf :=PdfAnnotationStrikeOut {};
_fgbb ,_eda :=_dfdeb .newPdfAnnotationMarkupFromDict (_bcag );if _eda !=nil {return nil ,_eda ;};_eggf .PdfAnnotationMarkup =_fgbb ;_eggf .QuadPoints =_bcag .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eggf ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_faddcd *PdfPattern )GetContainingPdfObject ()_gb .PdfObject {return _faddcd ._agab };func _cbdc (_acdg *PdfPage ){_ededa :=_cgb .GetLicenseKey ();if _ededa !=nil &&_ededa .IsLicensed (){return ;};_gfceg :=_gb .PdfObjectName ("\u0055\u0046\u0031");
if !_acdg .Resources .HasFontByName (_gfceg ){_acdg .Resources .SetFontByName (_gfceg ,DefaultFont ().ToPdfObject ());};var _abdcd []string ;_abdcd =append (_abdcd ,"\u0071");_abdcd =append (_abdcd ,"\u0042\u0054");_abdcd =append (_abdcd ,_b .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_gfceg .String ()));
_abdcd =append (_abdcd ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_abdcd =append (_abdcd ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_cgeba :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_abdcd =append (_abdcd ,_b .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_cgeba ));_abdcd =append (_abdcd ,"\u0045\u0054");_abdcd =append (_abdcd ,"\u0051");_cdceaa :=_fd .Join (_abdcd ,"\u000a");_acdg .AddContentStreamByString (_cdceaa );_acdg .ToPdfObject ();
};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_fgcfa *XObjectForm )SetContentStream (content []byte ,encoder _gb .StreamEncoder )error {_gdeaa :=content ;if encoder ==nil {if _fgcfa .Filter !=nil {encoder =_fgcfa .Filter ;}else {encoder =_gb .NewRawEncoder ();};};_dcdcc ,_afcdec :=encoder .EncodeBytes (_gdeaa );
if _afcdec !=nil {return _afcdec ;};_gdeaa =_dcdcc ;_fgcfa .Stream =_gdeaa ;_fgcfa .Filter =encoder ;return nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cecb *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eebg ,_bafc :=_gb .GetNumbersAsFloat (objects );
if _bafc !=nil {return nil ,_bafc ;};return _cecb .ColorFromFloats (_eebg );};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fabef *PdfField )GetContainingPdfObject ()_gb .PdfObject {return _fabef ._faea };

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_cbab pdfFont };func (_daabg PdfFont )actualFont ()pdfFont {if _daabg ._cbab ==nil {_dgf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_daabg );
};return _daabg ._cbab ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_cdcg *PdfFont )ToPdfObject ()_gb .PdfObject {if _cdcg ._cbab ==nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _gb .MakeNull ();
};return _cdcg ._cbab .ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_geca *PdfAnnotationPolygon )ToPdfObject ()_gb .PdfObject {_geca .PdfAnnotation .ToPdfObject ();_bdf :=_geca ._dccf ;_dacg :=_bdf .PdfObject .(*_gb .PdfObjectDictionary );_geca .PdfAnnotationMarkup .appendToPdfDictionary (_dacg );_dacg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_dacg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_geca .Vertices );_dacg .SetIfNotNil ("\u004c\u0045",_geca .LE );_dacg .SetIfNotNil ("\u0042\u0053",_geca .BS );_dacg .SetIfNotNil ("\u0049\u0043",_geca .IC );_dacg .SetIfNotNil ("\u0042\u0045",_geca .BE );
_dacg .SetIfNotNil ("\u0049\u0054",_geca .IT );_dacg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_geca .Measure );return _bdf ;};func _cfdc (_ggde _gb .PdfObject )(*PdfColorspaceCalGray ,error ){_fdcb :=NewPdfColorspaceCalGray ();if _eddc ,_agba :=_ggde .(*_gb .PdfIndirectObject );
_agba {_fdcb ._fedf =_eddc ;};_ggde =_gb .TraceToDirectObject (_ggde );_ebfg ,_beae :=_ggde .(*_gb .PdfObjectArray );if !_beae {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ebfg .Len ()!=2{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_ggde =_gb .TraceToDirectObject (_ebfg .Get (0));_abdfa ,_beae :=_ggde .(*_gb .PdfObjectName );if !_beae {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_abdfa !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_b .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_ggde =_gb .TraceToDirectObject (_ebfg .Get (1));
_gaee ,_beae :=_ggde .(*_gb .PdfObjectDictionary );if !_beae {return nil ,_b .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};
_ggde =_gaee .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ggde =_gb .TraceToDirectObject (_ggde );_cddea ,_beae :=_ggde .(*_gb .PdfObjectArray );if !_beae {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _cddea .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_gfbb ,_gbff :=_cddea .GetAsFloat64Slice ();
if _gbff !=nil {return nil ,_gbff ;};_fdcb .WhitePoint =_gfbb ;_ggde =_gaee .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ggde !=nil {_ggde =_gb .TraceToDirectObject (_ggde );_fagb ,_efdb :=_ggde .(*_gb .PdfObjectArray );if !_efdb {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");
};if _fagb .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cbff ,_dcgd :=_fagb .GetAsFloat64Slice ();
if _dcgd !=nil {return nil ,_dcgd ;};_fdcb .BlackPoint =_cbff ;};_ggde =_gaee .Get ("\u0047\u0061\u006dm\u0061");if _ggde !=nil {_ggde =_gb .TraceToDirectObject (_ggde );_gcba ,_cfbe :=_gb .GetNumberAsFloat (_ggde );if _cfbe !=nil {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");
};_fdcb .Gamma =_gcba ;};return _fdcb ,nil ;};func _ecbgb (_cgegd *_gb .PdfObjectDictionary ,_gbgc *fontCommon )(*pdfFontType0 ,error ){_baaf ,_dfga :=_gb .GetArray (_cgegd .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_dfga {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_gbgc );
return nil ,_gb .ErrRangeError ;};if _baaf .Len ()!=1{_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_baaf .Len ());return nil ,_gb .ErrRangeError ;
};_gafbc ,_daddb :=_edec (_baaf .Get (0),false );if _daddb !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_daddb ,_gbgc );
return nil ,_daddb ;};_geddg :=_faef (_gbgc );_geddg .DescendantFont =_gafbc ;_dbgf ,_dfga :=_gb .GetNameVal (_cgegd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _dfga {if _dbgf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_dbgf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_geddg ._bdde =_fed .NewIdentityTextEncoder (_dbgf );
}else if _de .IsPredefinedCMap (_dbgf ){_geddg ._cdab ,_daddb =_de .LoadPredefinedCMap (_dbgf );if _daddb !=nil {_dgf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dbgf ,_daddb );
};}else {_dgf .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_dbgf );};};if _agbgf :=_gafbc .baseFields ()._bfdd ;_agbgf !=nil {if _dffcd :=_agbgf .Name ();_dffcd =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_dffcd =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_dffcd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_dffcd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_geddg ._bdde =_fed .NewCMapEncoder (_dbgf ,_geddg ._cdab ,_agbgf );
};};return _geddg ,nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_edfcc *PdfPageResources )SetXObjectImageByName (keyName _gb .PdfObjectName ,ximg *XObjectImage )error {_dabef :=ximg .ToPdfObject ().(*_gb .PdfObjectStream );_cagb :=_edfcc .SetXObjectByName (keyName ,_dabef );return _cagb ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_eacf *PdfPage )GetContainingPdfObject ()_gb .PdfObject {return _eacf ._gggeb };

// Duplicate creates a duplicate page based on the current one and returns it.
func (_aaea *PdfPage )Duplicate ()*PdfPage {_caecb :=*_aaea ;_caecb ._gaec =_gb .MakeDict ();_caecb ._gggeb =_gb .MakeIndirectObject (_caecb ._gaec );return &_caecb ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_aggbg :=&PdfPageResourcesColorspaces {};_aggbg .Names =[]string {};_aggbg .Colorspaces =map[string ]PdfColorspace {};_aggbg ._fead =&_gb .PdfIndirectObject {};return _aggbg ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_cedeg *PdfPage )ToPdfObject ()_gb .PdfObject {_dcdc :=_cedeg ._gggeb ;_cedeg .GetPageDict ();return _dcdc ;};var (_cgbg =_be .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_gfcgd =_be .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_eefe =_be .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_gbfba ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_gcdgg ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_befa ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_cddgg *PdfReader )GetIndirectObjectByNumber (number int )(_gb .PdfObject ,error ){_aaggfa ,_efdbf :=_cddgg ._gedb .LookupByNumber (number );return _aaggfa ,_efdbf ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// ToPdfObject returns a PDF object representation of the outline.
func (_gddfa *Outline )ToPdfObject ()_gb .PdfObject {return _gddfa .ToPdfOutline ().ToPdfObject ()};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_cffaae *PdfRectangle )Normalize (){if _cffaae .Llx > _cffaae .Urx {_cffaae .Llx ,_cffaae .Urx =_cffaae .Urx ,_cffaae .Llx ;};if _cffaae .Lly > _cffaae .Ury {_cffaae .Lly ,_cffaae .Ury =_cffaae .Ury ,_cffaae .Lly ;};};func (_gcga *PdfReader )newPdfAnnotationInkFromDict (_abdeb *_gb .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_dcdb :=PdfAnnotationInk {};
_gfdd ,_fbgf :=_gcga .newPdfAnnotationMarkupFromDict (_abdeb );if _fbgf !=nil {return nil ,_fbgf ;};_dcdb .PdfAnnotationMarkup =_gfdd ;_dcdb .InkList =_abdeb .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_dcdb .BS =_abdeb .Get ("\u0042\u0053");return &_dcdb ,nil ;
};func (_def *PdfReader )newPdfActionResetFormFromDict (_cdd *_gb .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_cdd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_cdd .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_abagc *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_abagc .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_abagc ._fbc =acroForm ;};

// Encoder returns the font's text encoder.
func (_cabd *PdfFont )Encoder ()_fed .TextEncoder {_dfbae :=_cabd .actualFont ();if _dfbae ==nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_cabd ._cbab );
return nil ;};return _dfbae .Encoder ();};type fontCommon struct{_ebadb string ;_cedad string ;_bege string ;_egbcb _gb .PdfObject ;_bfdd *_de .CMap ;_fcgcf *PdfFontDescriptor ;_bgbfa int64 ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dddf *PdfColorspaceDeviceCMYK )ToPdfObject ()_gb .PdfObject {return _gb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_bgfeg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _gb .GetNumberAsFloat (_bgfeg .CapHeight );};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _gb .PdfObject ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_ddbg :=NewPdfAnnotation ();_ccb :=&PdfAnnotation3D {};_ccb .PdfAnnotation =_ddbg ;_ddbg .SetContext (_ccb );return _ccb ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_cdeba *PdfPageResources )GetColorspaceByName (keyName _gb .PdfObjectName )(PdfColorspace ,bool ){_dbfbf ,_eagbc :=_cdeba .GetColorspaces ();if _eagbc !=nil {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eagbc );
return nil ,false ;};if _dbfbf ==nil {return nil ,false ;};_bddea ,_deefc :=_dbfbf .Colorspaces [string (keyName )];if !_deefc {return nil ,false ;};return _bddea ,true ;};

// ToPdfObject implements interface PdfModel.
func (_egcbd *PdfActionMovie )ToPdfObject ()_gb .PdfObject {_egcbd .PdfAction .ToPdfObject ();_bb :=_egcbd ._cd ;_gda :=_bb .PdfObject .(*_gb .PdfObjectDictionary );_gda .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeMovie )));_gda .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_egcbd .Annotation );
_gda .SetIfNotNil ("\u0054",_egcbd .T );_gda .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_egcbd .Operation );return _bb ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_bacfb *PdfFieldButton )ToPdfObject ()_gb .PdfObject {_bacfb .PdfField .ToPdfObject ();_fdfd :=_bacfb ._faea ;_edfg :=_fdfd .PdfObject .(*_gb .PdfObjectDictionary );_edfg .Set ("\u0046\u0054",_gb .MakeName ("\u0042\u0074\u006e"));if _bacfb .Opt !=nil {_edfg .Set ("\u004f\u0070\u0074",_bacfb .Opt );
};return _fdfd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_adae *PdfColorspaceDeviceGray )ToPdfObject ()_gb .PdfObject {return _gb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_gfaa *PdfPage )getParentResources ()(*PdfPageResources ,error ){_gfedf :=_gfaa .Parent ;for _gfedf !=nil {_abaec ,_geefb :=_gb .GetDict (_gfedf );
if !_geefb {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ga .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _bdcf :=_abaec .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bdcf !=nil {_aecc ,_ggccb :=_gb .GetDict (_bdcf );if !_ggccb {return nil ,_ga .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_ddbfa ,_fcgf :=NewPdfPageResourcesFromDict (_aecc );if _fcgf !=nil {return nil ,_fcgf ;};return _ddbfa ,nil ;};_gfedf =_abaec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ffbf *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ffbf .AlternateSpace ==nil {return nil ,_ga .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ffbf .AlternateSpace .ColorToRGB (color );};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_gb .PdfObjectString ;Q *_gb .PdfObjectInteger ;DS *_gb .PdfObjectString ;RV _gb .PdfObject ;MaxLen *_gb .PdfObjectInteger ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_addbfc :map[_gb .PdfObject ]struct{}{},_dfffec :_eefea (),_gedb :_gb .NewParserFromString (txt )};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_dgdd *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _dgdd .Alternate ==nil {if _dgdd .N ==1{_agfd :=NewPdfColorspaceDeviceGray ();return _agfd .ColorFromFloats (vals );}else if _dgdd .N ==3{_eggc :=NewPdfColorspaceDeviceRGB ();
return _eggc .ColorFromFloats (vals );}else if _dgdd .N ==4{_dbfad :=NewPdfColorspaceDeviceCMYK ();return _dbfad .ColorFromFloats (vals );}else {return nil ,_ga .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _dgdd .Alternate .ColorFromFloats (vals );};

// ToInteger convert to an integer format.
func (_fagf *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_aaca :=_fg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_aaca *_fagf .A ()),uint32 (_aaca *_fagf .B ()),uint32 (_aaca *_fagf .C ())};};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_bged *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_bgcea ,_eegcc :=_gb .GetDict (_bged ._dfcaf .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_eegcc {_bgcea =_gb .MakeDict ();_bged ._dfcaf .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_bgcea );
};_adedc ,_eegcc :=_gb .GetDict (_bgcea .Get (_gb .PdfObjectName (extName )));if !_eegcc {_adedc =_gb .MakeDict ();_bgcea .Set (_gb .PdfObjectName (extName ),_adedc );};if _dfgdc ,_ :=_gb .GetNameVal (_adedc .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_dfgdc !=baseVersion {_adedc .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_gb .MakeName (baseVersion ));};if _fbgad ,_ :=_gb .GetIntVal (_adedc .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_fbgad !=extLevel {_adedc .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_gb .MakeInteger (int64 (extLevel )));};};

// CustomKeys returns all custom info keys as list.
func (_agcec *PdfInfo )CustomKeys ()[]string {if _agcec ._acdf ==nil {return nil ;};_gbgbg :=make ([]string ,len (_agcec ._acdf .Keys ()));for _ ,_ggdbb :=range _agcec ._acdf .Keys (){_gbgbg =append (_gbgbg ,_ggdbb .String ());};return _gbgbg ;};var _afeaf =false ;
func _fcfd (_defcf _gb .PdfObject )(string ,error ){_defcf =_gb .TraceToDirectObject (_defcf );switch _dace :=_defcf .(type ){case *_gb .PdfObjectString :return _dace .Str (),nil ;case *_gb .PdfObjectStream :_bbdbc ,_caecc :=_gb .DecodeStream (_dace );
if _caecc !=nil {return "",_caecc ;};return string (_bbdbc ),nil ;};return "",_b .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_defcf );
};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_ddca *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_acaf ,_cfbea :=color .(*PdfColorCalRGB );if !_cfbea {_dgf .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_daeb :=_acaf .A ();_dfba :=_acaf .B ();_ebfc :=_acaf .C ();X :=_ddca .Matrix [0]*_fg .Pow (_daeb ,_ddca .Gamma [0])+_ddca .Matrix [3]*_fg .Pow (_dfba ,_ddca .Gamma [1])+_ddca .Matrix [6]*_fg .Pow (_ebfc ,_ddca .Gamma [2]);
Y :=_ddca .Matrix [1]*_fg .Pow (_daeb ,_ddca .Gamma [0])+_ddca .Matrix [4]*_fg .Pow (_dfba ,_ddca .Gamma [1])+_ddca .Matrix [7]*_fg .Pow (_ebfc ,_ddca .Gamma [2]);Z :=_ddca .Matrix [2]*_fg .Pow (_daeb ,_ddca .Gamma [0])+_ddca .Matrix [5]*_fg .Pow (_dfba ,_ddca .Gamma [1])+_ddca .Matrix [8]*_fg .Pow (_ebfc ,_ddca .Gamma [2]);
_efgdb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fdca :=-0.969256*X +1.875992*Y +0.041556*Z ;_afee :=0.055648*X +-0.204043*Y +1.057311*Z ;_efgdb =_fg .Min (_fg .Max (_efgdb ,0),1.0);_fdca =_fg .Min (_fg .Max (_fdca ,0),1.0);_afee =_fg .Min (_fg .Max (_afee ,0),1.0);
return NewPdfColorDeviceRGB (_efgdb ,_fdca ,_afee ),nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_accd *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ad .CharMetrics ;

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_egee *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _ceeb []_fed .TextEncoder ;var _eece _fed .CMapEncoder ;if _fbede :=_egee .baseFields ()._bfdd ;_fbede !=nil {_eece =_fed .NewCMapEncoder ("",nil ,_fbede );};_bgea :=_egee .Encoder ();
if _bgea !=nil {switch _edfc :=_bgea .(type ){case _fed .SimpleEncoder :_addgc :=_edfc .BaseName ();if _ ,_dfffc :=_dcbee [_addgc ];_dfffc {_ceeb =append (_ceeb ,_bgea );};};};if len (_ceeb )==0{if _egee .baseFields ()._bfdd !=nil {_ceeb =append (_ceeb ,_eece );
};if _bgea !=nil {_ceeb =append (_ceeb ,_bgea );};};var _cdfaf _bed .Buffer ;var _agdg int ;for _ ,_cada :=range data {var _gagc bool ;for _ ,_efdab :=range _ceeb {if _cgef :=_efdab .Encode (string (_cada ));len (_cgef )> 0{_cdfaf .Write (_cgef );_gagc =true ;
break ;};};if !_gagc {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_cada );
_agdg ++;};};if _agdg !=0{_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_agdg ,_egee ,_ceeb );
};return _cdfaf .Bytes (),_agdg ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_dcfdcc *PdfPage )AppendContentStream (contentStr string )error {_ebgbg ,_fcadg :=_dcfdcc .GetContentStreams ();if _fcadg !=nil {return _fcadg ;};if len (_ebgbg )==0{_ebgbg =[]string {contentStr };return _dcfdcc .SetContentStreams (_ebgbg ,_gb .NewFlateEncoder ());
};var _gagfd _bed .Buffer ;_gagfd .WriteString (_ebgbg [len (_ebgbg )-1]);_gagfd .WriteString ("\u000a");_gagfd .WriteString (contentStr );_ebgbg [len (_ebgbg )-1]=_gagfd .String ();return _dcfdcc .SetContentStreams (_ebgbg ,_gb .NewFlateEncoder ());};


// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _gb .PdfObject ;Flags _gb .PdfObject ;};

// GetCerts returns the signature certificate chain.
func (_eeeea *PdfSignature )GetCerts ()([]*_g .Certificate ,error ){var _bcafg []func ()([]*_g .Certificate ,error );switch _bcbed ,_ :=_gb .GetNameVal (_eeeea .SubFilter );_bcbed {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_bcafg =append (_bcafg ,_eeeea .extractChainFromPKCS7 ,_eeeea .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_bcafg =append (_bcafg ,_eeeea .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_bcafg =append (_bcafg ,_eeeea .extractChainFromPKCS7 );
default:return nil ,_b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_bcbed );};for _ ,_cecae :=range _bcafg {_eebeb ,_daed :=_cecae ();if _daed !=nil {return nil ,_daed ;
};if len (_eebeb )> 0{return _eebeb ,nil ;};};return nil ,ErrSignNoCertificates ;};type pdfFontSimple struct{fontCommon ;_fgecf *_gb .PdfIndirectObject ;_efcg map[_fed .CharCode ]float64 ;_dgdge _fed .TextEncoder ;_bdaa _fed .TextEncoder ;_cffeea *PdfFontDescriptor ;


// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _gb .PdfObject ;LastChar _gb .PdfObject ;Widths _gb .PdfObject ;Encoding _gb .PdfObject ;_efdg map[rune ]_ad .CharMetrics ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_gb .PdfObjectInteger ;TilingType *_gb .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_gb .PdfObjectFloat ;YStep *_gb .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_gb .PdfObjectArray ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_ecae *PdfColorspaceCalRGB )ToPdfObject ()_gb .PdfObject {_gefe :=&_gb .PdfObjectArray {};_gefe .Append (_gb .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_dcgfa :=_gb .MakeDict ();if _ecae .WhitePoint !=nil {_deecb :=_gb .MakeArray (_gb .MakeFloat (_ecae .WhitePoint [0]),_gb .MakeFloat (_ecae .WhitePoint [1]),_gb .MakeFloat (_ecae .WhitePoint [2]));
_dcgfa .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_deecb );}else {_dgf .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _ecae .BlackPoint !=nil {_beaf :=_gb .MakeArray (_gb .MakeFloat (_ecae .BlackPoint [0]),_gb .MakeFloat (_ecae .BlackPoint [1]),_gb .MakeFloat (_ecae .BlackPoint [2]));_dcgfa .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_beaf );
};if _ecae .Gamma !=nil {_gacc :=_gb .MakeArray (_gb .MakeFloat (_ecae .Gamma [0]),_gb .MakeFloat (_ecae .Gamma [1]),_gb .MakeFloat (_ecae .Gamma [2]));_dcgfa .Set ("\u0047\u0061\u006dm\u0061",_gacc );};if _ecae .Matrix !=nil {_bgfag :=_gb .MakeArray (_gb .MakeFloat (_ecae .Matrix [0]),_gb .MakeFloat (_ecae .Matrix [1]),_gb .MakeFloat (_ecae .Matrix [2]),_gb .MakeFloat (_ecae .Matrix [3]),_gb .MakeFloat (_ecae .Matrix [4]),_gb .MakeFloat (_ecae .Matrix [5]),_gb .MakeFloat (_ecae .Matrix [6]),_gb .MakeFloat (_ecae .Matrix [7]),_gb .MakeFloat (_ecae .Matrix [8]));
_dcgfa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bgfag );};_gefe .Append (_dcgfa );if _ecae ._cfgc !=nil {_ecae ._cfgc .PdfObject =_gefe ;return _ecae ._cfgc ;};return _gefe ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_dbdegb *_gb .PdfIndirectObject ;Certs []*_gb .PdfObjectStream ;OCSPs []*_gb .PdfObjectStream ;CRLs []*_gb .PdfObjectStream ;VRI map[string ]*VRI ;_ggaa map[string ]*_gb .PdfObjectStream ;_dgcd map[string ]*_gb .PdfObjectStream ;_bcbd map[string ]*_gb .PdfObjectStream ;
};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _gb .StreamEncoder )(*XObjectImage ,error ){_feafb :=NewXObjectImage ();return UpdateXObjectImageFromImage (_feafb ,img ,cs ,encoder );};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_degc *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _faeeg []*PdfField ;_gaceb :=map[*_gb .PdfIndirectObject ]struct{}{};for _ ,_ecdcf :=range _degc .PageList {_baeed ,_gccd :=_ecdcf .GetAnnotations ();if _gccd !=nil {return _gccd ;
};for _ ,_efaf :=range _baeed {var _bgcbg *PdfField ;switch _cecec :=_efaf .GetContext ().(type ){case *PdfAnnotationWidget :if _cecec ._fcd !=nil {_bgcbg =_cecec ._fcd ;break ;};if _faeed ,_gfeb :=_gb .GetIndirect (_cecec .Parent );_gfeb {_bgcbg ,_gccd =_degc .newPdfFieldFromIndirectObject (_faeed ,nil );
if _gccd ==nil {break ;};_dgf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_faeed ,_gccd );
};if _cecec ._dccf !=nil {_bgcbg ,_gccd =_degc .newPdfFieldFromIndirectObject (_cecec ._dccf ,nil );if _gccd ==nil {break ;};_dgf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cecec ._dccf ,_gccd );
};};if _bgcbg ==nil {continue ;};if _ ,_gcec :=_gaceb [_bgcbg ._faea ];_gcec {continue ;};_gaceb [_bgcbg ._faea ]=struct{}{};_faeeg =append (_faeeg ,_bgcbg );};};if len (_faeeg )==0{return nil ;};if _degc .AcroForm ==nil {_degc .AcroForm =NewPdfAcroForm ();
};_degc .AcroForm .Fields =&_faeeg ;return nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _gb .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_gb .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_ffca ,_dffga :=encoder .EncodeBytes (img .Data );
if _dffga !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_dffga );return nil ,_dffga ;};_dgaae :=NewXObjectImage ();_bacaf :=img .Width ;_adfgag :=img .Height ;
_dgaae .Width =&_bacaf ;_dgaae .Height =&_adfgag ;_efbec :=img .BitsPerComponent ;_dgaae .BitsPerComponent =&_efbec ;_dgaae .Filter =encoder ;_dgaae .Stream =_ffca ;if cs ==nil {if img .ColorComponents ==1{_dgaae .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_dgaae .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_dgaae .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ga .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_dgaae .ColorSpace =cs ;};if len (img ._abecg )!=0{_dfgea :=NewXObjectImage ();_dfgea .Filter =encoder ;_aafeb ,_ddgede :=encoder .EncodeBytes (img ._abecg );if _ddgede !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ddgede );
return nil ,_ddgede ;};_dfgea .Stream =_aafeb ;_dfgea .BitsPerComponent =_dgaae .BitsPerComponent ;_dfgea .Width =&img .Width ;_dfgea .Height =&img .Height ;_dfgea .ColorSpace =NewPdfColorspaceDeviceGray ();_dgaae .SMask =_dfgea .ToPdfObject ();}else {_dgaae .SMask =xobjIn .SMask ;
_dgaae .ImageMask =xobjIn .ImageMask ;if _dgaae .ColorSpace .GetNumComponents ()==1{_dacgf (_dgaae );};};return _dgaae ,nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ce PdfModel ;Type _gb .PdfObject ;S _gb .PdfObject ;Next _gb .PdfObject ;_cd *_gb .PdfIndirectObject ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _gb .PdfObject ;Name _gb .PdfObject ;};func (_eaeg *PdfAnnotation )String ()string {_dbec :="";_faf ,_dbea :=_eaeg .ToPdfObject ().(*_gb .PdfIndirectObject );if _dbea {_dbec =_b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eaeg ._defe ,_faf .PdfObject .String ());
};return _dbec ;};

// B returns the value of the B component of the color.
func (_ddaad *PdfColorCalRGB )B ()float64 {return _ddaad [1]};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_aegd *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if _aegd .Alternate ==nil {if _aegd .N ==1{_gdgeb :=NewPdfColorspaceDeviceGray ();return _gdgeb .ColorFromPdfObjects (objects );}else if _aegd .N ==3{_fcedg :=NewPdfColorspaceDeviceRGB ();
return _fcedg .ColorFromPdfObjects (objects );}else if _aegd .N ==4{_dbfadf :=NewPdfColorspaceDeviceCMYK ();return _dbfadf .ColorFromPdfObjects (objects );}else {return nil ,_ga .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _aegd .Alternate .ColorFromPdfObjects (objects );};

// ToPdfObject implements interface PdfModel.
func (_daf *PdfActionThread )ToPdfObject ()_gb .PdfObject {_daf .PdfAction .ToPdfObject ();_faag :=_daf ._cd ;_ecc :=_faag .PdfObject .(*_gb .PdfObjectDictionary );_ecc .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeThread )));if _daf .F !=nil {_ecc .Set ("\u0046",_daf .F .ToPdfObject ());
};_ecc .SetIfNotNil ("\u0044",_daf .D );_ecc .SetIfNotNil ("\u0042",_daf .B );return _faag ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gb .PdfObject ;LE _gb .PdfObject ;BS _gb .PdfObject ;IC _gb .PdfObject ;BE _gb .PdfObject ;IT _gb .PdfObject ;Measure _gb .PdfObject ;};

// String returns a string representation of the field.
func (_ddea *PdfField )String ()string {if _aaaf ,_dgee :=_ddea .ToPdfObject ().(*_gb .PdfIndirectObject );_dgee {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ddea ._gbce ,_aaaf .PdfObject .String ());};return "";};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_fcaee *Image )ConvertToBinary ()error {if _fcaee .ColorComponents ==1&&_fcaee .BitsPerComponent ==1{return nil ;};_agagg ,_gdbdd :=_fcaee .ToGoImage ();if _gdbdd !=nil {return _gdbdd ;};_dcgc ,_gdbdd :=_fe .MonochromeConverter .Convert (_agagg );
if _gdbdd !=nil {return _gdbdd ;};_fcaee .Data =_dcgc .Base ().Data ;_fcaee ._abecg ,_gdbdd =_fe .ScaleAlphaToMonochrome (_fcaee ._abecg ,int (_fcaee .Width ),int (_fcaee .Height ));if _gdbdd !=nil {return _gdbdd ;};_fcaee .BitsPerComponent =1;_fcaee .ColorComponents =1;
_fcaee ._ggcdd =nil ;return nil ;};

// AddFont adds a font dictionary to the Font resources.
func (_aaagd *PdfPage )AddFont (name _gb .PdfObjectName ,font _gb .PdfObject )error {if _aaagd .Resources ==nil {_aaagd .Resources =NewPdfPageResources ();};if _aaagd .Resources .Font ==nil {_aaagd .Resources .Font =_gb .MakeDict ();};_gacec ,_cfbead :=_gb .TraceToDirectObject (_aaagd .Resources .Font ).(*_gb .PdfObjectDictionary );
if !_cfbead {_dgf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_gb .TraceToDirectObject (_aaagd .Resources .Font ));
return _ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gacec .Set (name ,font );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebf *PdfAnnotationCircle )ToPdfObject ()_gb .PdfObject {_ebf .PdfAnnotation .ToPdfObject ();_ege :=_ebf ._dccf ;_dbg :=_ege .PdfObject .(*_gb .PdfObjectDictionary );_ebf .PdfAnnotationMarkup .appendToPdfDictionary (_dbg );_dbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_dbg .SetIfNotNil ("\u0042\u0053",_ebf .BS );_dbg .SetIfNotNil ("\u0049\u0043",_ebf .IC );_dbg .SetIfNotNil ("\u0042\u0045",_ebf .BE );_dbg .SetIfNotNil ("\u0052\u0044",_ebf .RD );return _ege ;};func (_geg *PdfReader )newPdfActionJavaScriptFromDict (_deda *_gb .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_deda .Get ("\u004a\u0053")},nil ;
};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_bdgc *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_defb :=vals [0];if _defb < 0.0||_defb > 1.0{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_baee :=vals [1];if _baee < 0.0||_baee > 1.0{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aabd :=vals [2];if _aabd < 0.0||_aabd > 1.0{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ebad :=vals [3];if _ebad < 0.0||_ebad > 1.0{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cebe :=NewPdfColorDeviceCMYK (_defb ,_baee ,_aabd ,_ebad );return _cebe ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_aad *PdfAction )GetContainingPdfObject ()_gb .PdfObject {return _aad ._cd };func (_eecff *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _eecff ._fcgcf };

// IsTiling specifies if the pattern is a tiling pattern.
func (_cgafd *PdfPattern )IsTiling ()bool {return _cgafd .PatternType ==1};

// ToPdfObject implements interface PdfModel.
func (_ddae *PdfAnnotationSquiggly )ToPdfObject ()_gb .PdfObject {_ddae .PdfAnnotation .ToPdfObject ();_agge :=_ddae ._dccf ;_gbd :=_agge .PdfObject .(*_gb .PdfObjectDictionary );_ddae .PdfAnnotationMarkup .appendToPdfDictionary (_gbd );_gbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_gbd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ddae .QuadPoints );return _agge ;};func _cefdd (_gada []byte )[]byte {const _eggcc =52845;const _gdbace =22719;_deae :=55665;for _ ,_fbbde :=range _gada [:4]{_deae =(int (_fbbde )+_deae )*_eggcc +_gdbace ;
};_adgaf :=make ([]byte ,len (_gada )-4);for _bggb ,_fageg :=range _gada [4:]{_adgaf [_bggb ]=byte (int (_fageg )^_deae >>8);_deae =(int (_fageg )+_deae )*_eggcc +_gdbace ;};return _adgaf ;};var (ErrRequiredAttributeMissing =_ga .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ga .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_gffc =_ga .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_ga .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ga .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_adf .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_gb .ErrNotSupported );ErrType1CFontNotSupported =_adf .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_gb .ErrNotSupported );
ErrType3FontNotSupported =_adf .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_gb .ErrNotSupported );
ErrTTCmapNotSupported =_adf .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_gb .ErrNotSupported );
ErrSignNotEnoughSpace =_adf .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_adf .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _gb .PdfObject ;Movie _gb .PdfObject ;A _gb .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_fccb *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_cebag *PdfReader )newPdfFieldFromIndirectObject (_gbba *_gb .PdfIndirectObject ,_abfa *PdfField )(*PdfField ,error ){if _bacdf ,_abfg :=_cebag ._dfffec .GetModelFromPrimitive (_gbba ).(*PdfField );
_abfg {return _bacdf ,nil ;};_fdbgg ,_egge :=_gb .GetDict (_gbba );if !_egge {return nil ,_b .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gdfdg :=NewPdfField ();_gdfdg ._faea =_gbba ;_gdfdg ._faea .PdfObject =_fdbgg ;if _bdcg ,_cfdd :=_gb .GetName (_fdbgg .Get ("\u0046\u0054"));_cfdd {_gdfdg .FT =_bdcg ;};if _abfa !=nil {_gdfdg .Parent =_abfa ;};_gdfdg .T ,_ =_fdbgg .Get ("\u0054").(*_gb .PdfObjectString );
_gdfdg .TU ,_ =_fdbgg .Get ("\u0054\u0055").(*_gb .PdfObjectString );_gdfdg .TM ,_ =_fdbgg .Get ("\u0054\u004d").(*_gb .PdfObjectString );_gdfdg .Ff ,_ =_fdbgg .Get ("\u0046\u0066").(*_gb .PdfObjectInteger );_gdfdg .V =_fdbgg .Get ("\u0056");_gdfdg .DV =_fdbgg .Get ("\u0044\u0056");
_gdfdg .AA =_fdbgg .Get ("\u0041\u0041");_eaaf :=_gdfdg .FT ;if _eaaf ==nil &&_abfa !=nil {_eaaf =_abfa .FT ;};if _eaaf !=nil {switch *_eaaf {case "\u0054\u0078":_gacf ,_aabe :=_aefgd (_fdbgg );if _aabe !=nil {return nil ,_aabe ;};_gacf .PdfField =_gdfdg ;
_gdfdg ._gbce =_gacf ;case "\u0043\u0068":_gcdd ,_acfeg :=_fcfg (_fdbgg );if _acfeg !=nil {return nil ,_acfeg ;};_gcdd .PdfField =_gdfdg ;_gdfdg ._gbce =_gcdd ;case "\u0042\u0074\u006e":_degea ,_cafc :=_fcbc (_fdbgg );if _cafc !=nil {return nil ,_cafc ;
};_degea .PdfField =_gdfdg ;_gdfdg ._gbce =_degea ;case "\u0053\u0069\u0067":_dabd ,_cdcc :=_cebag .newPdfFieldSignatureFromDict (_fdbgg );if _cdcc !=nil {return nil ,_cdcc ;};_dabd .PdfField =_gdfdg ;_gdfdg ._gbce =_dabd ;default:_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_gdfdg .FT );
return nil ,_ga .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _adgg ,_gdba :=_gb .GetName (_fdbgg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_gdba {if *_adgg =="\u0057\u0069\u0064\u0067\u0065\u0074"{_ggafa ,_cddaf :=_cebag .newPdfAnnotationFromIndirectObject (_gbba );
if _cddaf !=nil {return nil ,_cddaf ;};_cbegb ,_bbac :=_ggafa .GetContext ().(*PdfAnnotationWidget );if !_bbac {return nil ,_ga .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_cbegb ._fcd =_gdfdg ;_cbegb .Parent =_gdfdg ._faea ;_gdfdg .Annotations =append (_gdfdg .Annotations ,_cbegb );return _gdfdg ,nil ;};};_dcde :=true ;if _bagcg ,_babdb :=_gb .GetArray (_fdbgg .Get ("\u004b\u0069\u0064\u0073"));_babdb {_ddaagc :=make ([]*_gb .PdfIndirectObject ,0,_bagcg .Len ());
for _ ,_acdc :=range _bagcg .Elements (){_gdbe ,_bddgb :=_gb .GetIndirect (_acdc );if !_bddgb {_faeg ,_dcdd :=_gb .GetStream (_acdc );if _dcdd &&_faeg .PdfObjectDictionary !=nil {_cbeb ,_abaga :=_gb .GetNameVal (_faeg .Get ("\u0054\u0079\u0070\u0065"));
if _abaga &&_cbeb =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_dgf .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ga .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_bcdgb ,_cbcg :=_gb .GetDict (_gdbe );
if !_cbcg {return nil ,ErrTypeCheck ;};if _dcde {_dcde =!_fccga (_bcdgb );};_ddaagc =append (_ddaagc ,_gdbe );};for _ ,_egdc :=range _ddaagc {if _dcde {_daab ,_bdfg :=_cebag .newPdfAnnotationFromIndirectObject (_egdc );if _bdfg !=nil {_dgf .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_bdfg );
return nil ,_bdfg ;};_cbda ,_afcag :=_daab ._defe .(*PdfAnnotationWidget );if !_afcag {return nil ,ErrTypeCheck ;};_cbda ._fcd =_gdfdg ;_gdfdg .Annotations =append (_gdfdg .Annotations ,_cbda );}else {_dfbg ,_cfbcc :=_cebag .newPdfFieldFromIndirectObject (_egdc ,_gdfdg );
if _cfbcc !=nil {_dgf .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cfbcc );return nil ,_cfbcc ;};_gdfdg .Kids =append (_gdfdg .Kids ,_dfbg );
};};};return _gdfdg ,nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dfce *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_beed :=_cag .NewReader (img .getBase ());_fgbd :=_fe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dfce .AlternateSpace .GetNumComponents (),nil ,img ._abecg ,nil );
_bgdd :=_cag .NewWriter (_fgbd );_baff :=_fg .Pow (2,float64 (img .BitsPerComponent ))-1;_dgf .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_dgf .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dfce .TintTransform );_daacf :=_dfce .AlternateSpace .DecodeArray ();var (_fccc uint32 ;_gdfd error ;);for {_fccc ,_gdfd =_beed .ReadSample ();
if _gdfd ==_cf .EOF {break ;};if _gdfd !=nil {return img ,_gdfd ;};_bfecd :=float64 (_fccc )/_baff ;_fdfbd ,_adecg :=_dfce .TintTransform .Evaluate ([]float64 {_bfecd });if _adecg !=nil {return img ,_adecg ;};for _geggf ,_gdff :=range _fdfbd {_gdda :=_fe .LinearInterpolate (_gdff ,_daacf [_geggf *2],_daacf [_geggf *2+1],0,1);
if _adecg =_bgdd .WriteSample (uint32 (_gdda *_baff ));_adecg !=nil {return img ,_adecg ;};};};return _dfce .AlternateSpace .ImageToRGB (_aecb (&_fgbd ));};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _gb .PdfObjectName ;};func _dcfb (_cbac *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_cbac }};func _eggde ()string {_fgbg :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _febea _bed .Buffer ;for _gddb :=0;_gddb < 6;_gddb ++{_febea .WriteRune (rune (_fgbg [_aa .Intn (len (_fgbg ))]));};return _febea .String ();};func (_bfdbe *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _bfdbe ._fcgcf ==nil &&_bfdbe .DescendantFont !=nil {return _bfdbe .DescendantFont .FontDescriptor ();
};return _bfdbe ._fcgcf ;};func (_bcff *PdfAcroForm )fill (_dcdbe FieldValueProvider ,_cefg FieldAppearanceGenerator )error {if _bcff ==nil {return nil ;};_deabga ,_fdbfe :=_dcdbe .FieldValues ();if _fdbfe !=nil {return _fdbfe ;};for _ ,_dbdda :=range _bcff .AllFields (){_gceaa :=_dbdda .PartialName ();
_cgff ,_fagec :=_deabga [_gceaa ];if !_fagec {if _gfdddg ,_ffba :=_dbdda .FullName ();_ffba ==nil {_cgff ,_fagec =_deabga [_gfdddg ];};};if !_fagec {_dgf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gceaa );
continue ;};if _bacg :=_eaff (_dbdda ,_cgff );_bacg !=nil {return _bacg ;};if _cefg ==nil {continue ;};for _ ,_ddged :=range _dbdda .Annotations {_eagagb ,_aaeec :=_cefg .GenerateAppearanceDict (_bcff ,_dbdda ,_ddged );if _aaeec !=nil {return _aaeec ;};
_ddged .AP =_eagagb ;_ddged .ToPdfObject ();};};return nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_gfda *PdfReader )GetTrailer ()(*_gb .PdfObjectDictionary ,error ){_bdcgg :=_gfda ._gedb .GetTrailer ();if _bdcgg ==nil {return nil ,_ga .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _bdcgg ,nil ;
};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_eaaa ,_gcde :=_ad .NewStdFontByName (HelveticaName );if !_gcde {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_gdag :=_bcfb (_eaaa );return &PdfFont {_cbab :&_gdag };};

// ImageToRGB convert an indexed image to RGB.
func (_aacgg *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_aacgg .Base .GetNumComponents ();if N < 1{return Image {},_b .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_dbgcc :=_fe .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._abecg ,img ._ggcdd );_bggd :=_cag .NewReader (img .getBase ());_dgge :=_cag .NewWriter (_dbgcc );var (_abg uint32 ;_ccdec int ;_cddecb error ;);for {_abg ,_cddecb =_bggd .ReadSample ();
if _cddecb ==_cf .EOF {break ;}else if _cddecb !=nil {return img ,_cddecb ;};_ccdec =int (_abg );_dgf .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_ccdec ,N ,len (_aacgg ._acag ));
if (_ccdec +1)*N > len (_aacgg ._acag ){_ccdec =len (_aacgg ._acag )/N -1;_dgf .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_ccdec );if _ccdec < 0{_dgf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _babf :=_ccdec *N ;_babf < (_ccdec +1)*N ;_babf ++{if _cddecb =_dgge .WriteSample (uint32 (_aacgg ._acag [_babf ]));_cddecb !=nil {return img ,_cddecb ;};};};return _aacgg .Base .ImageToRGB (_aecb (&_dbgcc ));};

// String returns the name of the colorspace (DeviceN).
func (_gbfc *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_ffb :=NewPdfAction ();_dge :=&PdfActionHide {};_dge .PdfAction =_ffb ;_ffb .SetContext (_dge );return _dge ;};

// BaseFont returns the font's "BaseFont" field.
func (_gegdd *PdfFont )BaseFont ()string {return _gegdd .baseFields ()._ebadb };

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_becd *LTV )EnableByName (name string ,extraCerts []*_g .Certificate )error {_acaga :=_becd ._aaaed ._ddda .AcroForm ;for _ ,_gdcec :=range _acaga .AllFields (){_dfac ,_ :=_gdcec .GetContext ().(*PdfFieldSignature );if _dfac ==nil {continue ;};if _eccgb :=_dfac .PartialName ();
_eccgb !=name {continue ;};return _becd .Enable (_dfac .V ,extraCerts );};return nil ;};

// SetReason sets the `Reason` field of the signature.
func (_aggg *PdfSignature )SetReason (reason string ){_aggg .Reason =_gb .MakeString (reason )};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gbgaf :=PdfWriter {};_gbgaf ._dbbcgf =map[_gb .PdfObject ]struct{}{};_gbgaf ._eeafb =[]_gb .PdfObject {};_gbgaf ._cfgcc =map[_gb .PdfObject ][]*_gb .PdfObjectDictionary {};_gbgaf ._bgcdbd =map[_gb .PdfObject ]struct{}{};
_gbgaf ._cgde =1;_gbgaf ._dcggb =3;_bagecd :=_gb .MakeDict ();_fefdc :=[]struct{_facfb _gb .PdfObjectName ;_caggd string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_dadfd ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_fegab ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_dffgeg ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_cffac ()},{"\u0054\u0069\u0074l\u0065",_affab ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_dagef ()}};
for _ ,_abgfe :=range _fefdc {if _abgfe ._caggd !=""{_bagecd .Set (_abgfe ._facfb ,_gb .MakeString (_abgfe ._caggd ));};};if _beebd :=_daccg ();!_beebd .IsZero (){if _eaabd ,_dfbdcb :=NewPdfDateFromTime (_beebd );_dfbdcb ==nil {_bagecd .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eaabd .ToPdfObject ());
};};if _dafa :=_aedg ();!_dafa .IsZero (){if _bdfe ,_bdgdaa :=NewPdfDateFromTime (_dafa );_bdgdaa ==nil {_bagecd .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_bdfe .ToPdfObject ());};};_bcceed :=_gb .PdfIndirectObject {};_bcceed .PdfObject =_bagecd ;_gbgaf ._cgcab =&_bcceed ;
_gbgaf .addObject (&_bcceed );_faedd :=_gb .PdfIndirectObject {};_edea :=_gb .MakeDict ();_edea .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_faedd .PdfObject =_edea ;_gbgaf ._gceec =&_faedd ;_gbgaf .addObject (_gbgaf ._gceec );
_bffca ,_gffad :=_dccddg ("\u0077");if _gffad !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gffad );};_gbgaf ._cdegff =_bffca ;_defga :=_gb .PdfIndirectObject {};_cecca :=_gb .MakeDict ();_cecca .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0050\u0061\u0067e\u0073"));
_cgbc :=_gb .PdfObjectArray {};_cecca .Set ("\u004b\u0069\u0064\u0073",&_cgbc );_cecca .Set ("\u0043\u006f\u0075n\u0074",_gb .MakeInteger (0));_defga .PdfObject =_cecca ;_gbgaf ._ddacg =&_defga ;_gbgaf ._ceagag =map[_gb .PdfObject ]struct{}{};_gbgaf .addObject (_gbgaf ._ddacg );
_edea .Set ("\u0050\u0061\u0067e\u0073",&_defga );_gbgaf ._dfcaf =_edea ;_dgf .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_faedd );return _gbgaf ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_dgeff :=PdfColorCalRGB {a ,b ,c };return &_dgeff ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_dfda *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _dfda .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_begfa *_gb .PdfIndirectObject ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_cbc :=&PdfAnnotation {};_cbc ._dccf =_gb .MakeIndirectObject (_gb .MakeDict ());return _cbc ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dcfdc pdfFontSimple )GetRuneMetrics (r rune )(_ad .CharMetrics ,bool ){if _dcfdc ._efdg !=nil {_bbdg ,_dbbg :=_dcfdc ._efdg [r ];if _dbbg {return _bbdg ,true ;};};_dfbad :=_dcfdc .Encoder ();if _dfbad ==nil {_dgf .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_dcfdc );
return _ad .CharMetrics {},false ;};_ebag ,_fcdb :=_dfbad .RuneToCharcode (r );if !_fcdb {if r !=' '{_dgf .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_dcfdc );
};return _ad .CharMetrics {},false ;};_dbfgc ,_dcgeb :=_dcfdc .GetCharMetrics (_ebag );return _dbfgc ,_dcgeb ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_bfdge *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _gb .GetNumberAsFloat (_bfdge .Ascent );};func _bcfb (_gdaed _ad .StdFont )pdfFontSimple {_gdgdb :=_gdaed .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_cedad :"\u0054\u0079\u0070e\u0031",_ebadb :_gdaed .Name ()},_efdg :_gdaed .GetMetricsTable (),_cffeea :&PdfFontDescriptor {FontName :_gb .MakeName (string (_gdgdb .Name )),FontFamily :_gb .MakeName (_gdgdb .Family ),FontWeight :_gb .MakeFloat (float64 (_gdgdb .Weight )),Flags :_gb .MakeInteger (int64 (_gdgdb .Flags )),FontBBox :_gb .MakeArrayFromFloats (_gdgdb .BBox [:]),ItalicAngle :_gb .MakeFloat (_gdgdb .ItalicAngle ),Ascent :_gb .MakeFloat (_gdgdb .Ascent ),Descent :_gb .MakeFloat (_gdgdb .Descent ),CapHeight :_gb .MakeFloat (_gdgdb .CapHeight ),XHeight :_gb .MakeFloat (_gdgdb .XHeight ),StemV :_gb .MakeFloat (_gdgdb .StemV ),StemH :_gb .MakeFloat (_gdgdb .StemH )},_bdaa :_gdaed .Encoder ()};
};

// GetCustomInfo returns a custom info value for the specified name.
func (_faffa *PdfInfo )GetCustomInfo (name string )*_gb .PdfObjectString {var _gdfde *_gb .PdfObjectString ;if _faffa ._acdf ==nil {return _gdfde ;};if _fdbg ,_adb :=_faffa ._acdf .Get (*_gb .MakeName (name )).(*_gb .PdfObjectString );_adb {_gdfde =_fdbg ;
};return _gdfde ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_gb .PdfObjectStream )(*XObjectForm ,error ){_ebacgd :=&XObjectForm {};_ebacgd ._fadf =stream ;_eddb :=*(stream .PdfObjectDictionary );_adgea ,_bagdc :=_gb .NewEncoderFromStream (stream );if _bagdc !=nil {return nil ,_bagdc ;
};_ebacgd .Filter =_adgea ;if _cdeeb :=_eddb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cdeeb !=nil {_agbd ,_cdfee :=_cdeeb .(*_gb .PdfObjectName );if !_cdfee {return nil ,_ga .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};
if *_agbd !="\u0046\u006f\u0072\u006d"{_dgf .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ga .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _bgcga :=_eddb .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_bgcga !=nil {_ebacgd .FormType =_bgcga ;};if _cebdd :=_eddb .Get ("\u0042\u0042\u006f\u0078");_cebdd !=nil {_ebacgd .BBox =_cebdd ;};if _ccgeb :=_eddb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_ccgeb !=nil {_ebacgd .Matrix =_ccgeb ;};if _ffbee :=_eddb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ffbee !=nil {_ffbee =_gb .TraceToDirectObject (_ffbee );_dacccd ,_acga :=_ffbee .(*_gb .PdfObjectDictionary );if !_acga {_dgf .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_gb .ErrTypeError ;};_fbcgc ,_afafa :=NewPdfPageResourcesFromDict (_dacccd );if _afafa !=nil {_dgf .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_afafa ;};_ebacgd .Resources =_fbcgc ;_dgf .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ebacgd .Resources );};_ebacgd .Group =_eddb .Get ("\u0047\u0072\u006fu\u0070");
_ebacgd .Ref =_eddb .Get ("\u0052\u0065\u0066");_ebacgd .MetaData =_eddb .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ebacgd .PieceInfo =_eddb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ebacgd .LastModified =_eddb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_ebacgd .StructParent =_eddb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ebacgd .StructParents =_eddb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ebacgd .OPI =_eddb .Get ("\u004f\u0050\u0049");
_ebacgd .OC =_eddb .Get ("\u004f\u0043");_ebacgd .Name =_eddb .Get ("\u004e\u0061\u006d\u0065");_ebacgd .Stream =stream .Stream ;return _ebacgd ,nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_edcb *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _edcb .AlternateSpace ==nil {return nil ,_ga .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _edcb .AlternateSpace .ColorToRGB (color );};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_ebfd *PdfPageResources )GetXObjectImageByName (keyName _gb .PdfObjectName )(*XObjectImage ,error ){_aabef ,_gfadg :=_ebfd .GetXObjectByName (keyName );if _aabef ==nil {return nil ,nil ;};if _gfadg !=XObjectTypeImage {return nil ,_ga .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_agdcc ,_edaga :=NewXObjectImageFromStream (_aabef );if _edaga !=nil {return nil ,_edaga ;};return _agdcc ,nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _cf .ReadSeeker )(*PdfReader ,error ){const _eegb ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";_ffbbb :=&PdfReader {_cgae :rs ,_addbfc :map[_gb .PdfObject ]struct{}{},_dfffec :_eefea (),_ggea :true };
_dcbda ,_agcca :=_dccddg ("\u0072");if _agcca !=nil {return nil ,_agcca ;};_agcca =_cgb .Track (_dcbda ,_eegb );if _agcca !=nil {return nil ,_agcca ;};_ffbbb ._cdfea =_dcbda ;_gbffg ,_agcca :=_gb .NewParser (rs );if _agcca !=nil {return nil ,_agcca ;};
_ffbbb ._gedb =_gbffg ;_acbbe ,_agcca :=_ffbbb .IsEncrypted ();if _agcca !=nil {return nil ,_agcca ;};if !_acbbe {_agcca =_ffbbb .loadStructure ();if _agcca !=nil {return nil ,_agcca ;};};return _ffbbb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_afb *PdfActionGoTo )ToPdfObject ()_gb .PdfObject {_afb .PdfAction .ToPdfObject ();_dbde :=_afb ._cd ;_bag :=_dbde .PdfObject .(*_gb .PdfObjectDictionary );_bag .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeGoTo )));_bag .SetIfNotNil ("\u0044",_afb .D );
return _dbde ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _gb .PdfObject ;Name _gb .PdfObject ;};

// GetNumComponents returns the number of color components.
func (_ceeg *PdfColorspaceICCBased )GetNumComponents ()int {return _ceeg .N };

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _gb .PdfObjectArray )(*PdfRectangle ,error ){_cbccd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _gaegec error ;_cbccd .Llx ,_gaegec =_gb .GetNumberAsFloat (arr .Get (0));if _gaegec !=nil {return nil ,_gaegec ;};_cbccd .Lly ,_gaegec =_gb .GetNumberAsFloat (arr .Get (1));if _gaegec !=nil {return nil ,_gaegec ;};_cbccd .Urx ,_gaegec =_gb .GetNumberAsFloat (arr .Get (2));
if _gaegec !=nil {return nil ,_gaegec ;};_cbccd .Ury ,_gaegec =_gb .GetNumberAsFloat (arr .Get (3));if _gaegec !=nil {return nil ,_gaegec ;};return &_cbccd ,nil ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_fed .SimpleEncoder ,error ){_eagf ,_ccbgd :=_acgcg (basefont );if _ccbgd !=nil {return nil ,nil ,_ccbgd ;};_dabdd ,_dcge :=_eagf .Encoder ().(_fed .SimpleEncoder );
if !_dcge {return nil ,nil ,_b .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_eagf .Encoder ());
};_accg :=make (map[rune ]_fed .GlyphName );for _bdee :=range alphabet {if _ ,_ggbfa :=_dabdd .RuneToCharcode (_bdee );!_ggbfa {_ ,_egac :=_eagf ._efdg [_bdee ];if !_egac {_dgf .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_bdee ,_bdee );
continue ;};_cffeg ,_egac :=_fed .RuneToGlyph (_bdee );if !_egac {_dgf .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_bdee ,_bdee );continue ;};if len (_accg )>=255{return nil ,nil ,_ga .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_accg [_bdee ]=_cffeg ;};};var (_fcba []_fed .CharCode ;_egda []_fed .CharCode ;);for _ebfa :=_fed .CharCode (1);_ebfa <=0xff;_ebfa ++{_fagfb ,_gdce :=_dabdd .CharcodeToRune (_ebfa );if !_gdce {_fcba =append (_fcba ,_ebfa );continue ;};if _ ,_gdce =alphabet [_fagfb ];
!_gdce {_egda =append (_egda ,_ebfa );};};_bedee :=append (_fcba ,_egda ...);if len (_bedee )< len (_accg ){return nil ,nil ,_b .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_accg ),len (_bedee ));
};_dafc :=make ([]rune ,0,len (_accg ));for _fagfg :=range _accg {_dafc =append (_dafc ,_fagfg );};_ec .Slice (_dafc ,func (_feba ,_bgfb int )bool {return _dafc [_feba ]< _dafc [_bgfb ]});_dfbaa :=make (map[_fed .CharCode ]_fed .GlyphName ,len (_dafc ));
for _ ,_cced :=range _dafc {_bedb :=_bedee [0];_bedee =_bedee [1:];_dfbaa [_bedb ]=_accg [_cced ];};_dabdd =_fed .ApplyDifferences (_dabdd ,_dfbaa );_eagf .SetEncoder (_dabdd );return &PdfFont {_cbab :&_eagf },_dabdd ,nil ;};func (_gdg *PdfReader )newPdfActionMovieFromDict (_bebc *_gb .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_bebc .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_bebc .Get ("\u0054"),Operation :_bebc .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_bee :=NewPdfAction ();_gfc :=&PdfActionJavaScript {};_gfc .PdfAction =_bee ;_bee .SetContext (_gfc );return _gfc ;};func _eacfa (_afbafe *_gb .PdfObjectDictionary )(*PdfShadingType3 ,error ){_dcfeag :=PdfShadingType3 {};
_ddebc :=_afbafe .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ddebc ==nil {_dgf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_fefda ,_gcgfg :=_ddebc .(*_gb .PdfObjectArray );if !_gcgfg {_dgf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddebc );
return nil ,_gb .ErrTypeError ;};if _fefda .Len ()!=6{_dgf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fefda .Len ());return nil ,ErrInvalidAttribute ;
};_dcfeag .Coords =_fefda ;if _dbcef :=_afbafe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dbcef !=nil {_dbcef =_gb .TraceToDirectObject (_dbcef );_bfade ,_ddcg :=_dbcef .(*_gb .PdfObjectArray );if !_ddcg {_dgf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbcef );
return nil ,_gb .ErrTypeError ;};_dcfeag .Domain =_bfade ;};_ddebc =_afbafe .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ddebc ==nil {_dgf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dcfeag .Function =[]PdfFunction {};if _fffae ,_ebbe :=_ddebc .(*_gb .PdfObjectArray );_ebbe {for _ ,_geefc :=range _fffae .Elements (){_bbece ,_fcded :=_ceagc (_geefc );if _fcded !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcded );
return nil ,_fcded ;};_dcfeag .Function =append (_dcfeag .Function ,_bbece );};}else {_dfcged ,_gdfa :=_ceagc (_ddebc );if _gdfa !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdfa );
return nil ,_gdfa ;};_dcfeag .Function =append (_dcfeag .Function ,_dfcged );};if _dcgg :=_afbafe .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_dcgg !=nil {_dcgg =_gb .TraceToDirectObject (_dcgg );_bdeaf ,_aabgd :=_dcgg .(*_gb .PdfObjectArray );if !_aabgd {_dgf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dcgg );
return nil ,_gb .ErrTypeError ;};if _bdeaf .Len ()!=2{_dgf .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bdeaf .Len ());return nil ,ErrInvalidAttribute ;
};_dcfeag .Extend =_bdeaf ;};return &_dcfeag ,nil ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_fbagc *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_eabd :=_cag .NewReader (img .getBase ());_febb :=_fe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._abecg ,img ._ggcdd );
_aefec :=_cag .NewWriter (_febb );_fgcf :=_fg .Pow (2,float64 (img .BitsPerComponent ))-1;_adeb :=_fbagc .GetNumComponents ();_cfef :=make ([]uint32 ,_adeb );_gafbb :=make ([]float64 ,_adeb );for {_edbd :=_eabd .ReadSamples (_cfef );if _edbd ==_cf .EOF {break ;
}else if _edbd !=nil {return img ,_edbd ;};for _gedf :=0;_gedf < _adeb ;_gedf ++{_fgdf :=float64 (_cfef [_gedf ])/_fgcf ;_gafbb [_gedf ]=_fgdf ;};_cegb ,_edbd :=_fbagc .TintTransform .Evaluate (_gafbb );if _edbd !=nil {return img ,_edbd ;};for _ ,_eedc :=range _cegb {_eedc =_fg .Min (_fg .Max (0,_eedc ),1.0);
if _edbd =_aefec .WriteSample (uint32 (_eedc *_fgcf ));_edbd !=nil {return img ,_edbd ;};};};return _fbagc .AlternateSpace .ImageToRGB (_aecb (&_febb ));};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_deca *PdfColorspaceDeviceN )GetNumComponents ()int {return _deca .ColorantNames .Len ()};func _acgcg (_dcbbb StdFontName )(pdfFontSimple ,error ){_cfebg ,_bccee :=_ad .NewStdFontByName (_dcbbb );if !_bccee {return pdfFontSimple {},ErrFontNotSupported ;
};_dccc :=_bcfb (_cfebg );return _dccc ,nil ;};func (_gdb *PdfReader )newPdfAnnotationSquareFromDict (_aeeb *_gb .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_aceea :=PdfAnnotationSquare {};_bbfe ,_caca :=_gdb .newPdfAnnotationMarkupFromDict (_aeeb );
if _caca !=nil {return nil ,_caca ;};_aceea .PdfAnnotationMarkup =_bbfe ;_aceea .BS =_aeeb .Get ("\u0042\u0053");_aceea .IC =_aeeb .Get ("\u0049\u0043");_aceea .BE =_aeeb .Get ("\u0042\u0045");_aceea .RD =_aeeb .Get ("\u0052\u0044");return &_aceea ,nil ;
};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_bcdga *OutlineItem )Insert (index uint ,item *OutlineItem ){_fdeeb :=uint (len (_bcdga .Entries ));if index > _fdeeb {index =_fdeeb ;};_bcdga .Entries =append (_bcdga .Entries [:index ],append ([]*OutlineItem {item },_bcdga .Entries [index :]...)...);
};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_gb .PdfIndirectObject ;SV *_gb .PdfIndirectObject ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_aaaaf *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_cacb :=func (_bacd float64 )float64 {if _bacd >=6.0/29{return _bacd *_bacd *_bacd ;};return 108.0/841*(_bacd -4/29);};_edbg :=img ._ggcdd ;if len (_edbg )!=6{_dgf .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_edbg =_aaaaf .DecodeArray ();};_feae :=_cag .NewReader (img .getBase ());_cfeb :=_fe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._abecg ,img ._ggcdd );_ebea :=_cag .NewWriter (_cfeb );_gdfca :=_fg .Pow (2,float64 (img .BitsPerComponent ))-1;
_babbg :=make ([]uint32 ,3);var (_cdda error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_eegdd ,_aceb ,_bbdef float64 ;);for {_cdda =_feae .ReadSamples (_babbg );if _cdda ==_cf .EOF {break ;}else if _cdda !=nil {return img ,_cdda ;};Ls =float64 (_babbg [0])/_gdfca ;
As =float64 (_babbg [1])/_gdfca ;Bs =float64 (_babbg [2])/_gdfca ;Ls =_fe .LinearInterpolate (Ls ,0.0,1.0,_edbg [0],_edbg [1]);As =_fe .LinearInterpolate (As ,0.0,1.0,_edbg [2],_edbg [3]);Bs =_fe .LinearInterpolate (Bs ,0.0,1.0,_edbg [4],_edbg [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_aaaaf .WhitePoint [0]*_cacb (L );Y =_aaaaf .WhitePoint [1]*_cacb (M );Z =_aaaaf .WhitePoint [2]*_cacb (N );_eegdd =3.240479*X +-1.537150*Y +-0.498535*Z ;_aceb =-0.969256*X +1.875992*Y +0.041556*Z ;_bbdef =0.055648*X +-0.204043*Y +1.057311*Z ;
_eegdd =_fg .Min (_fg .Max (_eegdd ,0),1.0);_aceb =_fg .Min (_fg .Max (_aceb ,0),1.0);_bbdef =_fg .Min (_fg .Max (_bbdef ,0),1.0);_babbg [0]=uint32 (_eegdd *_gdfca );_babbg [1]=uint32 (_aceb *_gdfca );_babbg [2]=uint32 (_bbdef *_gdfca );if _cdda =_ebea .WriteSamples (_babbg );
_cdda !=nil {return img ,_cdda ;};};return _aecb (&_cfeb ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_ded *PdfActionRendition )ToPdfObject ()_gb .PdfObject {_ded .PdfAction .ToPdfObject ();_dege :=_ded ._cd ;_fab :=_dege .PdfObject .(*_gb .PdfObjectDictionary );_fab .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeRendition )));_fab .SetIfNotNil ("\u0052",_ded .R );
_fab .SetIfNotNil ("\u0041\u004e",_ded .AN );_fab .SetIfNotNil ("\u004f\u0050",_ded .OP );_fab .SetIfNotNil ("\u004a\u0053",_ded .JS );return _dege ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gb .PdfObject ;IC _gb .PdfObject ;BE _gb .PdfObject ;RD _gb .PdfObject ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_feddf *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_feddf .HiVal )};};func (_fedc *PdfAppender )replaceObject (_fcgc ,_fcea _gb .PdfObject ){switch _bfaf :=_fcgc .(type ){case *_gb .PdfIndirectObject :_fedc ._dbgc [_fcea ]=_bfaf .ObjectNumber ;
case *_gb .PdfObjectStream :_fedc ._dbgc [_fcea ]=_bfaf .ObjectNumber ;};};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_ebcb *pdfFontSimple )SetEncoder (encoder _fed .TextEncoder ){_ebcb ._dgdge =encoder };var (CourierName =_ad .CourierName ;CourierBoldName =_ad .CourierBoldName ;CourierObliqueName =_ad .CourierObliqueName ;CourierBoldObliqueName =_ad .CourierBoldObliqueName ;
HelveticaName =_ad .HelveticaName ;HelveticaBoldName =_ad .HelveticaBoldName ;HelveticaObliqueName =_ad .HelveticaObliqueName ;HelveticaBoldObliqueName =_ad .HelveticaBoldObliqueName ;SymbolName =_ad .SymbolName ;ZapfDingbatsName =_ad .ZapfDingbatsName ;
TimesRomanName =_ad .TimesRomanName ;TimesBoldName =_ad .TimesBoldName ;TimesItalicName =_ad .TimesItalicName ;TimesBoldItalicName =_ad .TimesBoldItalicName ;);

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_bbbca *XObjectForm )GetContainingPdfObject ()_gb .PdfObject {return _bbbca ._fadf };

// RemovePage removes a page by number.
func (_ccge *PdfAppender )RemovePage (pageNum int ){_bfec :=pageNum -1;_ccge ._bcabf =append (_ccge ._bcabf [0:_bfec ],_ccge ._bcabf [pageNum :]...);};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_gb .PdfObjectInteger ;BitsPerComponent *_gb .PdfObjectInteger ;BitsPerFlag *_gb .PdfObjectInteger ;Decode *_gb .PdfObjectArray ;Function []PdfFunction ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bbcg pdfCIDFontType2 )GetCharMetrics (code _fed .CharCode )(_ad .CharMetrics ,bool ){if _gbbbe ,_agadf :=_bbcg ._fbdg [code ];_agadf {return _ad .CharMetrics {Wx :_gbbbe },true ;};_abgb :=rune (code );_febeg ,_ggag :=_bbcg ._dfcb [_abgb ];if !_ggag {_febeg =int (_bbcg ._aebcb );
};return _ad .CharMetrics {Wx :float64 (_febeg )},true ;};func (_bfa *PdfAppender )mergeResources (_fabg ,_aaaba _gb .PdfObject ,_cdgf map[_gb .PdfObjectName ]_gb .PdfObjectName )_gb .PdfObject {if _aaaba ==nil &&_fabg ==nil {return nil ;};if _aaaba ==nil {return _fabg ;
};_aggb ,_gade :=_gb .GetDict (_aaaba );if !_gade {return _fabg ;};if _fabg ==nil {_dfca :=_gb .MakeDict ();_dfca .Merge (_aggb );return _aaaba ;};_ccgd ,_gade :=_gb .GetDict (_fabg );if !_gade {_dgf .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_ccgd =_gb .MakeDict ();};for _ ,_afea :=range _aggb .Keys (){if _cage ,_defee :=_cdgf [_afea ];_defee {_ccgd .Set (_cage ,_aggb .Get (_afea ));}else {_ccgd .Set (_afea ,_aggb .Get (_afea ));};};return _ccgd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bfadd *PdfShadingType7 )ToPdfObject ()_gb .PdfObject {_bfadd .PdfShading .ToPdfObject ();_afec ,_cgabc :=_bfadd .getShadingDict ();if _cgabc !=nil {_dgf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bfadd .BitsPerCoordinate !=nil {_afec .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bfadd .BitsPerCoordinate );};if _bfadd .BitsPerComponent !=nil {_afec .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bfadd .BitsPerComponent );
};if _bfadd .BitsPerFlag !=nil {_afec .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bfadd .BitsPerFlag );};if _bfadd .Decode !=nil {_afec .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bfadd .Decode );};if _bfadd .Function !=nil {if len (_bfadd .Function )==1{_afec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfadd .Function [0].ToPdfObject ());
}else {_eeggf :=_gb .MakeArray ();for _ ,_afbgg :=range _bfadd .Function {_eeggf .Append (_afbgg .ToPdfObject ());};_afec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eeggf );};};return _bfadd ._gccef ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_ccfg *PdfField )IsTerminal ()bool {return len (_ccfg .Kids )==0};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_dedae *PdfColorspaceCalGray )ToPdfObject ()_gb .PdfObject {_cbgg :=&_gb .PdfObjectArray {};_cbgg .Append (_gb .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_gegc :=_gb .MakeDict ();if _dedae .WhitePoint !=nil {_gegc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gb .MakeArray (_gb .MakeFloat (_dedae .WhitePoint [0]),_gb .MakeFloat (_dedae .WhitePoint [1]),_gb .MakeFloat (_dedae .WhitePoint [2])));
}else {_dgf .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _dedae .BlackPoint !=nil {_gegc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gb .MakeArray (_gb .MakeFloat (_dedae .BlackPoint [0]),_gb .MakeFloat (_dedae .BlackPoint [1]),_gb .MakeFloat (_dedae .BlackPoint [2])));
};_gegc .Set ("\u0047\u0061\u006dm\u0061",_gb .MakeFloat (_dedae .Gamma ));_cbgg .Append (_gegc );if _dedae ._fedf !=nil {_dedae ._fedf .PdfObject =_cbgg ;return _dedae ._fedf ;};return _cbgg ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_edgc *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _caee []float64 ;for _gffg :=0;_gffg < _edgc .GetNumComponents ();_gffg ++{_caee =append (_caee ,0.0,1.0);};return _caee ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_cadb *PdfWriter )AddPage (page *PdfPage )error {const _debff ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_fgcc :=page .ToPdfObject ();_dgf .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_dgf .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_fgcc );_cgfaa ,_gfdcb :=_gb .GetIndirect (_fgcc );if !_gfdcb {return _ga .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_dgf .Log .Trace ("\u0025\u0073",_cgfaa );_dgf .Log .Trace ("\u0025\u0073",_cgfaa .PdfObject );_gcffc ,_gfdcb :=_gb .GetDict (_cgfaa .PdfObject );if !_gfdcb {return _ga .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_adgbbg ,_gfdcb :=_gb .GetName (_gcffc .Get ("\u0054\u0079\u0070\u0065"));if !_gfdcb {return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_gcffc .Get ("\u0054\u0079\u0070\u0065"));
};if _adgbbg .String ()!="\u0050\u0061\u0067\u0065"{return _ga .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_accf :=[]_gb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_dfced ,_gabde :=_gb .GetIndirect (_gcffc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_dgf .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_gcffc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_gabde );
for _gabde {_dgf .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dfced );_bagag ,_fbfbfb :=_gb .GetDict (_dfced .PdfObject );if !_fbfbfb {return _ga .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_geeb :=range _accf {_dgf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_geeb );if _gcffc .Get (_geeb )!=nil {_dgf .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _dcdgf :=_bagag .Get (_geeb );_dcdgf !=nil {_dgf .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_geeb );_gcffc .Set (_geeb ,_dcdgf );};};_dfced ,_gabde =_gb .GetIndirect (_bagag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_dgf .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bagag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_dgf .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_gcffc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cadb ._ddacg );_cgfaa .PdfObject =_gcffc ;_aabcfe ,_gfdcb :=_gb .GetDict (_cadb ._ddacg .PdfObject );if !_gfdcb {return _ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_dfedg ,_gfdcb :=_gb .GetArray (_aabcfe .Get ("\u004b\u0069\u0064\u0073"));if !_gfdcb {return _ga .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_dfedg .Append (_cgfaa );_cadb ._ceagag [_gcffc ]=struct{}{};_gbfeb ,_gfdcb :=_gb .GetInt (_aabcfe .Get ("\u0043\u006f\u0075n\u0074"));if !_gfdcb {return _ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_gbfeb =*_gbfeb +1;if page ._aefcc ==nil {_eafgf :=_cgb .Track (_cadb ._cdegff ,_debff );if _eafgf !=nil {return _eafgf ;};}else {_dbgfe :=_cgb .Track (page ._aefcc ._cdfea ,_debff );if _dbgfe !=nil {return _dbgfe ;};};_cadb .addObject (_cgfaa );_gbcdd :=_cadb .addObjects (_gcffc );
if _gbcdd !=nil {return _gbcdd ;};return nil ;};func _bdgac (_dedbc []rune ,_defcc map[rune ]int ,_gbcbg map[rune ]_ad .GID )*_gb .PdfObjectArray {_aaaga :=&_gb .PdfObjectArray {};for _fbdba :=0;_fbdba < len (_dedbc );{_gcbb :=_defcc [_dedbc [_fbdba ]];
_eccf :=_fbdba ;for _cfcd :=_fbdba +1;_cfcd < len (_dedbc );_cfcd ++{_fbfc :=_defcc [_dedbc [_cfcd ]];if _gcbb ==_fbfc {_eccf =_cfcd ;}else {break ;};};_agbgb :=_gbcbg [_dedbc [_fbdba ]];_bfbef :=_gbcbg [_dedbc [_eccf ]];_aaaga .Append (_gb .MakeInteger (int64 (_agbgb )));
_aaaga .Append (_gb .MakeInteger (int64 (_bfbef )));_aaaga .Append (_gb .MakeInteger (int64 (_gcbb )));_fbdba =_eccf +1;};return _aaaga ;};

// PdfVersion returns version of the PDF file.
func (_dbbca *PdfReader )PdfVersion ()_gb .Version {return _dbbca ._gedb .PdfVersion ()};func (_cdbaa fontCommon )isCIDFont ()bool {if _cdbaa ._cedad ==""{_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cdbaa );
};_cecd :=false ;switch _cdbaa ._cedad {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cecd =true ;};_dgf .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_cecd ,_cdbaa );
return _cecd ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_affda *PdfReader )GetOutlines ()(*Outline ,error ){if _affda ==nil {return nil ,_ga .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_ggcec :=_affda .GetOutlineTree ();if _ggcec ==nil {return nil ,_ga .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _abggc func (_cccfd *PdfOutlineTreeNode ,_aefcd *[]*OutlineItem );_abggc =func (_aebd *PdfOutlineTreeNode ,_fagfd *[]*OutlineItem ){if _aebd ==nil {return ;};if _aebd ._gdeda ==nil {_dgf .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _agafd *OutlineItem ;if _bbbd ,_bdabb :=_aebd ._gdeda .(*PdfOutlineItem );_bdabb {_abbbe :=_bbbd .Dest ;if (_abbbe ==nil ||_gb .IsNullObject (_abbbe ))&&_bbbd .A !=nil {if _bbbg ,_dgab :=_gb .GetDict (_bbbd .A );_dgab {_abbbe ,_ =_gb .GetArray (_bbbg .Get ("\u0044"));
};};var _dacec OutlineDest ;if _abbbe !=nil &&!_gb .IsNullObject (_abbbe ){if _bcfbc ,_adaag :=_efdf (_abbbe ,_affda );_adaag ==nil {_dacec =*_bcfbc ;}else {_dgf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_abbbe ,_adaag );
};};_agafd =NewOutlineItem (_bbbd .Title .Decoded (),_dacec );*_fagfd =append (*_fagfd ,_agafd );if _bbbd .Next !=nil {_abggc (_bbbd .Next ,_fagfd );};};if _aebd .First !=nil {if _agafd !=nil {_fagfd =&_agafd .Entries ;};_abggc (_aebd .First ,_fagfd );
};};_fdbfbe :=NewOutline ();_abggc (_ggcec ,&_fdbfbe .Entries );return _fdbfbe ,nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_ddbc *PdfPageResources )GetXObjectFormByName (keyName _gb .PdfObjectName )(*XObjectForm ,error ){_cdabbc ,_gcfd :=_ddbc .GetXObjectByName (keyName );if _cdabbc ==nil {return nil ,nil ;};if _gcfd !=XObjectTypeForm {return nil ,_ga .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_agaa ,_dgcb :=NewXObjectFormFromStream (_cdabbc );if _dgcb !=nil {return nil ,_dgcb ;};return _agaa ,nil ;};func (_bagcd *DSS )addCerts (_dafd [][]byte )([]*_gb .PdfObjectStream ,error ){return _bagcd .add (&_bagcd .Certs ,_bagcd ._ggaa ,_dafd );};func (_fbg *PdfReader )newPdfAnnotationMarkupFromDict (_eaa *_gb .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_bbee :=&PdfAnnotationMarkup {};
if _gcda :=_eaa .Get ("\u0054");_gcda !=nil {_bbee .T =_gcda ;};if _gfcea :=_eaa .Get ("\u0050\u006f\u0070u\u0070");_gfcea !=nil {_ffdb ,_efaa :=_gfcea .(*_gb .PdfIndirectObject );if !_efaa {if _ ,_dbff :=_gfcea .(*_gb .PdfObjectNull );!_dbff {return nil ,_ga .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_bfb ,_cebf :=_fbg .newPdfAnnotationFromIndirectObject (_ffdb );if _cebf !=nil {return nil ,_cebf ;};if _bfb !=nil {_bfgd ,_fabf :=_bfb ._defe .(*PdfAnnotationPopup );if !_fabf {return nil ,_ga .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_bbee .Popup =_bfgd ;};};};if _gace :=_eaa .Get ("\u0043\u0041");_gace !=nil {_bbee .CA =_gace ;};if _gdef :=_eaa .Get ("\u0052\u0043");_gdef !=nil {_bbee .RC =_gdef ;};if _gbbb :=_eaa .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_gbbb !=nil {_bbee .CreationDate =_gbbb ;};if _beg :=_eaa .Get ("\u0049\u0052\u0054");_beg !=nil {_bbee .IRT =_beg ;};if _bcc :=_eaa .Get ("\u0053\u0075\u0062\u006a");_bcc !=nil {_bbee .Subj =_bcc ;};if _adc :=_eaa .Get ("\u0052\u0054");_adc !=nil {_bbee .RT =_adc ;
};if _ffdbd :=_eaa .Get ("\u0049\u0054");_ffdbd !=nil {_bbee .IT =_ffdbd ;};if _bccc :=_eaa .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_bccc !=nil {_bbee .ExData =_bccc ;};return _bbee ,nil ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_acbd *PdfField )GetContext ()PdfModel {return _acbd ._gbce };

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_cdfa *PdfFieldText )ToPdfObject ()_gb .PdfObject {_cdfa .PdfField .ToPdfObject ();_ddbd :=_cdfa ._faea ;_cfab :=_ddbd .PdfObject .(*_gb .PdfObjectDictionary );_cfab .Set ("\u0046\u0054",_gb .MakeName ("\u0054\u0078"));if _cdfa .DA !=nil {_cfab .Set ("\u0044\u0041",_cdfa .DA );
};if _cdfa .Q !=nil {_cfab .Set ("\u0051",_cdfa .Q );};if _cdfa .DS !=nil {_cfab .Set ("\u0044\u0053",_cdfa .DS );};if _cdfa .RV !=nil {_cfab .Set ("\u0052\u0056",_cdfa .RV );};if _cdfa .MaxLen !=nil {_cfab .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_cdfa .MaxLen );
};return _ddbd ;};func _eaf (_geb _gb .PdfObject )(*PdfBorderStyle ,error ){_fceee :=&PdfBorderStyle {};_fceee ._fccg =_geb ;var _debd *_gb .PdfObjectDictionary ;_geb =_gb .TraceToDirectObject (_geb );_debd ,_gfed :=_geb .(*_gb .PdfObjectDictionary );if !_gfed {return nil ,_ga .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};if _edb :=_debd .Get ("\u0054\u0079\u0070\u0065");_edb !=nil {_faaf ,_dgca :=_edb .(*_gb .PdfObjectName );if !_dgca {_dgf .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_edb );
}else {if *_faaf !="\u0042\u006f\u0072\u0064\u0065\u0072"{_dgf .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_faaf );};};};if _bbgc :=_debd .Get ("\u0057");
_bbgc !=nil {_dadd ,_ggaf :=_gb .GetNumberAsFloat (_bbgc );if _ggaf !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_ggaf );return nil ,_ggaf ;};_fceee .W =&_dadd ;
};if _bdaf :=_debd .Get ("\u0053");_bdaf !=nil {_bgdcd ,_cgdd :=_bdaf .(*_gb .PdfObjectName );if !_cgdd {return nil ,_ga .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _ggc BorderStyle ;switch *_bgdcd {case "\u0053":_ggc =BorderStyleSolid ;case "\u0044":_ggc =BorderStyleDashed ;case "\u0042":_ggc =BorderStyleBeveled ;case "\u0049":_ggc =BorderStyleInset ;case "\u0055":_ggc =BorderStyleUnderline ;default:_dgf .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_bgdcd );
return nil ,_ga .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_fceee .S =&_ggc ;};if _bfgg :=_debd .Get ("\u0044");_bfgg !=nil {_eagb ,_efca :=_bfgg .(*_gb .PdfObjectArray );
if !_efca {_dgf .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_bfgg );return nil ,_ga .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_cffd ,_dcbb :=_eagb .ToIntegerArray ();if _dcbb !=nil {_dgf .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_dcbb );
return nil ,_dcbb ;};_fceee .D =&_cffd ;};return _fceee ,nil ;};func _fddcb (_ffeg *_gb .PdfObjectDictionary ,_ceaga *fontCommon ,_eefc _fed .TextEncoder )(*pdfFontSimple ,error ){_dbcbe :=_gdbf (_ceaga );_dbcbe ._bdaa =_eefc ;if _eefc ==nil {_gfbab :=_ffeg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _gfbab ==nil {_gfbab =_gb .MakeInteger (0);};_dbcbe .FirstChar =_gfbab ;_dagbd ,_bgefe :=_gb .GetIntVal (_gfbab );if !_bgefe {_dgf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gfbab );
return nil ,_gb .ErrTypeError ;};_gfaga :=_fed .CharCode (_dagbd );_gfbab =_ffeg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gfbab ==nil {_gfbab =_gb .MakeInteger (255);};_dbcbe .LastChar =_gfbab ;_dagbd ,_bgefe =_gb .GetIntVal (_gfbab );
if !_bgefe {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gfbab );return nil ,_gb .ErrTypeError ;
};_faaee :=_fed .CharCode (_dagbd );_dbcbe ._efcg =make (map[_fed .CharCode ]float64 );_gfbab =_ffeg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gfbab !=nil {_dbcbe .Widths =_gfbab ;_fcdd ,_febaa :=_gb .GetArray (_gfbab );if !_febaa {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gfbab );
return nil ,_gb .ErrTypeError ;};_acac ,_cegd :=_fcdd .ToFloat64Array ();if _cegd !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cegd ;};if len (_acac )!=int (_faaee -_gfaga +1){_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_faaee -_gfaga +1,len (_acac ));
return nil ,_gb .ErrRangeError ;};for _dgfbb ,_cdee :=range _acac {_dbcbe ._efcg [_gfaga +_fed .CharCode (_dgfbb )]=_cdee ;};};};_dbcbe .Encoding =_gb .TraceToDirectObject (_ffeg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _dbcbe ,nil ;
};func (_dged *pdfFontSimple )updateStandard14Font (){_aaaef ,_aggc :=_dged .Encoder ().(_fed .SimpleEncoder );if !_aggc {_dgf .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_dged .Encoder (),_dged );
return ;};_adedb :=_aaaef .Charcodes ();_dged ._efcg =make (map[_fed .CharCode ]float64 ,len (_adedb ));for _ ,_aggd :=range _adedb {_aeaeg ,_ :=_aaaef .CharcodeToRune (_aggd );_dged ._efcg [_aggd ]=_dged ._efdg [_aeaeg ].Wx ;};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fdfgf *PdfShadingType5 )ToPdfObject ()_gb .PdfObject {_fdfgf .PdfShading .ToPdfObject ();_cfedb ,_fafed :=_fdfgf .getShadingDict ();if _fafed !=nil {_dgf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fdfgf .BitsPerCoordinate !=nil {_cfedb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fdfgf .BitsPerCoordinate );};if _fdfgf .BitsPerComponent !=nil {_cfedb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fdfgf .BitsPerComponent );
};if _fdfgf .VerticesPerRow !=nil {_cfedb .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_fdfgf .VerticesPerRow );};if _fdfgf .Decode !=nil {_cfedb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fdfgf .Decode );};
if _fdfgf .Function !=nil {if len (_fdfgf .Function )==1{_cfedb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdfgf .Function [0].ToPdfObject ());}else {_febda :=_gb .MakeArray ();for _ ,_bbacd :=range _fdfgf .Function {_febda .Append (_bbacd .ToPdfObject ());
};_cfedb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_febda );};};return _fdfgf ._gccef ;};func (_gbbc *PdfReader )newPdfAnnotationFileAttachmentFromDict (_degeb *_gb .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_cfgb :=PdfAnnotationFileAttachment {};
_efgd ,_ecaf :=_gbbc .newPdfAnnotationMarkupFromDict (_degeb );if _ecaf !=nil {return nil ,_ecaf ;};_cfgb .PdfAnnotationMarkup =_efgd ;_cfgb .FS =_degeb .Get ("\u0046\u0053");_cfgb .Name =_degeb .Get ("\u004e\u0061\u006d\u0065");return &_cfgb ,nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_fcgec *pdfCIDFontType2 )ToPdfObject ()_gb .PdfObject {if _fcgec ._acdb ==nil {_fcgec ._acdb =&_gb .PdfIndirectObject {};};_gece :=_fcgec .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_fcgec ._acdb .PdfObject =_gece ;if _fcgec .CIDSystemInfo !=nil {_gece .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_fcgec .CIDSystemInfo );};if _fcgec .DW !=nil {_gece .Set ("\u0044\u0057",_fcgec .DW );};if _fcgec .DW2 !=nil {_gece .Set ("\u0044\u0057\u0032",_fcgec .DW2 );
};if _fcgec .W !=nil {_gece .Set ("\u0057",_fcgec .W );};if _fcgec .W2 !=nil {_gece .Set ("\u0057\u0032",_fcgec .W2 );};if _fcgec .CIDToGIDMap !=nil {_gece .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_fcgec .CIDToGIDMap );};return _fcgec ._acdb ;
};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// Clear clears flag fl from the flag and returns the resulting flag.
func (_aeea FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_aeea .Mask ()&^fl .Mask ())};

// SetDate sets the `M` field of the signature.
func (_febae *PdfSignature )SetDate (date _f .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_febae .M =_gb .MakeString (date .Format (format ));
};func (_dgfgc *pdfCIDFontType2 )baseFields ()*fontCommon {return &_dgfgc .fontCommon };

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_gabb *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gdafa :=NewPdfOutline ();_gdafa ._gdeda =&_gdafa ;return _gdafa ;};func (_dfb *PdfReader )newPdfAnnotationHighlightFromDict (_efc *_gb .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_cebd :=PdfAnnotationHighlight {};
_aage ,_aaed :=_dfb .newPdfAnnotationMarkupFromDict (_efc );if _aaed !=nil {return nil ,_aaed ;};_cebd .PdfAnnotationMarkup =_aage ;_cebd .QuadPoints =_efc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cebd ,nil ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// Encrypt encrypts the output file with a specified user/owner password.
func (_edcba *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_fgaeb :=RC4_128bit ;if options !=nil {_fgaeb =options .Algorithm ;};_dffee :=_gg .PermOwner ;if options !=nil {_dffee =options .Permissions ;};var _cfgg _aaa .Filter ;
switch _fgaeb {case RC4_128bit :_cfgg =_aaa .NewFilterV2 (16);case AES_128bit :_cfgg =_aaa .NewFilterAESV2 ();case AES_256bit :_cfgg =_aaa .NewFilterAESV3 ();default:return _b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_ededdb ,_dagbda ,_eedec :=_gb .PdfCryptNewEncrypt (_cfgg ,userPass ,ownerPass ,_dffee );if _eedec !=nil {return _eedec ;};_edcba ._eggbd =_ededdb ;if _dagbda .Major !=0{_edcba .SetVersion (_dagbda .Major ,_dagbda .Minor );};_edcba ._bega =_dagbda .Encrypt ;
_edcba ._febdg =_gb .MakeArray (_gb .MakeHexString (_dagbda .ID0 ),_gb .MakeHexString (_dagbda .ID1 ));_cbdea :=_gb .MakeIndirectObject (_dagbda .Encrypt );_edcba ._fcecc =_cbdea ;_edcba .addObject (_cbdea );return nil ;};func _affb (_afad *PdfField ,_ebdg _gb .PdfObject ){for _ ,_ffgac :=range _afad .Annotations {_ffgac .AS =_ebdg ;
_ffgac .ToPdfObject ();};};func (_aadcc *PdfFilespec )getDict ()*_gb .PdfObjectDictionary {if _dceb ,_deacd :=_aadcc ._ebc .(*_gb .PdfIndirectObject );_deacd {_gedd ,_dcbc :=_dceb .PdfObject .(*_gb .PdfObjectDictionary );if !_dcbc {return nil ;};return _gedd ;
}else if _feaca ,_efbe :=_aadcc ._ebc .(*_gb .PdfObjectDictionary );_efbe {return _feaca ;}else {_dgf .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_aadcc ._ebc );
return nil ;};};func (_abcag *PdfWriter )writeObject (_bcdba int ,_fddaf _gb .PdfObject ){_dgf .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_bcdba );if _agbc ,_cedae :=_fddaf .(*_gb .PdfIndirectObject );
_cedae {_abcag ._gdfe [_bcdba ]=crossReference {Type :1,Offset :_abcag ._bdabg ,Generation :_agbc .GenerationNumber };_gcbag :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bcdba );if _gfdac ,_ebbeg :=_agbc .PdfObject .(*pdfSignDictionary );
_ebbeg {_gfdac ._aebcd =_abcag ._bdabg +int64 (len (_gcbag ));};if _agbc .PdfObject ==nil {_dgf .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_agbc .PdfObject =_gb .MakeNull ();};_gcbag +=_agbc .PdfObject .WriteString ();_gcbag +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_abcag .writeString (_gcbag );return ;};if _bbgbf ,_abgc :=_fddaf .(*_gb .PdfObjectStream );_abgc {_abcag ._gdfe [_bcdba ]=crossReference {Type :1,Offset :_abcag ._bdabg ,Generation :_bbgbf .GenerationNumber };
_adbaf :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bcdba );_adbaf +=_bbgbf .PdfObjectDictionary .WriteString ();_adbaf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_abcag .writeString (_adbaf );_abcag .writeBytes (_bbgbf .Stream );
_abcag .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _caae ,_acccg :=_fddaf .(*_gb .PdfObjectStreams );_acccg {_abcag ._gdfe [_bcdba ]=crossReference {Type :1,Offset :_abcag ._bdabg ,Generation :_caae .GenerationNumber };
_dagf :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bcdba );var _dggcc []string ;var _bgeaef string ;var _cafca int64 ;for _cgfef ,_aafgb :=range _caae .Elements (){_agccag ,_bbab :=_aafgb .(*_gb .PdfIndirectObject );if !_bbab {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_bcdba ,_aafgb );
continue ;};_fbfcg :=_agccag .PdfObject .WriteString ()+"\u0020";_bgeaef =_bgeaef +_fbfcg ;_dggcc =append (_dggcc ,_b .Sprintf ("\u0025\u0064\u0020%\u0064",_agccag .ObjectNumber ,_cafca ));_abcag ._gdfe [int (_agccag .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_bcdba ,Index :_cgfef };
_cafca =_cafca +int64 (len ([]byte (_fbfcg )));};_caggb :=_fd .Join (_dggcc ,"\u0020")+"\u0020";_gdbae :=_gb .NewFlateEncoder ();_dedca :=_gdbae .MakeStreamDict ();_dedca .Set (_gb .PdfObjectName ("\u0054\u0079\u0070\u0065"),_gb .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_aebef :=int64 (_caae .Len ());_dedca .Set (_gb .PdfObjectName ("\u004e"),_gb .MakeInteger (_aebef ));_dddaf :=int64 (len (_caggb ));_dedca .Set (_gb .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_gb .MakeInteger (_dddaf ));_dgabd ,_ :=_gdbae .EncodeBytes ([]byte (_caggb +_bgeaef ));
_egef :=int64 (len (_dgabd ));_dedca .Set (_gb .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_gb .MakeInteger (_egef ));_dagf +=_dedca .WriteString ();_dagf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_abcag .writeString (_dagf );_abcag .writeBytes (_dgabd );
_abcag .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_abcag .writeString (_fddaf .WriteString ());};

// GetNumComponents returns the number of color components (3 for Lab).
func (_fgdc *PdfColorLab )GetNumComponents ()int {return 3};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _gb .PdfObject ;MK _gb .PdfObject ;A _gb .PdfObject ;AA _gb .PdfObject ;BS _gb .PdfObject ;Parent _gb .PdfObject ;_fcd *PdfField ;_fcac bool ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fgec *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbfb ,_cfbeg :=_gb .GetNumbersAsFloat (objects );
if _cfbeg !=nil {return nil ,_cfbeg ;};return _fgec .ColorFromFloats (_dbfb );};var ImageHandling ImageHandler =DefaultImageHandler {};func (_gee *PdfReader )newPdfAnnotationFromIndirectObject (_cge *_gb .PdfIndirectObject )(*PdfAnnotation ,error ){_ece ,_add :=_cge .PdfObject .(*_gb .PdfObjectDictionary );
if !_add {return nil ,_b .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_gee ._dfffec .GetModelFromPrimitive (_ece );model !=nil {_cdc ,_acee :=model .(*PdfAnnotation );if !_acee {return nil ,_b .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _cdc ,nil ;};_bca :=&PdfAnnotation {};_bca ._dccf =_cge ;_gee ._dfffec .Register (_ece ,_bca );if _ecb :=_ece .Get ("\u0054\u0079\u0070\u0065");_ecb !=nil {_ddg ,_cdge :=_ecb .(*_gb .PdfObjectName );if !_cdge {_dgf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ecb );
}else {if *_ddg !="\u0041\u006e\u006eo\u0074"{_dgf .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_ddg );};};};if _gdfc :=_ece .Get ("\u0052\u0065\u0063\u0074");
_gdfc !=nil {_bca .Rect =_gdfc ;};if _gege :=_ece .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gege !=nil {_bca .Contents =_gege ;};if _ggef :=_ece .Get ("\u0050");_ggef !=nil {_bca .P =_ggef ;};if _cgfe :=_ece .Get ("\u004e\u004d");_cgfe !=nil {_bca .NM =_cgfe ;
};if _dbcg :=_ece .Get ("\u004d");_dbcg !=nil {_bca .M =_dbcg ;};if _bfg :=_ece .Get ("\u0046");_bfg !=nil {_bca .F =_bfg ;};if _gcag :=_ece .Get ("\u0041\u0050");_gcag !=nil {_bca .AP =_gcag ;};if _ead :=_ece .Get ("\u0041\u0053");_ead !=nil {_bca .AS =_ead ;
};if _cged :=_ece .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_cged !=nil {_bca .Border =_cged ;};if _babc :=_ece .Get ("\u0043");_babc !=nil {_bca .C =_babc ;};if _bagc :=_ece .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_bagc !=nil {_bca .StructParent =_bagc ;};if _acc :=_ece .Get ("\u004f\u0043");_acc !=nil {_bca .OC =_acc ;};_gfgc :=_ece .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _gfgc ==nil {_dgf .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_bca ._defe =nil ;return _bca ,nil ;};_cfdf ,_gcce :=_gfgc .(*_gb .PdfObjectName );if !_gcce {_dgf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gfgc );
return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_gfgc );};switch *_cfdf {case "\u0054\u0065\u0078\u0074":_agdd ,_cffg :=_gee .newPdfAnnotationTextFromDict (_ece );
if _cffg !=nil {return nil ,_cffg ;};_agdd .PdfAnnotation =_bca ;_bca ._defe =_agdd ;return _bca ,nil ;case "\u004c\u0069\u006e\u006b":_caa ,_acbb :=_gee .newPdfAnnotationLinkFromDict (_ece );if _acbb !=nil {return nil ,_acbb ;};_caa .PdfAnnotation =_bca ;
_bca ._defe =_caa ;return _bca ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_aga ,_fcef :=_gee .newPdfAnnotationFreeTextFromDict (_ece );if _fcef !=nil {return nil ,_fcef ;};_aga .PdfAnnotation =_bca ;_bca ._defe =_aga ;return _bca ,nil ;
case "\u004c\u0069\u006e\u0065":_deb ,_dde :=_gee .newPdfAnnotationLineFromDict (_ece );if _dde !=nil {return nil ,_dde ;};_deb .PdfAnnotation =_bca ;_bca ._defe =_deb ;_dgf .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_bca ,_bca );
_dgf .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_deb ,_deb );_dgf .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_deb .PdfAnnotationMarkup ,_deb .PdfAnnotationMarkup );
return _bca ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_abde ,_cfe :=_gee .newPdfAnnotationSquareFromDict (_ece );if _cfe !=nil {return nil ,_cfe ;};_abde .PdfAnnotation =_bca ;_bca ._defe =_abde ;return _bca ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cbbd ,_gcaa :=_gee .newPdfAnnotationCircleFromDict (_ece );
if _gcaa !=nil {return nil ,_gcaa ;};_cbbd .PdfAnnotation =_bca ;_bca ._defe =_cbbd ;return _bca ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_edc ,_cec :=_gee .newPdfAnnotationPolygonFromDict (_ece );if _cec !=nil {return nil ,_cec ;};_edc .PdfAnnotation =_bca ;
_bca ._defe =_edc ;return _bca ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_bbb ,_fcb :=_gee .newPdfAnnotationPolyLineFromDict (_ece );if _fcb !=nil {return nil ,_fcb ;};_bbb .PdfAnnotation =_bca ;_bca ._defe =_bbb ;return _bca ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_fabe ,_gcaac :=_gee .newPdfAnnotationHighlightFromDict (_ece );if _gcaac !=nil {return nil ,_gcaac ;};_fabe .PdfAnnotation =_bca ;_bca ._defe =_fabe ;return _bca ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_gggb ,_afffd :=_gee .newPdfAnnotationUnderlineFromDict (_ece );
if _afffd !=nil {return nil ,_afffd ;};_gggb .PdfAnnotation =_bca ;_bca ._defe =_gggb ;return _bca ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bcec ,_ffc :=_gee .newPdfAnnotationSquigglyFromDict (_ece );if _ffc !=nil {return nil ,_ffc ;
};_bcec .PdfAnnotation =_bca ;_bca ._defe =_bcec ;return _bca ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_eaga ,_afg :=_gee .newPdfAnnotationStrikeOut (_ece );if _afg !=nil {return nil ,_afg ;};_eaga .PdfAnnotation =_bca ;_bca ._defe =_eaga ;
return _bca ,nil ;case "\u0043\u0061\u0072e\u0074":_eba ,_ggad :=_gee .newPdfAnnotationCaretFromDict (_ece );if _ggad !=nil {return nil ,_ggad ;};_eba .PdfAnnotation =_bca ;_bca ._defe =_eba ;return _bca ,nil ;case "\u0053\u0074\u0061m\u0070":_ggdb ,_cce :=_gee .newPdfAnnotationStampFromDict (_ece );
if _cce !=nil {return nil ,_cce ;};_ggdb .PdfAnnotation =_bca ;_bca ._defe =_ggdb ;return _bca ,nil ;case "\u0049\u006e\u006b":_aae ,_cdf :=_gee .newPdfAnnotationInkFromDict (_ece );if _cdf !=nil {return nil ,_cdf ;};_aae .PdfAnnotation =_bca ;_bca ._defe =_aae ;
return _bca ,nil ;case "\u0050\u006f\u0070u\u0070":_bbc ,_ecgf :=_gee .newPdfAnnotationPopupFromDict (_ece );if _ecgf !=nil {return nil ,_ecgf ;};_bbc .PdfAnnotation =_bca ;_bca ._defe =_bbc ;return _bca ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_gde ,_ceb :=_gee .newPdfAnnotationFileAttachmentFromDict (_ece );
if _ceb !=nil {return nil ,_ceb ;};_gde .PdfAnnotation =_bca ;_bca ._defe =_gde ;return _bca ,nil ;case "\u0053\u006f\u0075n\u0064":_dbcb ,_deec :=_gee .newPdfAnnotationSoundFromDict (_ece );if _deec !=nil {return nil ,_deec ;};_dbcb .PdfAnnotation =_bca ;
_bca ._defe =_dbcb ;return _bca ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_dea ,_bfge :=_gee .newPdfAnnotationRichMediaFromDict (_ece );if _bfge !=nil {return nil ,_bfge ;};_dea .PdfAnnotation =_bca ;_bca ._defe =_dea ;return _bca ,nil ;
case "\u004d\u006f\u0076i\u0065":_bacf ,_fcf :=_gee .newPdfAnnotationMovieFromDict (_ece );if _fcf !=nil {return nil ,_fcf ;};_bacf .PdfAnnotation =_bca ;_bca ._defe =_bacf ;return _bca ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_cebb ,_gcf :=_gee .newPdfAnnotationScreenFromDict (_ece );
if _gcf !=nil {return nil ,_gcf ;};_cebb .PdfAnnotation =_bca ;_bca ._defe =_cebb ;return _bca ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_abbg ,_efeg :=_gee .newPdfAnnotationWidgetFromDict (_ece );if _efeg !=nil {return nil ,_efeg ;};_abbg .PdfAnnotation =_bca ;
_bca ._defe =_abbg ;return _bca ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_dabab ,_fgbf :=_gee .newPdfAnnotationPrinterMarkFromDict (_ece );if _fgbf !=nil {return nil ,_fgbf ;};_dabab .PdfAnnotation =_bca ;_bca ._defe =_dabab ;
return _bca ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_fced ,_ccgb :=_gee .newPdfAnnotationTrapNetFromDict (_ece );if _ccgb !=nil {return nil ,_ccgb ;};_fced .PdfAnnotation =_bca ;_bca ._defe =_fced ;return _bca ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_bfgb ,_dfcg :=_gee .newPdfAnnotationWatermarkFromDict (_ece );
if _dfcg !=nil {return nil ,_dfcg ;};_bfgb .PdfAnnotation =_bca ;_bca ._defe =_bfgb ;return _bca ,nil ;case "\u0033\u0044":_gbee ,_cfff :=_gee .newPdfAnnotation3DFromDict (_ece );if _cfff !=nil {return nil ,_cfff ;};_gbee .PdfAnnotation =_bca ;_bca ._defe =_gbee ;
return _bca ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_dgd ,_babb :=_gee .newPdfAnnotationProjectionFromDict (_ece );if _babb !=nil {return nil ,_babb ;};_dgd .PdfAnnotation =_bca ;_bca ._defe =_dgd ;return _bca ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_dage ,_bbe :=_gee .newPdfAnnotationRedactFromDict (_ece );
if _bbe !=nil {return nil ,_bbe ;};_dage .PdfAnnotation =_bca ;_bca ._defe =_dage ;return _bca ,nil ;};_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_cfdf );
return nil ,nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gb .PdfObject ;IC _gb .PdfObject ;BE _gb .PdfObject ;RD _gb .PdfObject ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_ddffa *LTV )EnableAll (extraCerts []*_g .Certificate )error {_cgagd :=_ddffa ._aaaed ._ddda .AcroForm ;for _ ,_dfcba :=range _cgagd .AllFields (){_egcfbd ,_ :=_dfcba .GetContext ().(*PdfFieldSignature );if _egcfbd ==nil {continue ;};_egacab :=_egcfbd .V ;
if _cfbb :=_ddffa .validateSig (_egacab );_cfbb !=nil {_dgf .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_cfbb );
};if _gcgfa :=_ddffa .Enable (_egacab ,extraCerts );_gcgfa !=nil {return _gcgfa ;};};return nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_dfbd *_gb .PdfIndirectObject ;};func _fbce (_cagfg *_gb .PdfObjectStream )(*PdfFunctionType0 ,error ){_bgcd :=&PdfFunctionType0 {};_bgcd ._gdece =_cagfg ;_fefc :=_cagfg .PdfObjectDictionary ;
_bbcgd ,_dcfea :=_gb .TraceToDirectObject (_fefc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gb .PdfObjectArray );if !_dcfea {_dgf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ga .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bbcgd .Len ()< 0||_bbcgd .Len ()%2!=0{_dgf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ga .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_bgcd .NumInputs =_bbcgd .Len ()/2;_faabb ,_ccbeb :=_bbcgd .ToFloat64Array ();if _ccbeb !=nil {return nil ,_ccbeb ;};_bgcd .Domain =_faabb ;_bbcgd ,_dcfea =_gb .TraceToDirectObject (_fefc .Get ("\u0052\u0061\u006eg\u0065")).(*_gb .PdfObjectArray );if !_dcfea {_dgf .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ga .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bbcgd .Len ()< 0||_bbcgd .Len ()%2!=0{return nil ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bgcd .NumOutputs =_bbcgd .Len ()/2;_abaag ,_ccbeb :=_bbcgd .ToFloat64Array ();if _ccbeb !=nil {return nil ,_ccbeb ;};_bgcd .Range =_abaag ;_bbcgd ,_dcfea =_gb .TraceToDirectObject (_fefc .Get ("\u0053\u0069\u007a\u0065")).(*_gb .PdfObjectArray );if !_dcfea {_dgf .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ga .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dabff ,_ccbeb :=_bbcgd .ToIntegerArray ();
if _ccbeb !=nil {return nil ,_ccbeb ;};if len (_dabff )!=_bgcd .NumInputs {_dgf .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgcd .Size =_dabff ;_egeg ,_dcfea :=_gb .TraceToDirectObject (_fefc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_gb .PdfObjectInteger );
if !_dcfea {_dgf .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ga .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_egeg !=1&&*_egeg !=2&&*_egeg !=4&&*_egeg !=8&&*_egeg !=12&&*_egeg !=16&&*_egeg !=24&&*_egeg !=32{_dgf .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_egeg );
return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgcd .BitsPerSample =int (*_egeg );_bgcd .Order =1;_efbbc ,_dcfea :=_gb .TraceToDirectObject (_fefc .Get ("\u004f\u0072\u0064e\u0072")).(*_gb .PdfObjectInteger );
if _dcfea {if *_efbbc !=1&&*_efbbc !=3{_dgf .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_efbbc );return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgcd .Order =int (*_efbbc );
};_bbcgd ,_dcfea =_gb .TraceToDirectObject (_fefc .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gb .PdfObjectArray );if _dcfea {_fddf ,_egadc :=_bbcgd .ToFloat64Array ();if _egadc !=nil {return nil ,_egadc ;};_bgcd .Encode =_fddf ;};_bbcgd ,_dcfea =_gb .TraceToDirectObject (_fefc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_gb .PdfObjectArray );
if _dcfea {_fegcf ,_agdda :=_bbcgd .ToFloat64Array ();if _agdda !=nil {return nil ,_agdda ;};_bgcd .Decode =_fegcf ;};_acdcd ,_ccbeb :=_gb .DecodeStream (_cagfg );if _ccbeb !=nil {return nil ,_ccbeb ;};_bgcd ._fbafg =_acdcd ;return _bgcd ,nil ;};func (_bgd *PdfReader )newPdfAnnotationLinkFromDict (_ccd *_gb .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_dbb :=PdfAnnotationLink {};
_dbb .A =_ccd .Get ("\u0041");_dbb .Dest =_ccd .Get ("\u0044\u0065\u0073\u0074");_dbb .H =_ccd .Get ("\u0048");_dbb .PA =_ccd .Get ("\u0050\u0041");_dbb .QuadPoints =_ccd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_dbb .BS =_ccd .Get ("\u0042\u0053");
return &_dbb ,nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_fege :=&PdfColorspaceCalGray {};_fege .BlackPoint =[]float64 {0.0,0.0,0.0};_fege .Gamma =1;return _fege ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_fdcbc *PdfWriter )SetDocInfo (info *PdfInfo ){if _fdcbc .hasObject (_fdcbc ._cgcab ){delete (_fdcbc ._dbbcgf ,_fdcbc ._cgcab );delete (_fdcbc ._bgcdbd ,_fdcbc ._cgcab );for _afgeg ,_bcbbg :=range _fdcbc ._eeafb {if _bcbbg ==_fdcbc ._cgcab {copy (_fdcbc ._eeafb [_afgeg :],_fdcbc ._eeafb [_afgeg +1:]);
_fdcbc ._eeafb [len (_fdcbc ._eeafb )-1]=nil ;_fdcbc ._eeafb =_fdcbc ._eeafb [:len (_fdcbc ._eeafb )-1];break ;};};};_fdeaed :=_gb .PdfIndirectObject {};_fdeaed .PdfObject =info .ToPdfObject ();_fdcbc ._cgcab =&_fdeaed ;_fdcbc .addObject (&_fdeaed );};
func (_bfgdb *PdfReader )newPdfAnnotationRedactFromDict (_ebec *_gb .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_egf :=PdfAnnotationRedact {};_faff ,_dabb :=_bfgdb .newPdfAnnotationMarkupFromDict (_ebec );if _dabb !=nil {return nil ,_dabb ;};_egf .PdfAnnotationMarkup =_faff ;
_egf .QuadPoints =_ebec .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_egf .IC =_ebec .Get ("\u0049\u0043");_egf .RO =_ebec .Get ("\u0052\u004f");_egf .OverlayText =_ebec .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_egf .Repeat =_ebec .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_egf .DA =_ebec .Get ("\u0044\u0041");_egf .Q =_ebec .Get ("\u0051");return &_egf ,nil ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_ebbbg :=PdfDate {};_gecbe :=_gaagc .FindAllStringSubmatch (dateStr ,1);if len (_gecbe )< 1{return _ebbbg ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );
};if len (_gecbe [0])!=10{return _ebbbg ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_ebbbg ._dcage ,_ =_fa .ParseInt (_gecbe [0][1],10,32);_ebbbg ._fgecg ,_ =_fa .ParseInt (_gecbe [0][2],10,32);_ebbbg ._fdafa ,_ =_fa .ParseInt (_gecbe [0][3],10,32);_ebbbg ._ccbea ,_ =_fa .ParseInt (_gecbe [0][4],10,32);_ebbbg ._aafc ,_ =_fa .ParseInt (_gecbe [0][5],10,32);
_ebbbg ._cfddc ,_ =_fa .ParseInt (_gecbe [0][6],10,32);if len (_gecbe [0][7])> 0{_ebbbg ._gbdde =_gecbe [0][7][0];}else {_ebbbg ._gbdde ='+';};if len (_gecbe [0][8])> 0{_ebbbg ._fefca ,_ =_fa .ParseInt (_gecbe [0][8],10,32);}else {_ebbbg ._fefca =0;};if len (_gecbe [0][9])> 0{_ebbbg ._fddca ,_ =_fa .ParseInt (_gecbe [0][9],10,32);
}else {_ebbbg ._fddca =0;};return _ebbbg ,nil ;};func (_ffaca *pdfFontSimple )addEncoding ()error {var (_efcbb string ;_cdadc map[_fed .CharCode ]_fed .GlyphName ;_aacge _fed .SimpleEncoder ;);if _ffaca .Encoder ()!=nil {_caaae ,_abbea :=_ffaca .Encoder ().(_fed .SimpleEncoder );
if _abbea &&_caaae !=nil {_efcbb =_caaae .BaseName ();};};if _ffaca .Encoding !=nil {_dabc ,_dfddd ,_ggecg :=_ffaca .getFontEncoding ();if _ggecg !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffaca ._ebadb ,_ffaca ._cedad ,_ffaca .Encoding ,_ffaca .Encoding ,_ggecg );
return _ggecg ;};if _dabc !=""{_efcbb =_dabc ;};_cdadc =_dfddd ;_aacge ,_ggecg =_fed .NewSimpleTextEncoder (_efcbb ,_cdadc );if _ggecg !=nil {return _ggecg ;};};if _aacge ==nil {_cacda :=_ffaca ._fcgcf ;if _cacda !=nil {switch _ffaca ._cedad {case "\u0054\u0079\u0070e\u0031":if _cacda .fontFile !=nil &&_cacda .fontFile ._baage !=nil {_dgf .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_aacge =_cacda .fontFile ._baage ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _cacda ._dbcbc !=nil {_dgf .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_edbdg ,_egfe :=_cacda ._dbcbc .MakeEncoder ();
if _egfe ==nil {_aacge =_edbdg ;};};};};};if _aacge !=nil {if _cdadc !=nil {_dgf .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cdadc ,_ffaca .baseFields ());
_aacge =_fed .ApplyDifferences (_aacge ,_cdadc );};_ffaca .SetEncoder (_aacge );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdbg *PdfAnnotationLink )ToPdfObject ()_gb .PdfObject {_gdbg .PdfAnnotation .ToPdfObject ();_bae :=_gdbg ._dccf ;_ecac :=_bae .PdfObject .(*_gb .PdfObjectDictionary );_ecac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u004c\u0069\u006e\u006b"));
if _gdbg ._ace !=nil &&_gdbg ._ace ._ce !=nil {_ecac .Set ("\u0041",_gdbg ._ace ._ce .ToPdfObject ());}else if _gdbg .A !=nil {_ecac .Set ("\u0041",_gdbg .A );};_ecac .SetIfNotNil ("\u0044\u0065\u0073\u0074",_gdbg .Dest );_ecac .SetIfNotNil ("\u0048",_gdbg .H );
_ecac .SetIfNotNil ("\u0050\u0041",_gdbg .PA );_ecac .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdbg .QuadPoints );_ecac .SetIfNotNil ("\u0042\u0053",_gdbg .BS );return _bae ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_geae *Image )AlphaMap (mapFunc AlphaMapFunc ){for _caeee ,_fgdga :=range _geae ._abecg {_geae ._abecg [_caeee ]=mapFunc (_fgdga );};};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_gdcc *PdfField )ToPdfObject ()_gb .PdfObject {_bcgf :=_gdcc ._faea ;_dcba :=_bcgf .PdfObject .(*_gb .PdfObjectDictionary );_dbafd :=_gb .MakeArray ();for _ ,_cafb :=range _gdcc .Kids {_dbafd .Append (_cafb .ToPdfObject ());};for _ ,_fdedg :=range _gdcc .Annotations {if _fdedg ._dccf !=_gdcc ._faea {_dbafd .Append (_fdedg .GetContext ().ToPdfObject ());
};};if _gdcc .Parent !=nil {_dcba .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gdcc .Parent .GetContainingPdfObject ());};if _dbafd .Len ()> 0{_dcba .Set ("\u004b\u0069\u0064\u0073",_dbafd );};_dcba .SetIfNotNil ("\u0046\u0054",_gdcc .FT );_dcba .SetIfNotNil ("\u0054",_gdcc .T );
_dcba .SetIfNotNil ("\u0054\u0055",_gdcc .TU );_dcba .SetIfNotNil ("\u0054\u004d",_gdcc .TM );_dcba .SetIfNotNil ("\u0046\u0066",_gdcc .Ff );_dcba .SetIfNotNil ("\u0056",_gdcc .V );_dcba .SetIfNotNil ("\u0044\u0056",_gdcc .DV );_dcba .SetIfNotNil ("\u0041\u0041",_gdcc .AA );
return _bcgf ;};

// ToPdfObject implements interface PdfModel.
func (_afaf *PdfAnnotationProjection )ToPdfObject ()_gb .PdfObject {_afaf .PdfAnnotation .ToPdfObject ();_cbbg :=_afaf ._dccf ;_fedd :=_cbbg .PdfObject .(*_gb .PdfObjectDictionary );_afaf .PdfAnnotationMarkup .appendToPdfDictionary (_fedd );return _cbbg ;
};func (_afeec *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// SetContext set the sub annotation (context).
func (_geaed *PdfShading )SetContext (ctx PdfModel ){_geaed ._fbcg =ctx };

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_fefd *PdfFieldButton )SetType (btype ButtonType ){_abca :=uint32 (0);if _fefd .Ff !=nil {_abca =uint32 (*_fefd .Ff );};switch btype {case ButtonTypePush :_abca |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_abca |=FieldFlagRadio .Mask ();
};_fefd .Ff =_gb .MakeInteger (int64 (_abca ));};func (_dadf *PdfReader )traverseObjectData (_egbbg _gb .PdfObject )error {return _gb .ResolveReferencesDeep (_egbbg ,_dadf ._addbfc );};func (_bfgcd *PdfWriter )addObjects (_gfab _gb .PdfObject )error {_dgf .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _fedef ,_dgdec :=_gfab .(*_gb .PdfIndirectObject );_dgdec {_dgf .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_dgf .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_gfab ,_fedef );_dgf .Log .Trace ("\u002d\u0020\u0025\u0073",_fedef .PdfObject );
if _bfgcd .addObject (_fedef ){_ebfb :=_bfgcd .addObjects (_fedef .PdfObject );if _ebfb !=nil {return _ebfb ;};};return nil ;};if _cfcc ,_cfdda :=_gfab .(*_gb .PdfObjectStream );_cfdda {_dgf .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_dgf .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_gfab ,_gfab );
if _bfgcd .addObject (_cfcc ){_dceecf :=_bfgcd .addObjects (_cfcc .PdfObjectDictionary );if _dceecf !=nil {return _dceecf ;};};return nil ;};if _geggfb ,_fagbd :=_gfab .(*_gb .PdfObjectDictionary );_fagbd {_dgf .Log .Trace ("\u0044\u0069\u0063\u0074");
_dgf .Log .Trace ("\u002d\u0020\u0025\u0073",_gfab );for _ ,_eabe :=range _geggfb .Keys (){_decf :=_geggfb .Get (_eabe );if _aaggd ,_dbge :=_decf .(*_gb .PdfObjectReference );_dbge {_decf =_aaggd .Resolve ();_geggfb .Set (_eabe ,_decf );};if _eabe !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _cdded :=_bfgcd .addObjects (_decf );
_cdded !=nil {return _cdded ;};}else {if _ ,_gefdd :=_decf .(*_gb .PdfObjectNull );_gefdd {continue ;};if _adgeea :=_bfgcd .hasObject (_decf );!_adgeea {_dgf .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_decf ,_decf ,_decf );
_bfgcd ._cfgcc [_decf ]=append (_bfgcd ._cfgcc [_decf ],_geggfb );};};};return nil ;};if _ggbcd ,_geee :=_gfab .(*_gb .PdfObjectArray );_geee {_dgf .Log .Trace ("\u0041\u0072\u0072a\u0079");_dgf .Log .Trace ("\u002d\u0020\u0025\u0073",_gfab );if _ggbcd ==nil {return _ga .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _fagbb ,_edaff :=range _ggbcd .Elements (){if _ccbbf ,_egecgd :=_edaff .(*_gb .PdfObjectReference );_egecgd {_edaff =_ccbbf .Resolve ();_ggbcd .Set (_fagbb ,_edaff );};if _bbacfb :=_bfgcd .addObjects (_edaff );_bbacfb !=nil {return _bbacfb ;};};return nil ;
};if _ ,_dbfgfg :=_gfab .(*_gb .PdfObjectReference );_dbfgfg {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_gfab );
return _ga .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bab *PdfActionNamed )ToPdfObject ()_gb .PdfObject {_bab .PdfAction .ToPdfObject ();_abb :=_bab ._cd ;_faad :=_abb .PdfObject .(*_gb .PdfObjectDictionary );_faad .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeNamed )));_faad .SetIfNotNil ("\u004e",_bab .N );
return _abb ;};func (_ggecgd *PdfReader )resolveReference (_gaae *_gb .PdfObjectReference )(_gb .PdfObject ,bool ,error ){_aebea ,_ggfae :=_ggecgd ._gedb .ObjCache [int (_gaae .ObjectNumber )];if !_ggfae {_dgf .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_gaae );
_bcaf ,_ffdad :=_ggecgd ._gedb .LookupByReference (*_gaae );if _ffdad !=nil {return nil ,false ,_ffdad ;};_ggecgd ._gedb .ObjCache [int (_gaae .ObjectNumber )]=_bcaf ;return _bcaf ,false ,nil ;};return _aebea ,true ,nil ;};func (_daba *PdfReader )newPdfActionThreadFromDict (_cff *_gb .PdfObjectDictionary )(*PdfActionThread ,error ){_gbc ,_ae :=_ebg (_cff .Get ("\u0046"));
if _ae !=nil {return nil ,_ae ;};return &PdfActionThread {D :_cff .Get ("\u0044"),B :_cff .Get ("\u0042"),F :_gbc },nil ;};func (_deeb *PdfReader )newPdfAnnotationCircleFromDict (_bddd *_gb .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_dbecb :=PdfAnnotationCircle {};
_gec ,_cgd :=_deeb .newPdfAnnotationMarkupFromDict (_bddd );if _cgd !=nil {return nil ,_cgd ;};_dbecb .PdfAnnotationMarkup =_gec ;_dbecb .BS =_bddd .Get ("\u0042\u0053");_dbecb .IC =_bddd .Get ("\u0049\u0043");_dbecb .BE =_bddd .Get ("\u0042\u0045");_dbecb .RD =_bddd .Get ("\u0052\u0044");
return &_dbecb ,nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gb .PdfObject ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_cbdae *_gb .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_gb .PdfObjectName ;Filter *_gb .PdfObjectName ;SubFilter *_gb .PdfObjectName ;Contents *_gb .PdfObjectString ;Cert _gb .PdfObject ;ByteRange *_gb .PdfObjectArray ;Reference *_gb .PdfObjectArray ;Changes *_gb .PdfObjectArray ;Name *_gb .PdfObjectString ;
M *_gb .PdfObjectString ;Location *_gb .PdfObjectString ;Reason *_gb .PdfObjectString ;ContactInfo *_gb .PdfObjectString ;R *_gb .PdfObjectInteger ;V *_gb .PdfObjectInteger ;PropBuild *_gb .PdfObjectDictionary ;PropAuthTime *_gb .PdfObjectInteger ;PropAuthType *_gb .PdfObjectName ;
};

// SetAnnotations sets the annotations list.
func (_bfbec *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_bfbec ._cafdf =annotations };

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_eccb *_gb .PdfIndirectObject ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_ggge :=NewPdfAnnotation ();_cgf :=&PdfAnnotationUnderline {};_cgf .PdfAnnotation =_ggge ;_cgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggge .SetContext (_cgf );return _cgf ;};func (_gcccg *PdfPattern )getDict ()*_gb .PdfObjectDictionary {if _adef ,_badg :=_gcccg ._agab .(*_gb .PdfIndirectObject );
_badg {_cbbfb ,_fdcebc :=_adef .PdfObject .(*_gb .PdfObjectDictionary );if !_fdcebc {return nil ;};return _cbbfb ;}else if _adeg ,_ecgaa :=_gcccg ._agab .(*_gb .PdfObjectStream );_ecgaa {return _adeg .PdfObjectDictionary ;}else {_dgf .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_gcccg ._agab );
return nil ;};};func (_ebdc *fontFile )loadFromSegments (_abbae ,_deecc []byte )error {_dgf .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_abbae ),len (_deecc ));
_abbb :=_ebdc .parseASCIIPart (_abbae );if _abbb !=nil {return _abbb ;};_dgf .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ebdc );if len (_deecc )==0{return nil ;};_dgf .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ebdc );
return nil ;};func _adeae (_fgaef _gb .PdfObject )(*PdfFontDescriptor ,error ){_ddfb :=&PdfFontDescriptor {};_fgaef =_gb .ResolveReference (_fgaef );if _aecag ,_gfbdc :=_fgaef .(*_gb .PdfIndirectObject );_gfbdc {_ddfb ._cbde =_aecag ;_fgaef =_aecag .PdfObject ;
};_gdbac ,_bccca :=_gb .GetDict (_fgaef );if !_bccca {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fgaef );
return nil ,_gb .ErrTypeError ;};if _egfa :=_gdbac .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_egfa !=nil {_ddfb .FontName =_egfa ;}else {_dgf .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_adfga ,_ :=_gb .GetName (_ddfb .FontName );if _deebf :=_gdbac .Get ("\u0054\u0079\u0070\u0065");_deebf !=nil {_ffga ,_dfgcc :=_deebf .(*_gb .PdfObjectName );if !_dfgcc ||string (*_ffga )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_dgf .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_deebf ,_adfga ,_ddfb .FontName );
};}else {_dgf .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_adfga ,_ddfb .FontName );
};_ddfb .FontFamily =_gdbac .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_ddfb .FontStretch =_gdbac .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_ddfb .FontWeight =_gdbac .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_ddfb .Flags =_gdbac .Get ("\u0046\u006c\u0061g\u0073");_ddfb .FontBBox =_gdbac .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_ddfb .ItalicAngle =_gdbac .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_ddfb .Ascent =_gdbac .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_ddfb .Descent =_gdbac .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_ddfb .Leading =_gdbac .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_ddfb .CapHeight =_gdbac .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_ddfb .XHeight =_gdbac .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_ddfb .StemV =_gdbac .Get ("\u0053\u0074\u0065m\u0056");_ddfb .StemH =_gdbac .Get ("\u0053\u0074\u0065m\u0048");_ddfb .AvgWidth =_gdbac .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_ddfb .MaxWidth =_gdbac .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_ddfb .MissingWidth =_gdbac .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_ddfb .FontFile =_gdbac .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_ddfb .FontFile2 =_gdbac .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_ddfb .FontFile3 =_gdbac .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_ddfb .CharSet =_gdbac .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_ddfb .Style =_gdbac .Get ("\u0053\u0074\u0079l\u0065");_ddfb .Lang =_gdbac .Get ("\u004c\u0061\u006e\u0067");
_ddfb .FD =_gdbac .Get ("\u0046\u0044");_ddfb .CIDSet =_gdbac .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _ddfb .Flags !=nil {if _ffgb ,_gebc :=_gb .GetIntVal (_ddfb .Flags );_gebc {_ddfb ._gbgge =_ffgb ;};};if _ddfb .MissingWidth !=nil {if _bafa ,_defda :=_gb .GetNumberAsFloat (_ddfb .MissingWidth );
_defda ==nil {_ddfb ._gabd =_bafa ;};};if _ddfb .FontFile !=nil {_bdbfb ,_gaba :=_fgab (_ddfb .FontFile );if _gaba !=nil {return _ddfb ,_gaba ;};_dgf .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_bdbfb );_ddfb .fontFile =_bdbfb ;
};if _ddfb .FontFile2 !=nil {_cbbe ,_dafga :=_ad .NewFontFile2FromPdfObject (_ddfb .FontFile2 );if _dafga !=nil {return _ddfb ,_dafga ;};_dgf .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_cbbe .String ());_ddfb ._dbcbc =&_cbbe ;
};return _ddfb ,nil ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_cecf *PdfPage )GetAllContentStreams ()(string ,error ){_fdeea ,_agdbf :=_cecf .GetContentStreams ();if _agdbf !=nil {return "",_agdbf ;};return _fd .Join (_fdeea ,"\u0020"),nil ;};func (_ccbdg *PdfReader )newPdfOutlineItemFromIndirectObject (_faefg *_gb .PdfIndirectObject )(*PdfOutlineItem ,error ){_faabc ,_dfae :=_faefg .PdfObject .(*_gb .PdfObjectDictionary );
if !_dfae {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dffb :=NewPdfOutlineItem ();_gcdbc :=_faabc .Get ("\u0054\u0069\u0074l\u0065");
if _gcdbc ==nil {return nil ,_b .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_agdbg ,_afebd :=_gb .GetString (_gcdbc );if !_afebd {return nil ,_b .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_gcdbc );};_dffb .Title =_agdbg ;if _dfcbac :=_faabc .Get ("\u0043\u006f\u0075n\u0074");
_dfcbac !=nil {_gcgg ,_edfd :=_dfcbac .(*_gb .PdfObjectInteger );if !_edfd {return nil ,_b .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_dfcbac );};_dgfge :=int64 (*_gcgg );
_dffb .Count =&_dgfge ;};if _cfece :=_faabc .Get ("\u0044\u0065\u0073\u0074");_cfece !=nil {_dffb .Dest =_gb .ResolveReference (_cfece );if !_ccbdg ._ggea {_cadfg :=_ccbdg .traverseObjectData (_dffb .Dest );if _cadfg !=nil {return nil ,_cadfg ;};};};if _afefg :=_faabc .Get ("\u0041");
_afefg !=nil {_dffb .A =_gb .ResolveReference (_afefg );if !_ccbdg ._ggea {_daefg :=_ccbdg .traverseObjectData (_dffb .A );if _daefg !=nil {return nil ,_daefg ;};};};if _ffff :=_faabc .Get ("\u0053\u0045");_ffff !=nil {_dffb .SE =nil ;};if _efggc :=_faabc .Get ("\u0043");
_efggc !=nil {_dffb .C =_gb .ResolveReference (_efggc );};if _dfdg :=_faabc .Get ("\u0046");_dfdg !=nil {_dffb .F =_gb .ResolveReference (_dfdg );};return _dffb ,nil ;};func _cfce (_afbed _gb .PdfObject )(map[_fed .CharCode ]float64 ,error ){if _afbed ==nil {return nil ,nil ;
};_bcac ,_gggg :=_gb .GetArray (_afbed );if !_gggg {return nil ,nil ;};_bafde :=map[_fed .CharCode ]float64 {};_agged :=_bcac .Len ();for _ffgg :=0;_ffgg < _agged -1;_ffgg ++{_adffb :=_gb .TraceToDirectObject (_bcac .Get (_ffgg ));_abafg ,_feda :=_gb .GetIntVal (_adffb );
if !_feda {return nil ,_b .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_ffgg ,_adffb );};_ffgg ++;if _ffgg > _agged -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bcac );
};_adbb :=_gb .TraceToDirectObject (_bcac .Get (_ffgg ));switch _adbb .(type ){case *_gb .PdfObjectArray :_gaaf ,_ :=_gb .GetArray (_adbb );if _cgaa ,_ddec :=_gaaf .ToFloat64Array ();_ddec ==nil {for _aeec :=0;_aeec < len (_cgaa );_aeec ++{_bafde [_fed .CharCode (_abafg +_aeec )]=_cgaa [_aeec ];
};}else {return nil ,_b .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ffgg ,_adbb );};case *_gb .PdfObjectInteger :_faegf ,_ddgdf :=_gb .GetIntVal (_adbb );
if !_ddgdf {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ffgg ,_adbb );};_ffgg ++;if _ffgg > _agged -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bcac );
};_becg :=_bcac .Get (_ffgg );_deecf ,_abadb :=_gb .GetNumberAsFloat (_becg );if _abadb !=nil {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ffgg ,_becg );
};for _bffcg :=_abafg ;_bffcg <=_faegf ;_bffcg ++{_bafde [_fed .CharCode (_bffcg )]=_deecf ;};default:return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ffgg ,_adbb );
};};return _bafde ,nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_efff *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _efff .Range };

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _gb .PdfObject ;Name _gb .PdfObject ;State _gb .PdfObject ;StateModel _gb .PdfObject ;};func _aefed ()string {return _dgf .Version };

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_fgb :=NewPdfAnnotation ();_dfde :=&PdfAnnotationMovie {};_dfde .PdfAnnotation =_fgb ;_fgb .SetContext (_dfde );return _dfde ;};func _deacea (_cbgce *_gb .PdfObjectArray )(float64 ,error ){_aeecg ,_gfccc :=_cbgce .ToFloat64Array ();
if _gfccc !=nil {_dgf .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbgce ,_gfccc );};switch len (_aeecg ){case 1:return _aeecg [0],nil ;
case 3:_dbbga :=PdfColorspaceDeviceRGB {};_dcegd ,_gbdcd :=_dbbga .ColorFromFloats (_aeecg );if _gbdcd !=nil {return 0.0,_gbdcd ;};return _dcegd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_cbeaa :=PdfColorspaceDeviceCMYK {};_fdfcg ,_babbd :=_cbeaa .ColorFromFloats (_aeecg );
if _babbd !=nil {return 0.0,_babbd ;};_deded ,_babbd :=_cbeaa .ColorToRGB (_fdfcg .(*PdfColorDeviceCMYK ));if _babbd !=nil {return 0.0,_babbd ;};return _deded .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_gfccc =_ga .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_dgf .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbgce ,_gfccc );return 0.0,_gfccc ;};

// ToPdfObject implements interface PdfModel.
func (_baaa *PdfAnnotationText )ToPdfObject ()_gb .PdfObject {_baaa .PdfAnnotation .ToPdfObject ();_bdea :=_baaa ._dccf ;_efcb :=_bdea .PdfObject .(*_gb .PdfObjectDictionary );if _baaa .PdfAnnotationMarkup !=nil {_baaa .PdfAnnotationMarkup .appendToPdfDictionary (_efcb );
};_efcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0054\u0065\u0078\u0074"));_efcb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_baaa .Open );_efcb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_baaa .Name );_efcb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_baaa .State );
_efcb .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_baaa .StateModel );return _bdea ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_fcee :=NewPdfAnnotation ();_cfbg :=&PdfAnnotationPopup {};_cfbg .PdfAnnotation =_fcee ;_fcee .SetContext (_cfbg );return _cfbg ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _gb .PdfObject ;T _gb .PdfObject ;Operation _gb .PdfObject ;};func (_dggb *PdfReader )newPdfActionTransFromDict (_bfc *_gb .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_bfc .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};func _eefea ()*modelManager {_bfde :=modelManager {};_bfde ._daeg =map[PdfModel ]_gb .PdfObject {};_bfde ._dbfgg =map[_gb .PdfObject ]PdfModel {};return &_bfde ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_cgdg *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_dgf .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_dgf .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_dgf .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_dgf .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_dcca ,_gfga :=_fe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abecg ,img ._ggcdd );if _gfga !=nil {return Image {},_gfga ;};_eceg ,_gfga :=_fe .NRGBAConverter .Convert (_dcca );if _gfga !=nil {return Image {},_gfga ;
};return _aecb (_eceg .Base ()),nil ;};

// ToPdfObject implements interface PdfModel.
func (_dafe *PdfAnnotationUnderline )ToPdfObject ()_gb .PdfObject {_dafe .PdfAnnotation .ToPdfObject ();_cdde :=_dafe ._dccf ;_ced :=_cdde .PdfObject .(*_gb .PdfObjectDictionary );_dafe .PdfAnnotationMarkup .appendToPdfDictionary (_ced );_ced .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_ced .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dafe .QuadPoints );return _cdde ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_dbdegb :_gb .MakeIndirectObject (_gb .MakeDict ()),VRI :map[string ]*VRI {}};};

// ToPdfObject implements interface PdfModel.
func (_efce *PdfAnnotationStrikeOut )ToPdfObject ()_gb .PdfObject {_efce .PdfAnnotation .ToPdfObject ();_daca :=_efce ._dccf ;_adcd :=_daca .PdfObject .(*_gb .PdfObjectDictionary );_efce .PdfAnnotationMarkup .appendToPdfDictionary (_adcd );_adcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_adcd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_efce .QuadPoints );return _daca ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_gb .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _gb .PdfObject ;A _gb .PdfObject ;SE _gb .PdfObject ;C _gb .PdfObject ;F _gb .PdfObject ;
_caeeee *_gb .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bdbddc *PdfShadingType2 )ToPdfObject ()_gb .PdfObject {_bdbddc .PdfShading .ToPdfObject ();_efdc ,_cfda :=_bdbddc .getShadingDict ();if _cfda !=nil {_dgf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _efdc ==nil {_dgf .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _bdbddc .Coords !=nil {_efdc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_bdbddc .Coords );
};if _bdbddc .Domain !=nil {_efdc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bdbddc .Domain );};if _bdbddc .Function !=nil {if len (_bdbddc .Function )==1{_efdc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdbddc .Function [0].ToPdfObject ());
}else {_bcfff :=_gb .MakeArray ();for _ ,_eaffg :=range _bdbddc .Function {_bcfff .Append (_eaffg .ToPdfObject ());};_efdc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcfff );};};if _bdbddc .Extend !=nil {_efdc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_bdbddc .Extend );
};return _bdbddc ._gccef ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_cfac *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_dgdg :=range pages {_dgdg =_dgdg .Duplicate ();_cfac ._bcabf =append (_cfac ._bcabf ,_dgdg );};};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_ggf :=NewPdfAnnotation ();_acb :=&PdfAnnotationSquare {};_acb .PdfAnnotation =_ggf ;_acb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggf .SetContext (_acb );return _acb ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_cbg :=NewPdfAnnotation ();_fef :=&PdfAnnotationPolygon {};_fef .PdfAnnotation =_cbg ;_fef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbg .SetContext (_fef );return _fef ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _gb .PdfObject ;Mac _gb .PdfObject ;Unix _gb .PdfObject ;NewWindow _gb .PdfObject ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_fbafe *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _fbafe ._dffe ==nil {_fbafe ._dffe =_gc .NewPSExecutor (_fbafe .Program );};var _gddd []_gc .PSObject ;for _ ,_dbcgc :=range xVec {_gddd =append (_gddd ,_gc .MakeReal (_dbcgc ));
};_dcdef ,_gaege :=_fbafe ._dffe .Execute (_gddd );if _gaege !=nil {return nil ,_gaege ;};_eebe ,_gaege :=_gc .PSObjectArrayToFloat64Array (_dcdef );if _gaege !=nil {return nil ,_gaege ;};return _eebe ,nil ;};func (_fbdbb *PdfWriter )writeBytes (_dgeccg []byte ){if _fbdbb ._ffgef !=nil {return ;
};_eggba ,_badee :=_fbdbb ._bcebe .Write (_dgeccg );_fbdbb ._bdabg +=int64 (_eggba );_fbdbb ._ffgef =_badee ;};func (_fgeag *PdfReader )newPdfSignatureFromIndirect (_adccb *_gb .PdfIndirectObject )(*PdfSignature ,error ){_cdgga ,_dgeb :=_adccb .PdfObject .(*_gb .PdfObjectDictionary );
if !_dgeb {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _bbfea ,_gagbf :=_fgeag ._dfffec .GetModelFromPrimitive (_adccb ).(*PdfSignature );_gagbf {return _bbfea ,nil ;};_babfg :=&PdfSignature {};_babfg ._cbdae =_adccb ;_babfg .Type ,_ =_gb .GetName (_cdgga .Get ("\u0054\u0079\u0070\u0065"));
_babfg .Filter ,_dgeb =_gb .GetName (_cdgga .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_dgeb {_dgf .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_babfg .SubFilter ,_ =_gb .GetName (_cdgga .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_babfg .Contents ,_dgeb =_gb .GetString (_cdgga .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_dgeb {_dgf .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_babfg .Cert =_cdgga .Get ("\u0043\u0065\u0072\u0074");_babfg .ByteRange ,_ =_gb .GetArray (_cdgga .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_babfg .Reference ,_ =_gb .GetArray (_cdgga .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_babfg .Changes ,_ =_gb .GetArray (_cdgga .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_babfg .Name ,_ =_gb .GetString (_cdgga .Get ("\u004e\u0061\u006d\u0065"));_babfg .M ,_ =_gb .GetString (_cdgga .Get ("\u004d"));_babfg .Location ,_ =_gb .GetString (_cdgga .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_babfg .Reason ,_ =_gb .GetString (_cdgga .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_babfg .ContactInfo ,_ =_gb .GetString (_cdgga .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_babfg .R ,_ =_gb .GetInt (_cdgga .Get ("\u0052"));
_babfg .V ,_ =_gb .GetInt (_cdgga .Get ("\u0056"));_babfg .PropBuild ,_ =_gb .GetDict (_cdgga .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_babfg .PropAuthTime ,_ =_gb .GetInt (_cdgga .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_babfg .PropAuthType ,_ =_gb .GetName (_cdgga .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _babfg ,nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_gdaea *PdfPattern )ToPdfObject ()_gb .PdfObject {_gdca :=_gdaea .getDict ();_gdca .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gdca .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_gb .MakeInteger (_gdaea .PatternType ));
return _gdaea ._agab ;};

// ToPdfObject implements interface PdfModel.
func (_dggdd *PdfAnnotationInk )ToPdfObject ()_gb .PdfObject {_dggdd .PdfAnnotation .ToPdfObject ();_adcc :=_dggdd ._dccf ;_gfcd :=_adcc .PdfObject .(*_gb .PdfObjectDictionary );_dggdd .PdfAnnotationMarkup .appendToPdfDictionary (_gfcd );_gfcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0049\u006e\u006b"));
_gfcd .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_dggdd .InkList );_gfcd .SetIfNotNil ("\u0042\u0053",_dggdd .BS );return _adcc ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_afeg *PdfReader )GetObjectNums ()[]int {return _afeg ._gedb .GetObjectNums ()};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_faaea *PdfPageResources )GenerateXObjectName ()_gb .PdfObjectName {_cgcc :=1;for {_aegb :=_gb .MakeName (_b .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_cgcc ));if !_faaea .HasXObjectByName (*_aegb ){return *_aegb ;};_cgcc ++;};};func (_ggadd *DSS )addCRLs (_dfcc [][]byte )([]*_gb .PdfObjectStream ,error ){return _ggadd .add (&_ggadd .CRLs ,_ggadd ._bcbd ,_dfcc );
};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_bbgg *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_bbgg .ToPdfOutline ().PdfOutlineTreeNode ;};func (_cbed *PdfReader )newPdfAnnotationScreenFromDict (_ccbb *_gb .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_fbd :=PdfAnnotationScreen {};
_fbd .T =_ccbb .Get ("\u0054");_fbd .MK =_ccbb .Get ("\u004d\u004b");_fbd .A =_ccbb .Get ("\u0041");_fbd .AA =_ccbb .Get ("\u0041\u0041");return &_fbd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cae *PdfActionImportData )ToPdfObject ()_gb .PdfObject {_cae .PdfAction .ToPdfObject ();_agd :=_cae ._cd ;_aff :=_agd .PdfObject .(*_gb .PdfObjectDictionary );_aff .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeImportData )));if _cae .F !=nil {_aff .Set ("\u0046",_cae .F .ToPdfObject ());
};return _agd ;};

// ToPdfObject returns the PDF representation of the function.
func (_begf *PdfFunctionType4 )ToPdfObject ()_gb .PdfObject {_bcgd :=_begf ._bdcd ;if _bcgd ==nil {_begf ._bdcd =&_gb .PdfObjectStream {};_bcgd =_begf ._bdcd ;};_dbdfd :=_gb .MakeDict ();_dbdfd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gb .MakeInteger (4));
_dgda :=&_gb .PdfObjectArray {};for _ ,_fbcdd :=range _begf .Domain {_dgda .Append (_gb .MakeFloat (_fbcdd ));};_dbdfd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dgda );_gbeg :=&_gb .PdfObjectArray {};for _ ,_edggf :=range _begf .Range {_gbeg .Append (_gb .MakeFloat (_edggf ));
};_dbdfd .Set ("\u0052\u0061\u006eg\u0065",_gbeg );if _begf ._ggggf ==nil &&_begf .Program !=nil {_begf ._ggggf =[]byte (_begf .Program .String ());};_dbdfd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_begf ._ggggf ))));_bcgd .Stream =_begf ._ggggf ;
_bcgd .PdfObjectDictionary =_dbdfd ;return _bcgd ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _gb .PdfObject ;Open _gb .PdfObject ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _gb .PdfObject ;AN _gb .PdfObject ;OP _gb .PdfObject ;JS _gb .PdfObject ;};func _abdad (_fbafc *PdfField )[]*PdfField {_daccc :=[]*PdfField {_fbafc };for _ ,_ggdbc :=range _fbafc .Kids {_daccc =append (_daccc ,_abdad (_ggdbc )...);
};return _daccc ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_bagea *PdfPageResources )HasFontByName (keyName _gb .PdfObjectName )bool {_ ,_ceebg :=_bagea .GetFontByName (keyName );return _ceebg ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_eeece *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_aedb ,_cbfg :=color .(*PdfColorCalGray );if !_cbfg {_dgf .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_aedb .Val ();X :=_eeece .WhitePoint [0]*_fg .Pow (ANorm ,_eeece .Gamma );Y :=_eeece .WhitePoint [1]*_fg .Pow (ANorm ,_eeece .Gamma );
Z :=_eeece .WhitePoint [2]*_fg .Pow (ANorm ,_eeece .Gamma );_dffca :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fceb :=-0.969256*X +1.875992*Y +0.041556*Z ;_cbbcd :=0.055648*X +-0.204043*Y +1.057311*Z ;_dffca =_fg .Min (_fg .Max (_dffca ,0),1.0);_fceb =_fg .Min (_fg .Max (_fceb ,0),1.0);
_cbbcd =_fg .Min (_fg .Max (_cbbcd ,0),1.0);return NewPdfColorDeviceRGB (_dffca ,_fceb ,_cbbcd ),nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_fegcc *PdfPattern )IsShading ()bool {return _fegcc .PatternType ==2};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;PageCallback PageCallback ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_ggbcg *PdfPageResources )GetContainingPdfObject ()_gb .PdfObject {return _ggbcg ._aecba };

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gb .PdfObject ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_dbfa :=NewPdfAnnotation ();_bebe :=&PdfAnnotationRichMedia {};_bebe .PdfAnnotation =_dbfa ;_dbfa .SetContext (_bebe );return _bebe ;};func _cead (_bbcab _gb .PdfObject ){_dgf .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_bbcab ,_bbcab .String ());
if _adabg ,_egeeg :=_bbcab .(*_gb .PdfObjectStream );_egeeg {_aaff ,_cffdg :=_gb .DecodeStream (_adabg );if _cffdg !=nil {_dgf .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_cffdg );return ;};_dgf .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_aaff );
}else if _bccac ,_fagbe :=_bbcab .(*_gb .PdfIndirectObject );_fagbe {_dgf .Log .Debug ("\u0025\u0054\u0020%\u0076",_bccac .PdfObject ,_bccac .PdfObject );_dgf .Log .Debug ("\u0025\u0073",_bccac .PdfObject .String ());};};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_eacd *_gb .PdfIndirectObject ;};var _gaagc =_be .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");
func _edcbc (_feaac *_gb .PdfObjectDictionary )(*PdfShadingType1 ,error ){_cefb :=PdfShadingType1 {};if _adafd :=_feaac .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_adafd !=nil {_adafd =_gb .TraceToDirectObject (_adafd );_acge ,_daeed :=_adafd .(*_gb .PdfObjectArray );
if !_daeed {_dgf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adafd );return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cefb .Domain =_acge ;};if _feabc :=_feaac .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_feabc !=nil {_feabc =_gb .TraceToDirectObject (_feabc );_ccaa ,_cggcb :=_feabc .(*_gb .PdfObjectArray );if !_cggcb {_dgf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_feabc );
return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cefb .Matrix =_ccaa ;};_dcce :=_feaac .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dcce ==nil {_dgf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cefb .Function =[]PdfFunction {};if _eaad ,_eagcd :=_dcce .(*_gb .PdfObjectArray );_eagcd {for _ ,_adgbb :=range _eaad .Elements (){_ebfdf ,_cdcea :=_ceagc (_adgbb );if _cdcea !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdcea );
return nil ,_cdcea ;};_cefb .Function =append (_cefb .Function ,_ebfdf );};}else {_cdff ,_becc :=_ceagc (_dcce );if _becc !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_becc );
return nil ,_becc ;};_cefb .Function =append (_cefb .Function ,_cdff );};return &_cefb ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_bbad :=&PdfColorspaceSpecialSeparation {};return _bbad ;};func (_gfbd *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_gb .PdfObjectArray ;Matrix *_gb .PdfObjectArray ;Function []PdfFunction ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_ggaaa *PdfField )FullName ()(string ,error ){var _fbgd _bed .Buffer ;_agff :=[]string {};if _ggaaa .T !=nil {_agff =append (_agff ,_ggaaa .T .Decoded ());};_dafef :=map[*PdfField ]bool {};_dafef [_ggaaa ]=true ;_egbfe :=_ggaaa .Parent ;for _egbfe !=nil {if _ ,_cdgc :=_dafef [_egbfe ];
_cdgc {return _fbgd .String (),_ga .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _egbfe .T ==nil {return _fbgd .String (),_ga .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_agff =append (_agff ,_egbfe .T .Decoded ());_dafef [_egbfe ]=true ;_egbfe =_egbfe .Parent ;};for _ebgfe :=len (_agff )-1;_ebgfe >=0;_ebgfe --{_fbgd .WriteString (_agff [_ebgfe ]);if _ebgfe > 0{_fbgd .WriteString ("\u002e");};};return _fbgd .String (),nil ;
};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_bec :=NewPdfAction ();_aada :=&PdfActionGoToE {};_aada .PdfAction =_bec ;_bec .SetContext (_aada );return _aada ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_egfd *PdfColorCalGray )GetNumComponents ()int {return 1};var _ _gb .PdfObject =&pdfSignDictionary {};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ddfe *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ddfe .UnderlyingCS ==nil {return nil ,_ga .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _ddfe .UnderlyingCS .ColorFromFloats (vals );};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_dccbb DefaultImageHandler )NewImageFromGoImage (goimg _dg .Image )(*Image ,error ){_dfbdc ,_ebefdf :=_fe .FromGoImage (goimg );if _ebefdf !=nil {return nil ,_ebefdf ;};_ffdg :=_aecb (_dfbdc .Base ());return &_ffdg ,nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_cgddc *PdfReader )CheckAccessRights (password []byte )(bool ,_gg .Permissions ,error ){return _cgddc ._gedb .CheckAccessRights (password );};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_age *DSS )GetContainingPdfObject ()_gb .PdfObject {return _age ._dbdegb };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_ggeba *XObjectImage )ToImage ()(*Image ,error ){_gbbbg :=&Image {};if _ggeba .Height ==nil {return nil ,_ga .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_gbbbg .Height =*_ggeba .Height ;if _ggeba .Width ==nil {return nil ,_ga .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gbbbg .Width =*_ggeba .Width ;if _ggeba .BitsPerComponent ==nil {switch _ggeba .Filter .(type ){case *_gb .CCITTFaxEncoder ,*_gb .JBIG2Encoder :_gbbbg .BitsPerComponent =1;
case *_gb .LZWEncoder ,*_gb .RunLengthEncoder :_gbbbg .BitsPerComponent =8;default:return nil ,_ga .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_gbbbg .BitsPerComponent =*_ggeba .BitsPerComponent ;};_gbbbg .ColorComponents =_ggeba .ColorSpace .GetNumComponents ();_ggeba ._abfbc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gb .MakeInteger (int64 (_gbbbg .ColorComponents )));
_deaaf ,_gebbc :=_gb .DecodeStream (_ggeba ._abfbc );if _gebbc !=nil {return nil ,_gebbc ;};_gbbbg .Data =_deaaf ;if _ggeba .Decode !=nil {_aegee ,_badf :=_ggeba .Decode .(*_gb .PdfObjectArray );if !_badf {_dgf .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ga .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_dbdbb ,_cfccg :=_aegee .ToFloat64Array ();if _cfccg !=nil {return nil ,_cfccg ;};_gbbbg ._ggcdd =_dbdbb ;};return _gbbbg ,nil ;};var _ pdfFont =(*pdfFontSimple )(nil );


// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_degdg *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// AddImageResource adds an image to the XObject resources.
func (_cgad *PdfPage )AddImageResource (name _gb .PdfObjectName ,ximg *XObjectImage )error {var _acab *_gb .PdfObjectDictionary ;if _cgad .Resources .XObject ==nil {_acab =_gb .MakeDict ();_cgad .Resources .XObject =_acab ;}else {var _eafgb bool ;_acab ,_eafgb =(_cgad .Resources .XObject ).(*_gb .PdfObjectDictionary );
if !_eafgb {return _ga .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_acab .Set (name ,ximg .ToPdfObject ());return nil ;};

// ToPdfObject implements interface PdfModel.
func (_edg *PdfActionGoTo3DView )ToPdfObject ()_gb .PdfObject {_edg .PdfAction .ToPdfObject ();_abbc :=_edg ._cd ;_afc :=_abbc .PdfObject .(*_gb .PdfObjectDictionary );_afc .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeGoTo3DView )));_afc .SetIfNotNil ("\u0054\u0041",_edg .TA );
_afc .SetIfNotNil ("\u0056",_edg .V );return _abbc ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_gdadg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _gdadg ._fabgf !=nil {return _gdadg ._fabgf ,nil ;};if _gdadg .ColorSpace ==nil {return nil ,nil ;};_egbgb ,_eeaa :=_fggg (_gdadg .ColorSpace );if _eeaa !=nil {return nil ,_eeaa ;
};_gdadg ._fabgf =_egbgb ;return _gdadg ._fabgf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_effg *PdfAnnotationPrinterMark )ToPdfObject ()_gb .PdfObject {_effg .PdfAnnotation .ToPdfObject ();_eaab :=_effg ._dccf ;_cade :=_eaab .PdfObject .(*_gb .PdfObjectDictionary );_cade .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_cade .SetIfNotNil ("\u004d\u004e",_effg .MN );return _eaab ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_eabg *PdfAcroForm ,_bggeg *PdfField ,_dabe *PdfAnnotationWidget )(*_gb .PdfObjectDictionary ,error );};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_bagf *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfec ,_cde :=_gb .GetNumbersAsFloat (objects );
if _cde !=nil {return nil ,_cde ;};return _bagf .ColorFromFloats (_dfec );};func _dadfd ()string {_cgdc .Lock ();defer _cgdc .Unlock ();_ceaeg :=_cgb .GetLicenseKey ();if len (_ccdef )> 0&&(_ceaeg .IsLicensed ()||_afeaf ){return _ccdef ;};return _b .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_aefed (),_ceaeg .TypeToString ());
};type pdfCIDFontType0 struct{fontCommon ;_fdfc *_gb .PdfIndirectObject ;_geda _fed .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_gb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gb .PdfObject ;W _gb .PdfObject ;DW2 _gb .PdfObject ;W2 _gb .PdfObject ;_dacag map[_fed .CharCode ]float64 ;_beda float64 ;};func (_effb *PdfAnnotationMarkup )appendToPdfDictionary (_cfcg *_gb .PdfObjectDictionary ){_cfcg .SetIfNotNil ("\u0054",_effb .T );
if _effb .Popup !=nil {_cfcg .Set ("\u0050\u006f\u0070u\u0070",_effb .Popup .ToPdfObject ());};_cfcg .SetIfNotNil ("\u0043\u0041",_effb .CA );_cfcg .SetIfNotNil ("\u0052\u0043",_effb .RC );_cfcg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_effb .CreationDate );
_cfcg .SetIfNotNil ("\u0049\u0052\u0054",_effb .IRT );_cfcg .SetIfNotNil ("\u0053\u0075\u0062\u006a",_effb .Subj );_cfcg .SetIfNotNil ("\u0052\u0054",_effb .RT );_cfcg .SetIfNotNil ("\u0049\u0054",_effb .IT );_cfcg .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_effb .ExData );
};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_gc .PSProgram ;_dffe *_gc .PSExecutor ;_ggggf []byte ;_bdcd *_gb .PdfObjectStream ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_gb .PdfObjectInteger ;BitsPerComponent *_gb .PdfObjectInteger ;BitsPerFlag *_gb .PdfObjectInteger ;Decode *_gb .PdfObjectArray ;Function []PdfFunction ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_afdc *PdfWriter )SetNamedDestinations (names _gb .PdfObject )error {if names ==nil {return nil ;};_dgf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_afdc ._dfcaf .Set ("\u004e\u0061\u006de\u0073",names );return _afdc .addObjects (names );};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_cfdcc *PdfFieldChoice )ToPdfObject ()_gb .PdfObject {_cfdcc .PdfField .ToPdfObject ();_bfeca :=_cfdcc ._faea ;_agceg :=_bfeca .PdfObject .(*_gb .PdfObjectDictionary );_agceg .Set ("\u0046\u0054",_gb .MakeName ("\u0043\u0068"));if _cfdcc .Opt !=nil {_agceg .Set ("\u004f\u0070\u0074",_cfdcc .Opt );
};if _cfdcc .TI !=nil {_agceg .Set ("\u0054\u0049",_cfdcc .TI );};if _cfdcc .I !=nil {_agceg .Set ("\u0049",_cfdcc .I );};return _bfeca ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_faea :_gb .MakeIndirectObject (_gb .MakeDict ())}};func (_bbda *PdfReader )newPdfAnnotationSquigglyFromDict (_ggb *_gb .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_eec :=PdfAnnotationSquiggly {};
_gba ,_gbab :=_bbda .newPdfAnnotationMarkupFromDict (_ggb );if _gbab !=nil {return nil ,_gbab ;};_eec .PdfAnnotationMarkup =_gba ;_eec .QuadPoints =_ggb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eec ,nil ;};func _cabe (_fafeg *_gb .PdfObjectDictionary )(*PdfShadingPattern ,error ){_ggcb :=&PdfShadingPattern {};
_fdeae :=_fafeg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _fdeae ==nil {_dgf .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gcagb ,_fggfa :=_febac (_fdeae );
if _fggfa !=nil {_dgf .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_fggfa );return nil ,_fggfa ;};_ggcb .Shading =_gcagb ;if _efggg :=_fafeg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_efggg !=nil {_fgaed ,_ebfafb :=_efggg .(*_gb .PdfObjectArray );if !_ebfafb {_dgf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efggg );
return nil ,_gb .ErrTypeError ;};_ggcb .Matrix =_fgaed ;};if _gbfgg :=_fafeg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gbfgg !=nil {_ggcb .ExtGState =_gbfgg ;};return _ggcb ,nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_cacc *PdfFontDescriptor )ToPdfObject ()_gb .PdfObject {_ffcc :=_gb .MakeDict ();if _cacc ._cbde ==nil {_cacc ._cbde =&_gb .PdfIndirectObject {};};_cacc ._cbde .PdfObject =_ffcc ;_ffcc .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _cacc .FontName !=nil {_ffcc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cacc .FontName );};if _cacc .FontFamily !=nil {_ffcc .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_cacc .FontFamily );};if _cacc .FontStretch !=nil {_ffcc .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_cacc .FontStretch );
};if _cacc .FontWeight !=nil {_ffcc .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_cacc .FontWeight );};if _cacc .Flags !=nil {_ffcc .Set ("\u0046\u006c\u0061g\u0073",_cacc .Flags );};if _cacc .FontBBox !=nil {_ffcc .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_cacc .FontBBox );
};if _cacc .ItalicAngle !=nil {_ffcc .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_cacc .ItalicAngle );};if _cacc .Ascent !=nil {_ffcc .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_cacc .Ascent );};if _cacc .Descent !=nil {_ffcc .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_cacc .Descent );
};if _cacc .Leading !=nil {_ffcc .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_cacc .Leading );};if _cacc .CapHeight !=nil {_ffcc .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_cacc .CapHeight );};if _cacc .XHeight !=nil {_ffcc .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_cacc .XHeight );
};if _cacc .StemV !=nil {_ffcc .Set ("\u0053\u0074\u0065m\u0056",_cacc .StemV );};if _cacc .StemH !=nil {_ffcc .Set ("\u0053\u0074\u0065m\u0048",_cacc .StemH );};if _cacc .AvgWidth !=nil {_ffcc .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_cacc .AvgWidth );
};if _cacc .MaxWidth !=nil {_ffcc .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_cacc .MaxWidth );};if _cacc .MissingWidth !=nil {_ffcc .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_cacc .MissingWidth );};if _cacc .FontFile !=nil {_ffcc .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_cacc .FontFile );
};if _cacc .FontFile2 !=nil {_ffcc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_cacc .FontFile2 );};if _cacc .FontFile3 !=nil {_ffcc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_cacc .FontFile3 );};if _cacc .CharSet !=nil {_ffcc .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_cacc .CharSet );
};if _cacc .Style !=nil {_ffcc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cacc .FontName );};if _cacc .Lang !=nil {_ffcc .Set ("\u004c\u0061\u006e\u0067",_cacc .Lang );};if _cacc .FD !=nil {_ffcc .Set ("\u0046\u0044",_cacc .FD );};if _cacc .CIDSet !=nil {_ffcc .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_cacc .CIDSet );
};return _cacc ._cbde ;};var _ pdfFont =(*pdfFontType0 )(nil );

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _gb .PdfObject )(*PdfFilespec ,error ){_ffg :=&PdfFilespec {};var _ddeb *_gb .PdfObjectDictionary ;if _gcddb ,_egcff :=_gb .GetIndirect (obj );_egcff {_ffg ._ebc =_gcddb ;_bef ,_cfga :=_gb .GetDict (_gcddb .PdfObject );if !_cfga {_dgf .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_gb .ErrTypeError ;};_ddeb =_bef ;}else if _ebfe ,_ceed :=_gb .GetDict (obj );_ceed {_ffg ._ebc =_ebfe ;_ddeb =_ebfe ;}else {_dgf .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );
return nil ,_gb .ErrTypeError ;};if _ddeb ==nil {_dgf .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ga .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};if _eefde :=_ddeb .Get ("\u0054\u0079\u0070\u0065");_eefde !=nil {_bgef ,_fbbb :=_eefde .(*_gb .PdfObjectName );if !_fbbb {_dgf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_eefde );
}else {if *_bgef !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_dgf .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bgef );
};};};if _ggged :=_ddeb .Get ("\u0046\u0053");_ggged !=nil {_ffg .FS =_ggged ;};if _cfaf :=_ddeb .Get ("\u0046");_cfaf !=nil {_ffg .F =_cfaf ;};if _bfeg :=_ddeb .Get ("\u0055\u0046");_bfeg !=nil {_ffg .UF =_bfeg ;};if _fabfc :=_ddeb .Get ("\u0044\u004f\u0053");
_fabfc !=nil {_ffg .DOS =_fabfc ;};if _cdaaf :=_ddeb .Get ("\u004d\u0061\u0063");_cdaaf !=nil {_ffg .Mac =_cdaaf ;};if _feag :=_ddeb .Get ("\u0055\u006e\u0069\u0078");_feag !=nil {_ffg .Unix =_feag ;};if _ccbe :=_ddeb .Get ("\u0049\u0044");_ccbe !=nil {_ffg .ID =_ccbe ;
};if _baba :=_ddeb .Get ("\u0056");_baba !=nil {_ffg .V =_baba ;};if _gefcg :=_ddeb .Get ("\u0045\u0046");_gefcg !=nil {_ffg .EF =_gefcg ;};if _adea :=_ddeb .Get ("\u0052\u0046");_adea !=nil {_ffg .RF =_adea ;};if _ccgea :=_ddeb .Get ("\u0044\u0065\u0073\u0063");
_ccgea !=nil {_ffg .Desc =_ccgea ;};if _ecad :=_ddeb .Get ("\u0043\u0049");_ecad !=nil {_ffg .CI =_ecad ;};return _ffg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbdb *PdfAnnotationCaret )ToPdfObject ()_gb .PdfObject {_fbdb .PdfAnnotation .ToPdfObject ();_abbf :=_fbdb ._dccf ;_bcg :=_abbf .PdfObject .(*_gb .PdfObjectDictionary );_fbdb .PdfAnnotationMarkup .appendToPdfDictionary (_bcg );_bcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0043\u0061\u0072e\u0074"));
_bcg .SetIfNotNil ("\u0052\u0044",_fbdb .RD );_bcg .SetIfNotNil ("\u0053\u0079",_fbdb .Sy );return _abbf ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cgefg :=PdfPage {};_cgefg ._gaec =_gb .MakeDict ();_cgefg .Resources =NewPdfPageResources ();_ebcc :=_gb .PdfIndirectObject {};_ebcc .PdfObject =_cgefg ._gaec ;_cgefg ._gggeb =&_ebcc ;return &_cgefg ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_ccef *PdfPage )error ;};func _bffff (_gcgdb *_gb .PdfObjectDictionary )(*PdfShadingType2 ,error ){_dgecc :=PdfShadingType2 {};_gcgff :=_gcgdb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _gcgff ==nil {_dgf .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_bdegbd ,_dadca :=_gcgff .(*_gb .PdfObjectArray );if !_dadca {_dgf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcgff );
return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _bdegbd .Len ()!=4{_dgf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bdegbd .Len ());
return nil ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_dgecc .Coords =_bdegbd ;if _gacbd :=_gcgdb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gacbd !=nil {_gacbd =_gb .TraceToDirectObject (_gacbd );
_ddgeaa ,_gbgbbc :=_gacbd .(*_gb .PdfObjectArray );if !_gbgbbc {_dgf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gacbd );return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dgecc .Domain =_ddgeaa ;};_gcgff =_gcgdb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gcgff ==nil {_dgf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dgecc .Function =[]PdfFunction {};if _cbdad ,_ccae :=_gcgff .(*_gb .PdfObjectArray );_ccae {for _ ,_aabbf :=range _cbdad .Elements (){_ebdb ,_cfdge :=_ceagc (_aabbf );if _cfdge !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfdge );
return nil ,_cfdge ;};_dgecc .Function =append (_dgecc .Function ,_ebdb );};}else {_bbgea ,_effgf :=_ceagc (_gcgff );if _effgf !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_effgf );
return nil ,_effgf ;};_dgecc .Function =append (_dgecc .Function ,_bbgea );};if _addfg :=_gcgdb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_addfg !=nil {_addfg =_gb .TraceToDirectObject (_addfg );_bbgd ,_ebbc :=_addfg .(*_gb .PdfObjectArray );if !_ebbc {_dgf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_addfg );
return nil ,_gb .ErrTypeError ;};if _bbgd .Len ()!=2{_dgf .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bbgd .Len ());return nil ,ErrInvalidAttribute ;
};_dgecc .Extend =_bbgd ;};return &_dgecc ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_cccbg *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_ecafc pdfFontSimple )GetCharMetrics (code _fed .CharCode )(_ad .CharMetrics ,bool ){if _cgfa ,_bddge :=_ecafc ._efcg [code ];_bddge {return _ad .CharMetrics {Wx :_cgfa },true ;};if _ad .IsStdFont (_ad .StdFontName (_ecafc ._ebadb )){return _ad .CharMetrics {Wx :250},true ;
};return _ad .CharMetrics {},false ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_dbcdf :=NewPdfAnnotation ();_fdgd :=&PdfAnnotationWatermark {};_fdgd .PdfAnnotation =_dbcdf ;_dbcdf .SetContext (_fdgd );return _fdgd ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _cf .ReadSeeker )(*PdfReader ,error ){const _cddfa ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";_dgac :=&PdfReader {_cgae :rs ,_addbfc :map[_gb .PdfObject ]struct{}{},_dfffec :_eefea (),_ggea :false };
_ceccf ,_defdb :=_dccddg ("\u0072");if _defdb !=nil {return nil ,_defdb ;};_defdb =_cgb .Track (_ceccf ,_cddfa );if _defdb !=nil {return nil ,_defdb ;};_dgac ._cdfea =_ceccf ;_gecf ,_defdb :=_gb .NewParser (rs );if _defdb !=nil {return nil ,_defdb ;};_dgac ._gedb =_gecf ;
_afeecc ,_defdb :=_dgac .IsEncrypted ();if _defdb !=nil {return nil ,_defdb ;};if !_afeecc {_defdb =_dgac .loadStructure ();if _defdb !=nil {return nil ,_defdb ;};};return _dgac ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_fcgcc *pdfFontType0 )ToPdfObject ()_gb .PdfObject {if _fcgcc ._ffce ==nil {_fcgcc ._ffce =&_gb .PdfIndirectObject {};};_badc :=_fcgcc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_fcgcc ._ffce .PdfObject =_badc ;if _fcgcc .Encoding !=nil {_badc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fcgcc .Encoding );
}else if _fcgcc ._bdde !=nil {_badc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fcgcc ._bdde .ToPdfObject ());};if _fcgcc .DescendantFont !=nil {_badc .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_gb .MakeArray (_fcgcc .DescendantFont .ToPdfObject ()));
};return _fcgcc ._ffce ;};func _gcfc (_aefa *_gb .PdfObjectDictionary ,_gfgee *fontCommon )(*pdfCIDFontType2 ,error ){if _gfgee ._cedad !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dgf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gfgee );
return nil ,_gb .ErrRangeError ;};_badd :=_bgcfe (_gfgee );_cddcf ,_aafb :=_gb .GetDict (_aefa .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_aafb {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gfgee );
return nil ,ErrRequiredAttributeMissing ;};_badd .CIDSystemInfo =_cddcf ;_badd .DW =_aefa .Get ("\u0044\u0057");_badd .W =_aefa .Get ("\u0057");_badd .DW2 =_aefa .Get ("\u0044\u0057\u0032");_badd .W2 =_aefa .Get ("\u0057\u0032");_badd .CIDToGIDMap =_aefa .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_badd ._aebcb =1000.0;if _feccc ,_eeab :=_gb .GetNumberAsFloat (_badd .DW );_eeab ==nil {_badd ._aebcb =_feccc ;};_beaea ,_bdagf :=_cfce (_badd .W );if _bdagf !=nil {return nil ,_bdagf ;};if _beaea ==nil {_beaea =map[_fed .CharCode ]float64 {};};_badd ._fbdg =_beaea ;
return _badd ,nil ;};

// G returns the value of the green component of the color.
func (_bebga *PdfColorDeviceRGB )G ()float64 {return _bebga [1]};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fcfgg *PdfOutline )ToPdfObject ()_gb .PdfObject {_afgbe :=_fcfgg ._begfa ;_bcgdc :=_afgbe .PdfObject .(*_gb .PdfObjectDictionary );_bcgdc .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _fcfgg .First !=nil {_bcgdc .Set ("\u0046\u0069\u0072s\u0074",_fcfgg .First .ToPdfObject ());
};if _fcfgg .Last !=nil {_bcgdc .Set ("\u004c\u0061\u0073\u0074",_fcfgg .Last .GetContext ().GetContainingPdfObject ());};if _fcfgg .Parent !=nil {_bcgdc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fcfgg .Parent .GetContext ().GetContainingPdfObject ());
};if _fcfgg .Count !=nil {_bcgdc .Set ("\u0043\u006f\u0075n\u0074",_gb .MakeInteger (*_fcfgg .Count ));};return _afgbe ;};

// GetXObjectByName gets XObject by name.
func (_gfedc *PdfPage )GetXObjectByName (name _gb .PdfObjectName )(_gb .PdfObject ,bool ){_dacgd ,_cdfcf :=_gfedc .Resources .XObject .(*_gb .PdfObjectDictionary );if !_cdfcf {return nil ,false ;};if _dafgf :=_dacgd .Get (name );_dafgf !=nil {return _dafgf ,true ;
};return nil ,false ;};

// Add appends an outline item as a child of the current outline item.
func (_bbcca *OutlineItem )Add (item *OutlineItem ){_bbcca .Entries =append (_bbcca .Entries ,item )};func (_ceddd *PdfWriter )copyObjects (){_beeg :=make (map[_gb .PdfObject ]_gb .PdfObject );_dcabg :=make ([]_gb .PdfObject ,0,len (_ceddd ._eeafb ));_ecdaf :=make (map[_gb .PdfObject ]struct{},len (_ceddd ._eeafb ));
_fefdb :=make (map[_gb .PdfObject ]struct{});for _ ,_dcabd :=range _ceddd ._eeafb {_agggd :=_ceddd .copyObject (_dcabd ,_beeg ,_fefdb ,false );if _ ,_gcfca :=_fefdb [_dcabd ];_gcfca {continue ;};_dcabg =append (_dcabg ,_agggd );_ecdaf [_agggd ]=struct{}{};
};_ceddd ._eeafb =_dcabg ;_ceddd ._dbbcgf =_ecdaf ;_ceddd ._cgcab =_ceddd .copyObject (_ceddd ._cgcab ,_beeg ,nil ,false ).(*_gb .PdfIndirectObject );_ceddd ._gceec =_ceddd .copyObject (_ceddd ._gceec ,_beeg ,nil ,false ).(*_gb .PdfIndirectObject );if _ceddd ._fcecc !=nil {_ceddd ._fcecc =_ceddd .copyObject (_ceddd ._fcecc ,_beeg ,nil ,false ).(*_gb .PdfIndirectObject );
};if _ceddd ._afgga {_cafg :=make (map[_gb .PdfObject ]int64 );for _dbdca ,_cggd :=range _ceddd ._facba {if _acbad ,_adbg :=_beeg [_dbdca ];_adbg {_cafg [_acbad ]=_cggd ;}else {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_ceddd ._facba =_cafg ;};};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_adgee _cf .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_cccbf _dg .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_aabcf _dg .Image )(*Image ,error );

// Compress an image.
Compress (_cebfc *Image ,_aacfa int64 )(*Image ,error );};func _bddfd (_dfdb _gb .PdfObject )(*PdfColorspaceDeviceN ,error ){_aaaeee :=NewPdfColorspaceDeviceN ();if _cgcd ,_bbbaa :=_dfdb .(*_gb .PdfIndirectObject );_bbbaa {_aaaeee ._defbe =_cgcd ;};_dfdb =_gb .TraceToDirectObject (_dfdb );
_abaa ,_ecdf :=_dfdb .(*_gb .PdfObjectArray );if !_ecdf {return nil ,_b .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _abaa .Len ()!=4&&_abaa .Len ()!=5{return nil ,_b .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_dfdb =_abaa .Get (0);_cbege ,_ecdf :=_dfdb .(*_gb .PdfObjectName );if !_ecdf {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cbege !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_b .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_dfdb =_abaa .Get (1);
_dfdb =_gb .TraceToDirectObject (_dfdb );_fgee ,_ecdf :=_dfdb .(*_gb .PdfObjectArray );if !_ecdf {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_aaaeee .ColorantNames =_fgee ;_dfdb =_abaa .Get (2);_ecdc ,_fgfa :=NewPdfColorspaceFromPdfObject (_dfdb );if _fgfa !=nil {return nil ,_fgfa ;};_aaaeee .AlternateSpace =_ecdc ;_ecab ,_fgfa :=_ceagc (_abaa .Get (3));if _fgfa !=nil {return nil ,_fgfa ;
};_aaaeee .TintTransform =_ecab ;if _abaa .Len ()==5{_fggfc ,_adgc :=_cbgeb (_abaa .Get (4));if _adgc !=nil {return nil ,_adgc ;};_aaaeee .Attributes =_fggfc ;};return _aaaeee ,nil ;};

// Width returns the width of `rect`.
func (_cgebb *PdfRectangle )Width ()float64 {return _fg .Abs (_cgebb .Urx -_cgebb .Llx )};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gb .PdfObject ;};

// Items returns all children outline items.
func (_bacca *OutlineItem )Items ()[]*OutlineItem {return _bacca .Entries };

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_gceec *_gb .PdfIndirectObject ;_ddacg *_gb .PdfIndirectObject ;_ceagag map[_gb .PdfObject ]struct{};_eeafb []_gb .PdfObject ;_dbbcgf map[_gb .PdfObject ]struct{};_ecbb []*_gb .PdfIndirectObject ;_cafeb *PdfOutlineTreeNode ;_dfcaf *_gb .PdfObjectDictionary ;
_ffbae []_gb .PdfObject ;_cgcab *_gb .PdfIndirectObject ;_bcebe *_e .Writer ;_bdabg int64 ;_ffgef error ;_eggbd *_gb .PdfCrypt ;_bega *_gb .PdfObjectDictionary ;_fcecc *_gb .PdfIndirectObject ;_febdg *_gb .PdfObjectArray ;_cgde int ;_dcggb int ;_bfab *bool ;
_cfgcc map[_gb .PdfObject ][]*_gb .PdfObjectDictionary ;_dfcgf *PdfAcroForm ;_cccfc Optimizer ;_gdfe map[int ]crossReference ;_dfcgb int64 ;ObjNumOffset int ;_afgga bool ;_gddac _gb .XrefTable ;_gbbea int64 ;_dfaaad int64 ;_facba map[_gb .PdfObject ]int64 ;
_bgcdbd map[_gb .PdfObject ]struct{};_cdegff string ;};func (_bbdgc *PdfShading )getShadingDict ()(*_gb .PdfObjectDictionary ,error ){_afcef :=_bbdgc ._gccef ;if _acacb ,_dafbc :=_afcef .(*_gb .PdfIndirectObject );_dafbc {_abbcd ,_beff :=_acacb .PdfObject .(*_gb .PdfObjectDictionary );
if !_beff {return nil ,_gb .ErrTypeError ;};return _abbcd ,nil ;}else if _deffe ,_fbafcg :=_afcef .(*_gb .PdfObjectStream );_fbafcg {return _deffe .PdfObjectDictionary ,nil ;}else if _degda ,_agddc :=_afcef .(*_gb .PdfObjectDictionary );_agddc {return _degda ,nil ;
}else {_dgf .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_gb .ErrTypeError ;};};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_eccca DefaultImageHandler )Read (reader _cf .Reader )(*Image ,error ){_fbef ,_ ,_ffbda :=_dg .Decode (reader );if _ffbda !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ffbda );
return nil ,_ffbda ;};return _eccca .NewImageFromGoImage (_fbef );};

// ToPdfObject implements interface PdfModel.
func (_cbf *PdfActionGoToE )ToPdfObject ()_gb .PdfObject {_cbf .PdfAction .ToPdfObject ();_eae :=_cbf ._cd ;_aag :=_eae .PdfObject .(*_gb .PdfObjectDictionary );_aag .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeGoToE )));if _cbf .F !=nil {_aag .Set ("\u0046",_cbf .F .ToPdfObject ());
};_aag .SetIfNotNil ("\u0044",_cbf .D );_aag .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cbf .NewWindow );_aag .SetIfNotNil ("\u0054",_cbf .T );return _eae ;};

// IsCID returns true if the underlying font is CID.
func (_cgca *PdfFont )IsCID ()bool {return _cgca .baseFields ().isCIDFont ()};func (_aefge *Image )samplesTrimPadding (_dgeaf []uint32 )[]uint32 {_eecd :=_aefge .ColorComponents *int (_aefge .Width )*int (_aefge .Height );if len (_dgeaf )==_eecd {return _dgeaf ;
};_ecabcd :=make ([]uint32 ,_eecd );_ffge :=int (_aefge .Width )*_aefge .ColorComponents ;var _cbdgf ,_fbcddf ,_ffdd ,_dfddc int ;_cfeca :=_fe .BytesPerLine (int (_aefge .Width ),int (_aefge .BitsPerComponent ),_aefge .ColorComponents );for _cbdgf =0;_cbdgf < int (_aefge .Height );
_cbdgf ++{_fbcddf =_cbdgf *int (_aefge .Width );_ffdd =_cbdgf *_cfeca ;for _dfddc =0;_dfddc < _ffge ;_dfddc ++{_ecabcd [_fbcddf +_dfddc ]=_dgeaf [_ffdd +_dfddc ];};};return _ecabcd ;};

// SetName sets the `Name` field of the signature.
func (_gdga *PdfSignature )SetName (name string ){_gdga .Name =_gb .MakeString (name )};

// String returns a string describing the font descriptor.
func (_afbg *PdfFontDescriptor )String ()string {var _aaggf []string ;if _afbg .FontName !=nil {_aaggf =append (_aaggf ,_afbg .FontName .String ());};if _afbg .FontFamily !=nil {_aaggf =append (_aaggf ,_afbg .FontFamily .String ());};if _afbg .fontFile !=nil {_aaggf =append (_aaggf ,_afbg .fontFile .String ());
};if _afbg ._dbcbc !=nil {_aaggf =append (_aaggf ,_afbg ._dbcbc .String ());};_aaggf =append (_aaggf ,_b .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_afbg .FontFile3 !=nil ));return _b .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_fd .Join (_aaggf ,"\u002c\u0020"));
};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _gb .PdfObject ;Q _gb .PdfObject ;RC _gb .PdfObject ;DS _gb .PdfObject ;CL _gb .PdfObject ;IT _gb .PdfObject ;BE _gb .PdfObject ;RD _gb .PdfObject ;BS _gb .PdfObject ;LE _gb .PdfObject ;
};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _gb .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _gb .PdfObject ;Contents _gb .PdfObject ;
Rotate *int64 ;Group _gb .PdfObject ;Thumb _gb .PdfObject ;B _gb .PdfObject ;Dur _gb .PdfObject ;Trans _gb .PdfObject ;AA _gb .PdfObject ;Metadata _gb .PdfObject ;PieceInfo _gb .PdfObject ;StructParents _gb .PdfObject ;ID _gb .PdfObject ;PZ _gb .PdfObject ;
SeparationInfo _gb .PdfObject ;Tabs _gb .PdfObject ;TemplateInstantiated _gb .PdfObject ;PresSteps _gb .PdfObject ;UserUnit _gb .PdfObject ;VP _gb .PdfObject ;Annots _gb .PdfObject ;_cafdf []*PdfAnnotation ;_gaec *_gb .PdfObjectDictionary ;_gggeb *_gb .PdfIndirectObject ;
_aefcc *PdfReader ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _gb .StreamEncoder ;Intent _gb .PdfObject ;ImageMask _gb .PdfObject ;Mask _gb .PdfObject ;Matte _gb .PdfObject ;Decode _gb .PdfObject ;Interpolate _gb .PdfObject ;Alternatives _gb .PdfObject ;
SMask _gb .PdfObject ;SMaskInData _gb .PdfObject ;Name _gb .PdfObject ;StructParent _gb .PdfObject ;ID _gb .PdfObject ;OPI _gb .PdfObject ;Metadata _gb .PdfObject ;OC _gb .PdfObject ;Stream []byte ;_abfbc *_gb .PdfObjectStream ;};func _edec (_gccfd _gb .PdfObject ,_ceda bool )(*PdfFont ,error ){_cbbae ,_cbdaa ,_fbbf :=_bfff (_gccfd );
if _fbbf !=nil {if _fbbf ==ErrType3FontNotSupported ||_fbbf ==ErrType1CFontNotSupported {_gfeg ,_affe :=_fddcb (_cbbae ,_cbdaa ,nil );if _affe !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_cbdaa ,_affe );
return nil ,_fbbf ;};return &PdfFont {_cbab :_gfeg },_fbbf ;};return nil ,_fbbf ;};_eeffe :=&PdfFont {};switch _cbdaa ._cedad {case "\u0054\u0079\u0070e\u0030":if !_ceda {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cbdaa );
return nil ,_ga .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_gebfg ,_cdcca :=_ecbgb (_cbbae ,_cbdaa );if _cdcca !=nil {_dgf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbdaa ,_cdcca );
return nil ,_cdcca ;};_eeffe ._cbab =_gebfg ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _baffb *pdfFontSimple ;_edbgg ,_gded :=_ad .NewStdFontByName (_ad .StdFontName (_cbdaa ._ebadb ));
if _gded {_eeda :=_bcfb (_edbgg );_eeffe ._cbab =&_eeda ;_efbb :=_gb .TraceToDirectObject (_eeda .ToPdfObject ());_cdbd ,_aebgc ,_gdbb :=_bfff (_efbb );if _gdbb !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_cbdaa ,_eeda );
return nil ,_gdbb ;};for _ ,_dbda :=range _cbbae .Keys (){_cdbd .Set (_dbda ,_cbbae .Get (_dbda ));};_baffb ,_gdbb =_fddcb (_cdbd ,_aebgc ,_eeda ._bdaa );if _gdbb !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_cbdaa ,_eeda );
return nil ,_gdbb ;};_baffb ._efcg =_eeda ._efcg ;_baffb ._efdg =_eeda ._efdg ;}else {_baffb ,_fbbf =_fddcb (_cbbae ,_cbdaa ,nil );if _fbbf !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_cbdaa ,_fbbf );
return nil ,_fbbf ;};};_fbbf =_baffb .addEncoding ();if _fbbf !=nil {return nil ,_fbbf ;};if _gded {_baffb .updateStandard14Font ();};if _gded &&_baffb ._dgdge ==nil &&_baffb ._bdaa ==nil {_dgf .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_baffb );
_dgf .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_edbgg );};if len (_baffb ._efcg )==0{_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_baffb );};_eeffe ._cbab =_baffb ;
case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_agaec ,_bgfef :=_geggeg (_cbbae ,_cbdaa );if _bgfef !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_bgfef );
return nil ,_bgfef ;};_eeffe ._cbab =_agaec ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cfdb ,_ggebe :=_gcfc (_cbbae ,_cbdaa );if _ggebe !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbdaa ,_ggebe );
return nil ,_ggebe ;};_eeffe ._cbab =_cfdb ;default:_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_cbdaa );
return nil ,_b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cbdaa );};return _eeffe ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_edee :=&PdfAppender {_fgd :reader ._cgae ,Reader :reader ,_fag :reader ._gedb ,_cbbf :reader ._addbfc };_ddba ,_ffac :=_edee ._fgd .Seek (0,_cf .SeekEnd );if _ffac !=nil {return nil ,_ffac ;
};_edee ._cbbc =_ddba ;if _ ,_ffac =_edee ._fgd .Seek (0,_cf .SeekStart );_ffac !=nil {return nil ,_ffac ;};_edee ._ddda ,_ffac =NewPdfReader (_edee ._fgd );if _ffac !=nil {return nil ,_ffac ;};for _ ,_gaeb :=range _edee .Reader .GetObjectNums (){if _edee ._efde < _gaeb {_edee ._efde =_gaeb ;
};};_edee ._gebf =_edee ._fag .GetXrefTable ();_edee ._bdg =_edee ._fag .GetXrefOffset ();_edee ._bcabf =append (_edee ._bcabf ,_edee ._ddda .PageList ...);_edee ._cgda =make (map[_gb .PdfObject ]struct{});_edee ._dbgc =make (map[_gb .PdfObject ]int64 );
_edee ._dbcge =make (map[_gb .PdfObject ]struct{});_edee ._fbc =_edee ._ddda .AcroForm ;_edee ._ccgbe =_edee ._ddda .DSS ;return _edee ,nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_gb .PdfObjectName ;Colorants _gb .PdfObject ;Process _gb .PdfObject ;MixingHints _gb .PdfObject ;_egbf *_gb .PdfIndirectObject ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_cgdc .Lock ();defer _cgdc .Unlock ();_gccfdg =author };

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_gabce *Image )ToGoImage ()(_dg .Image ,error ){_dgf .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_gfdc ,_bgefd :=_fe .NewImage (int (_gabce .Width ),int (_gabce .Height ),int (_gabce .BitsPerComponent ),_gabce .ColorComponents ,_gabce .Data ,_gabce ._abecg ,_gabce ._ggcdd );
if _bgefd !=nil {return nil ,_bgefd ;};return _gfdc ,nil ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_cadcf :=&PdfOutline {_begfa :_gb .MakeIndirectObject (_gb .MakeDict ())};_cadcf ._gdeda =_cadcf ;return _cadcf ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func (_bagaa *PdfReader )loadAnnotations (_gbgfa _gb .PdfObject )([]*PdfAnnotation ,error ){_degbg ,_dfaa :=_gb .GetArray (_gbgfa );if !_dfaa {return nil ,_b .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _cbgebd []*PdfAnnotation ;for _ ,_adaeb :=range _degbg .Elements (){_adaeb =_gb .ResolveReference (_adaeb );if _ ,_bbcbf :=_adaeb .(*_gb .PdfObjectNull );_bbcbf {continue ;};_bdfb ,_cebef :=_adaeb .(*_gb .PdfObjectDictionary );_fbfac ,_gcad :=_adaeb .(*_gb .PdfIndirectObject );
if _cebef {_fbfac =&_gb .PdfIndirectObject {};_fbfac .PdfObject =_bdfb ;}else {if !_gcad {return nil ,_b .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_fcfeb ,_ggda :=_bagaa .newPdfAnnotationFromIndirectObject (_fbfac );if _ggda !=nil {return nil ,_ggda ;};switch _cddcg :=_fcfeb .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_bbbcc :=range _bagaa .AcroForm .AllFields (){if _bbbcc ._faea ==_cddcg .Parent {_cddcg ._fcd =_bbbcc ;
break ;};};};if _fcfeb !=nil {_cbgebd =append (_cbgebd ,_fcfeb );};};return _cbgebd ,nil ;};

// SetContext sets the sub action (context).
func (_cc *PdfAction )SetContext (ctx PdfModel ){_cc ._ce =ctx };

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_gb .PdfObject ,error );};

// ToPdfObject implements interface PdfModel.
func (_addg *PdfAnnotationLine )ToPdfObject ()_gb .PdfObject {_addg .PdfAnnotation .ToPdfObject ();_ecbga :=_addg ._dccf ;_gacb :=_ecbga .PdfObject .(*_gb .PdfObjectDictionary );_addg .PdfAnnotationMarkup .appendToPdfDictionary (_gacb );_gacb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u004c\u0069\u006e\u0065"));
_gacb .SetIfNotNil ("\u004c",_addg .L );_gacb .SetIfNotNil ("\u0042\u0053",_addg .BS );_gacb .SetIfNotNil ("\u004c\u0045",_addg .LE );_gacb .SetIfNotNil ("\u0049\u0043",_addg .IC );_gacb .SetIfNotNil ("\u004c\u004c",_addg .LL );_gacb .SetIfNotNil ("\u004c\u004c\u0045",_addg .LLE );
_gacb .SetIfNotNil ("\u0043\u0061\u0070",_addg .Cap );_gacb .SetIfNotNil ("\u0049\u0054",_addg .IT );_gacb .SetIfNotNil ("\u004c\u004c\u004f",_addg .LLO );_gacb .SetIfNotNil ("\u0043\u0050",_addg .CP );_gacb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_addg .Measure );
_gacb .SetIfNotNil ("\u0043\u004f",_addg .CO );return _ecbga ;};func _bfggc (_ffgc []byte )(_dfbec ,_dabdc string ,_aceg error ){_dgf .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_ffgc ));
_fdbe :=_cgbg .FindIndex (_ffgc );if _fdbe ==nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_gb .ErrTypeError ;};_ebacc :=_fdbe [1];_caed :=_fd .Index (string (_ffgc [_ebacc :]),_gbfba );if _caed < 0{_dfbec =string (_ffgc [_ebacc :]);return _dfbec ,"",nil ;};_gfcad :=_ebacc +_caed ;_dfbec =string (_ffgc [_ebacc :_gfcad ]);_ggcgc :=_gfcad ;
_caed =_fd .Index (string (_ffgc [_ggcgc :]),_gcdgg );if _caed < 0{_dgf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aceg );
return "","",_gb .ErrTypeError ;};_fbfcc :=_ggcgc +_caed ;_dabdc =string (_ffgc [_ggcgc :_fbfcc ]);return _dfbec ,_dabdc ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dffg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dgf .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ffdbc :=[]float64 {0.0};if _dffg .C0 !=nil {_ffdbc =_dffg .C0 ;};_baefd :=[]float64 {1.0};if _dffg .C1 !=nil {_baefd =_dffg .C1 ;};var _cgdga []float64 ;for _ccfga :=0;_ccfga < len (_ffdbc );_ccfga ++{_bbefc :=_ffdbc [_ccfga ]+_fg .Pow (x [0],_dffg .N )*(_baefd [_ccfga ]-_ffdbc [_ccfga ]);
_cgdga =append (_cgdga ,_bbefc );};return _cgdga ,nil ;};func (_ffa *PdfReader )newPdfActionFromIndirectObject (_cad *_gb .PdfIndirectObject )(*PdfAction ,error ){_efg ,_gffd :=_cad .PdfObject .(*_gb .PdfObjectDictionary );if !_gffd {return nil ,_b .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ffa ._dfffec .GetModelFromPrimitive (_efg );model !=nil {_eeb ,_ccfa :=model .(*PdfAction );if !_ccfa {return nil ,_b .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _eeb ,nil ;};_gaf :=&PdfAction {};_gaf ._cd =_cad ;_ffa ._dfffec .Register (_efg ,_gaf );if _fdg :=_efg .Get ("\u0054\u0079\u0070\u0065");_fdg !=nil {_aba ,_gfa :=_fdg .(*_gb .PdfObjectName );if !_gfa {_dgf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fdg );
}else {if *_aba !="\u0041\u0063\u0074\u0069\u006f\u006e"{_dgf .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_aba );
};_gaf .Type =_aba ;};};if _afde :=_efg .Get ("\u004e\u0065\u0078\u0074");_afde !=nil {_gaf .Next =_afde ;};if _ge :=_efg .Get ("\u0053");_ge !=nil {_gaf .S =_ge ;};_gga ,_eff :=_gaf .S .(*_gb .PdfObjectName );if !_eff {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gaf .S );
return nil ,_b .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gaf .S );};_adfe :=PdfActionType (_gga .String ());
switch _adfe {case ActionTypeGoTo :_cgc ,_dcc :=_ffa .newPdfActionGotoFromDict (_efg );if _dcc !=nil {return nil ,_dcc ;};_cgc .PdfAction =_gaf ;_gaf ._ce =_cgc ;return _gaf ,nil ;case ActionTypeGoToR :_fff ,_eef :=_ffa .newPdfActionGotoRFromDict (_efg );
if _eef !=nil {return nil ,_eef ;};_fff .PdfAction =_gaf ;_gaf ._ce =_fff ;return _gaf ,nil ;case ActionTypeGoToE :_bda ,_ada :=_ffa .newPdfActionGotoEFromDict (_efg );if _ada !=nil {return nil ,_ada ;};_bda .PdfAction =_gaf ;_gaf ._ce =_bda ;return _gaf ,nil ;
case ActionTypeLaunch :_eed ,_beee :=_ffa .newPdfActionLaunchFromDict (_efg );if _beee !=nil {return nil ,_beee ;};_eed .PdfAction =_gaf ;_gaf ._ce =_eed ;return _gaf ,nil ;case ActionTypeThread :_ebe ,_bdag :=_ffa .newPdfActionThreadFromDict (_efg );if _bdag !=nil {return nil ,_bdag ;
};_ebe .PdfAction =_gaf ;_gaf ._ce =_ebe ;return _gaf ,nil ;case ActionTypeURI :_fac ,_cca :=_ffa .newPdfActionURIFromDict (_efg );if _cca !=nil {return nil ,_cca ;};_fac .PdfAction =_gaf ;_gaf ._ce =_fac ;return _gaf ,nil ;case ActionTypeSound :_gfg ,_gfae :=_ffa .newPdfActionSoundFromDict (_efg );
if _gfae !=nil {return nil ,_gfae ;};_gfg .PdfAction =_gaf ;_gaf ._ce =_gfg ;return _gaf ,nil ;case ActionTypeMovie :_fdgb ,_ddb :=_ffa .newPdfActionMovieFromDict (_efg );if _ddb !=nil {return nil ,_ddb ;};_fdgb .PdfAction =_gaf ;_gaf ._ce =_fdgb ;return _gaf ,nil ;
case ActionTypeHide :_dff ,_ffe :=_ffa .newPdfActionHideFromDict (_efg );if _ffe !=nil {return nil ,_ffe ;};_dff .PdfAction =_gaf ;_gaf ._ce =_dff ;return _gaf ,nil ;case ActionTypeNamed :_dgef ,_abe :=_ffa .newPdfActionNamedFromDict (_efg );if _abe !=nil {return nil ,_abe ;
};_dgef .PdfAction =_gaf ;_gaf ._ce =_dgef ;return _gaf ,nil ;case ActionTypeSubmitForm :_efe ,_gcg :=_ffa .newPdfActionSubmitFormFromDict (_efg );if _gcg !=nil {return nil ,_gcg ;};_efe .PdfAction =_gaf ;_gaf ._ce =_efe ;return _gaf ,nil ;case ActionTypeResetForm :_dee ,_cdg :=_ffa .newPdfActionResetFormFromDict (_efg );
if _cdg !=nil {return nil ,_cdg ;};_dee .PdfAction =_gaf ;_gaf ._ce =_dee ;return _gaf ,nil ;case ActionTypeImportData :_eeg ,_cdb :=_ffa .newPdfActionImportDataFromDict (_efg );if _cdb !=nil {return nil ,_cdb ;};_eeg .PdfAction =_gaf ;_gaf ._ce =_eeg ;
return _gaf ,nil ;case ActionTypeSetOCGState :_fegf ,_dad :=_ffa .newPdfActionSetOCGStateFromDict (_efg );if _dad !=nil {return nil ,_dad ;};_fegf .PdfAction =_gaf ;_gaf ._ce =_fegf ;return _gaf ,nil ;case ActionTypeRendition :_bac ,_eag :=_ffa .newPdfActionRenditionFromDict (_efg );
if _eag !=nil {return nil ,_eag ;};_bac .PdfAction =_gaf ;_gaf ._ce =_bac ;return _gaf ,nil ;case ActionTypeTrans :_ade ,_cgcb :=_ffa .newPdfActionTransFromDict (_efg );if _cgcb !=nil {return nil ,_cgcb ;};_ade .PdfAction =_gaf ;_gaf ._ce =_ade ;return _gaf ,nil ;
case ActionTypeGoTo3DView :_bg ,_agc :=_ffa .newPdfActionGoTo3DViewFromDict (_efg );if _agc !=nil {return nil ,_agc ;};_bg .PdfAction =_gaf ;_gaf ._ce =_bg ;return _gaf ,nil ;case ActionTypeJavaScript :_afff ,_bedf :=_ffa .newPdfActionJavaScriptFromDict (_efg );
if _bedf !=nil {return nil ,_bedf ;};_afff .PdfAction =_gaf ;_gaf ._ce =_afff ;return _gaf ,nil ;};_dgf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_adfe );
return nil ,nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ffdag *PdfPageResources )GetPatternByName (keyName _gb .PdfObjectName )(*PdfPattern ,bool ){if _ffdag .Pattern ==nil {return nil ,false ;};_gcfb ,_bfcce :=_gb .TraceToDirectObject (_ffdag .Pattern ).(*_gb .PdfObjectDictionary );if !_bfcce {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ffdag .Pattern );
return nil ,false ;};if _egaa :=_gcfb .Get (keyName );_egaa !=nil {_bgdb ,_dfcca :=_cdgcd (_egaa );if _dfcca !=nil {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dfcca );
return nil ,false ;};return _bgdb ,true ;};return nil ,false ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bgaf *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eaggc ,_afcd :=_gb .GetNumbersAsFloat (objects );
if _afcd !=nil {return nil ,_afcd ;};return _bgaf .ColorFromFloats (_eaggc );};func (_bcae *PdfReader )lookupPageByObject (_bddfg _gb .PdfObject )(*PdfPage ,error ){return nil ,_ga .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};const (_cgdgb =0x00001;_cdgb =0x00002;_dafg =0x00004;_cfbcd =0x00008;_bagba =0x00020;_ggbc =0x00040;_gfag =0x10000;_gabbb =0x20000;_dcae =0x40000;);

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bgda pdfCIDFontType0 )GetRuneMetrics (r rune )(_ad .CharMetrics ,bool ){return _ad .CharMetrics {Wx :_bgda ._beda },true ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_caac *PdfReader )GetNamedDestinations ()(_gb .PdfObject ,error ){_aeccc :=_gb .ResolveReference (_caac ._ggce .Get ("\u004e\u0061\u006de\u0073"));if _aeccc ==nil {return nil ,nil ;};if !_caac ._ggea {_ccca :=_caac .traverseObjectData (_aeccc );if _ccca !=nil {return nil ,_ccca ;
};};return _aeccc ,nil ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_cfbc *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_bdb :=0.3*_cfbc .R ()+0.59*_cfbc .G ()+0.11*_cfbc .B ();_bdb =_fg .Min (_fg .Max (_bdb ,0.0),1.0);return NewPdfColorDeviceGray (_bdb );};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_aecfa *PdfSignature )bool ;Validate (_abbcdb *PdfSignature ,_ggfe Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_edcee *PdfSignature )(Hasher ,error );Sign (_dgefef *PdfSignature ,_cbcec Hasher )error ;};

// L returns the value of the L component of the color.
func (_cdfe *PdfColorLab )L ()float64 {return _cdfe [0]};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_abec :=&PdfBorderStyle {};return _abec };

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_ffeb :=NewPdfAnnotation ();_ddf :=&PdfAnnotationPolyLine {};_ddf .PdfAnnotation =_ffeb ;_ddf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffeb .SetContext (_ddf );return _ddf ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_gb .PdfObjectArray ;};

// WriteString outputs the object as it is to be written to file.
func (_gcbbg *pdfSignDictionary )WriteString ()string {_gcbbg ._bbaaf =0;_gcbbg ._fbcb =0;_gcbbg ._edbb =0;_gcbbg ._fdga =0;_ggcbb :=_bed .NewBuffer (nil );_ggcbb .WriteString ("\u003c\u003c");for _ ,_eeggd :=range _gcbbg .Keys (){_agfac :=_gcbbg .Get (_eeggd );
switch _eeggd {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_ggcbb .WriteString (_eeggd .WriteString ());_ggcbb .WriteString ("\u0020");_gcbbg ._edbb =_ggcbb .Len ();_ggcbb .WriteString (_agfac .WriteString ());_ggcbb .WriteString ("\u0020");_gcbbg ._fdga =_ggcbb .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_ggcbb .WriteString (_eeggd .WriteString ());_ggcbb .WriteString ("\u0020");_gcbbg ._bbaaf =_ggcbb .Len ();_ggcbb .WriteString (_agfac .WriteString ());_ggcbb .WriteString ("\u0020");_gcbbg ._fbcb =_ggcbb .Len ()-1;
default:_ggcbb .WriteString (_eeggd .WriteString ());_ggcbb .WriteString ("\u0020");_ggcbb .WriteString (_agfac .WriteString ());};};_ggcbb .WriteString ("\u003e\u003e");return _ggcbb .String ();};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_gbda ,_eefb :=NewStandard14Font (basefont );if _eefb !=nil {panic (_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _gbda ;};func (_adab *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};func _bgcfe (_fbdgg *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_fbdgg }};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_agdbgg *PdfPageResources )HasXObjectByName (keyName _gb .PdfObjectName )bool {_ebdad ,_ :=_agdbgg .GetXObjectByName (keyName );return _ebdad !=nil ;};func _aefgd (_aded *_gb .PdfObjectDictionary )(*PdfFieldText ,error ){_eggb :=&PdfFieldText {};
_eggb .DA ,_ =_gb .GetString (_aded .Get ("\u0044\u0041"));_eggb .Q ,_ =_gb .GetInt (_aded .Get ("\u0051"));_eggb .DS ,_ =_gb .GetString (_aded .Get ("\u0044\u0053"));_eggb .RV =_aded .Get ("\u0052\u0056");_eggb .MaxLen ,_ =_gb .GetInt (_aded .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _eggb ,nil ;};func (_dac *PdfReader )newPdfAnnotationPolyLineFromDict (_bagdb *_gb .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_dca :=PdfAnnotationPolyLine {};_gaef ,_acfe :=_dac .newPdfAnnotationMarkupFromDict (_bagdb );if _acfe !=nil {return nil ,_acfe ;
};_dca .PdfAnnotationMarkup =_gaef ;_dca .Vertices =_bagdb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dca .LE =_bagdb .Get ("\u004c\u0045");_dca .BS =_bagdb .Get ("\u0042\u0053");_dca .IC =_bagdb .Get ("\u0049\u0043");_dca .BE =_bagdb .Get ("\u0042\u0045");
_dca .IT =_bagdb .Get ("\u0049\u0054");_dca .Measure =_bagdb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dca ,nil ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_bdfa *OutlineItem )ToPdfObject ()_gb .PdfObject {_cggf ,_ :=_bdfa .ToPdfOutlineItem ();return _cggf .ToPdfObject ();};

// String returns a string that describes `font`.
func (_ecaac *PdfFont )String ()string {_feead :="";if _ecaac ._cbab .Encoder ()!=nil {_feead =_ecaac ._cbab .Encoder ().String ();};return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_ecaac ._cbab ,_ecaac .baseFields ().coreString (),_feead );
};

// ToPdfObject implements interface PdfModel.
func (_fdfe *PdfAnnotationPopup )ToPdfObject ()_gb .PdfObject {_fdfe .PdfAnnotation .ToPdfObject ();_ecd :=_fdfe ._dccf ;_fdac :=_ecd .PdfObject .(*_gb .PdfObjectDictionary );_fdac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0050\u006f\u0070u\u0070"));
_fdac .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fdfe .Parent );_fdac .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fdfe .Open );return _ecd ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_fbfb *PdfAppender )UpdatePage (page *PdfPage ){_fbfb .updateObjectsDeep (page .ToPdfObject (),nil )};func (_gcd *PdfReader )newPdfActionSoundFromDict (_dgb *_gb .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_dgb .Get ("\u0053\u006f\u0075n\u0064"),Volume :_dgb .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_dgb .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_dgb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_dgb .Get ("\u004d\u0069\u0078")},nil ;
};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_gb .PdfObjectString ;Author *_gb .PdfObjectString ;Subject *_gb .PdfObjectString ;Keywords *_gb .PdfObjectString ;Creator *_gb .PdfObjectString ;Producer *_gb .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_gb .PdfObjectName ;
_acdf *_gb .PdfObjectDictionary ;};

// ToPdfObject implements interface PdfModel.
func (_fdfg *PdfAnnotationWatermark )ToPdfObject ()_gb .PdfObject {_fdfg .PdfAnnotation .ToPdfObject ();_cbeg :=_fdfg ._dccf ;_gef :=_cbeg .PdfObject .(*_gb .PdfObjectDictionary );_gef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_gef .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_fdfg .FixedPrint );return _cbeg ;};

// GetOutlineTree returns the outline tree.
func (_fadge *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _fadge ._gafe };func (_ddecc *PdfSignature )extractChainFromCert ()([]*_g .Certificate ,error ){var _ebcbb *_gb .PdfObjectArray ;switch _gfdda :=_ddecc .Cert .(type ){case *_gb .PdfObjectString :_ebcbb =_gb .MakeArray (_gfdda );
case *_gb .PdfObjectArray :_ebcbb =_gfdda ;default:return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gfdda );
};var _afcb _bed .Buffer ;for _ ,_fagg :=range _ebcbb .Elements (){_fgbcc ,_dgabg :=_gb .GetString (_fagg );if !_dgabg {return nil ,_b .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_fagg );
};if _ ,_eeecg :=_afcb .Write (_fgbcc .Bytes ());_eeecg !=nil {return nil ,_eeecg ;};};return _g .ParseCertificates (_afcb .Bytes ());};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_dfc :=NewPdfAnnotation ();_dbfga :=&PdfAnnotationRedact {};_dbfga .PdfAnnotation =_dfc ;_dbfga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfc .SetContext (_dbfga );return _dbfga ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_gb .PdfObjectStream ;OCSP []*_gb .PdfObjectStream ;CRL []*_gb .PdfObjectStream ;TU *_gb .PdfObjectString ;TS *_gb .PdfObjectString ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ToPdfObject implements interface PdfModel.
func (_dgfa *PdfAnnotationFileAttachment )ToPdfObject ()_gb .PdfObject {_dgfa .PdfAnnotation .ToPdfObject ();_gacd :=_dgfa ._dccf ;_abc :=_gacd .PdfObject .(*_gb .PdfObjectDictionary );_dgfa .PdfAnnotationMarkup .appendToPdfDictionary (_abc );_abc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_abc .SetIfNotNil ("\u0046\u0053",_dgfa .FS );_abc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dgfa .Name );return _gacd ;};func (_ffcdf *PdfFunctionType0 )processSamples ()error {_dbeec :=_cag .ResampleBytes (_ffcdf ._fbafg ,_ffcdf .BitsPerSample );_ffcdf ._fega =_dbeec ;
return nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _gb .PdfObject ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_edbed *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _gbbed []*PdfOutlineTreeNode ;var _gfafb []string ;var _gceac func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_gceac =func (_agfca *PdfOutlineTreeNode ,_dcfbf *[]*PdfOutlineTreeNode ,_gdeb *[]string ,_cagec int ){if _agfca ==nil {return ;
};if _agfca ._gdeda ==nil {_dgf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_accgd ,_cfgf :=_agfca ._gdeda .(*PdfOutlineItem );if _cfgf {*_dcfbf =append (*_dcfbf ,&_accgd .PdfOutlineTreeNode );
_bgcdd :=_fd .Repeat ("\u0020",_cagec *2)+_accgd .Title .Decoded ();*_gdeb =append (*_gdeb ,_bgcdd );};if _agfca .First !=nil {_cdegf :=_fd .Repeat ("\u0020",_cagec *2)+"\u002b";*_gdeb =append (*_gdeb ,_cdegf );_gceac (_agfca .First ,_dcfbf ,_gdeb ,_cagec +1);
};if _cfgf &&_accgd .Next !=nil {_gceac (_accgd .Next ,_dcfbf ,_gdeb ,_cagec );};};_gceac (_edbed ._gafe ,&_gbbed ,&_gfafb ,0);return _gbbed ,_gfafb ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dfff *PdfAnnotation )GetContainingPdfObject ()_gb .PdfObject {return _dfff ._dccf };const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_ddbb *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ga .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_ebbg :=field .V ;if _ebbg ==nil {return _ga .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_afagd :=pageNum -1;
if _afagd < 0||_afagd > len (_ddbb ._bcabf )-1{return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_ceba :=_ddbb .Reader .PageList [_afagd ];field .P =_ceba .ToPdfObject ();
if field .T ==nil ||field .T .String ()==""{field .T =_gb .MakeString (_b .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_ceba .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _ddbb ._fbc ==_ddbb ._ddda .AcroForm {_ddbb ._fbc =_ddbb .Reader .AcroForm ;
};_gcge :=_ddbb ._fbc ;if _gcge ==nil {_gcge =NewPdfAcroForm ();};_gcge .SigFlags =_gb .MakeInteger (3);_bgcg :=append (_gcge .AllFields (),field .PdfField );_gcge .Fields =&_bgcg ;_ddbb .ReplaceAcroForm (_gcge );_ddbb .UpdatePage (_ceba );_ddbb ._bcabf [_afagd ]=_ceba ;
return nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_dada *PdfPageResources )ToPdfObject ()_gb .PdfObject {_affbf :=_dada ._aecba ;_affbf .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dada .ExtGState );if _dada ._fabgf !=nil {_dada .ColorSpace =_dada ._fabgf .ToPdfObject ();};_affbf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dada .ColorSpace );
_affbf .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_dada .Pattern );_affbf .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dada .Shading );_affbf .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_dada .XObject );_affbf .SetIfNotNil ("\u0046\u006f\u006e\u0074",_dada .Font );
_affbf .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_dada .ProcSet );_affbf .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_dada .Properties );return _affbf ;};func _fdacg (_bdcdf []*_gb .PdfObjectStream )*_gb .PdfObjectArray {if len (_bdcdf )==0{return nil ;
};_ceegc :=make ([]_gb .PdfObject ,0,len (_bdcdf ));for _ ,_bbgfe :=range _bdcdf {_ceegc =append (_ceegc ,_bbgfe );};return _gb .MakeArray (_ceegc ...);};

// AllFields returns a flattened list of all fields in the form.
func (_aageg *PdfAcroForm )AllFields ()[]*PdfField {if _aageg ==nil {return nil ;};var _eabgd []*PdfField ;if _aageg .Fields !=nil {for _ ,_ecgfa :=range *_aageg .Fields {_eabgd =append (_eabgd ,_abdad (_ecgfa )...);};};return _eabgd ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_aed *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func _fggg (_dccce _gb .PdfObject )(*PdfPageResourcesColorspaces ,error ){_eaeeg :=&PdfPageResourcesColorspaces {};if _caccg ,_agfdc :=_dccce .(*_gb .PdfIndirectObject );
_agfdc {_eaeeg ._fead =_caccg ;_dccce =_caccg .PdfObject ;};_fdgg ,_ddbgc :=_gb .GetDict (_dccce );if !_ddbgc {return nil ,_ga .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_eaeeg .Names =[]string {};_eaeeg .Colorspaces =map[string ]PdfColorspace {};for _ ,_abafb :=range _fdgg .Keys (){_bdeee :=_fdgg .Get (_abafb );_eaeeg .Names =append (_eaeeg .Names ,string (_abafb ));_efcac ,_aecd :=NewPdfColorspaceFromPdfObject (_bdeee );
if _aecd !=nil {return nil ,_aecd ;};_eaeeg .Colorspaces [string (_abafb )]=_efcac ;};return _eaeeg ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_bdbd *PdfFont )CharcodesToUnicode (charcodes []_fed .CharCode )[]rune {_bdfdf ,_ ,_ :=_bdbd .CharcodesToUnicodeWithStats (charcodes );return _bdfdf ;};

// GetNumPages returns the number of pages in the document.
func (_bcfbf *PdfReader )GetNumPages ()(int ,error ){if _bcfbf ._gedb .GetCrypter ()!=nil &&!_bcfbf ._gedb .IsAuthenticated (){return 0,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_bcfbf ._aegfg ),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_geac *PdfColorspaceLab )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_geag ,_ffdc :=_gb .GetNumbersAsFloat (objects );
if _ffdc !=nil {return nil ,_ffdc ;};return _geac .ColorFromFloats (_geag );};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_ebdf :=map[rune ]int {};for _ ,_ebfaf :=range text {_ebdf [_ebfaf ]++;};return _ebdf ;};func _dbag (_fecc *_gb .PdfIndirectObject ,_adgab *_gb .PdfObjectDictionary )(*DSS ,error ){if _fecc ==nil {_fecc =_gb .MakeIndirectObject (nil );
};_fecc .PdfObject =_gb .MakeDict ();_bdagb :=map[string ]*VRI {};if _dceec ,_bbdde :=_gb .GetDict (_adgab .Get ("\u0056\u0052\u0049"));_bbdde {for _ ,_aacf :=range _dceec .Keys (){if _febc ,_cacgf :=_gb .GetDict (_dceec .Get (_aacf ));_cacgf {_bdagb [_fd .ToUpper (_aacf .String ())]=_eade (_febc );
};};};return &DSS {Certs :_egag (_adgab .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_egag (_adgab .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_egag (_adgab .Get ("\u0043\u0052\u004c\u0073")),VRI :_bdagb ,_dbdegb :_fecc },nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _gb .PdfObject ;};var _aaedf =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_dbdb :=NewPdfAnnotation ();_ggac :=&PdfAnnotationLink {};_ggac .PdfAnnotation =_dbdb ;_dbdb .SetContext (_ggac );return _ggac ;};

// SetImage updates XObject Image with new image data.
func (_agcbg *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_agcbg .Filter .UpdateParams (img .GetParamsDict ());_agdff ,_cgffc :=_agcbg .Filter .EncodeBytes (img .Data );if _cgffc !=nil {return _cgffc ;};_agcbg .Stream =_agdff ;_bbddeb :=img .Width ;
_agcbg .Width =&_bbddeb ;_fbbdb :=img .Height ;_agcbg .Height =&_fbbdb ;_ebgbge :=img .BitsPerComponent ;_agcbg .BitsPerComponent =&_ebgbge ;if cs ==nil {if img .ColorComponents ==1{_agcbg .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_agcbg .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_agcbg .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ga .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_agcbg .ColorSpace =cs ;};return nil ;
};func (_feea *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ea .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ea .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ea .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_aaaed *PdfAppender ;_egce *DSS ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_dcfd *PdfColorCalRGB )GetNumComponents ()int {return 3};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_cfba *LTV )EnableChain (chain []*_g .Certificate )error {return _cfba .enable (nil ,chain ,"")};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_gd :=NewPdfAction ();_bece :=&PdfActionLaunch {};_bece .PdfAction =_gd ;_gd .SetContext (_bece );return _bece ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_gfbe :=NewPdfAnnotation ();_gaff :=&PdfAnnotationSquiggly {};_gaff .PdfAnnotation =_gfbe ;_gaff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfbe .SetContext (_gaff );return _gaff ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_bbaa FieldFlag )Has (fl FieldFlag )bool {return (_bbaa .Mask ()&fl .Mask ())> 0};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_gaeefe :=&XObjectForm {};_dbeg :=&_gb .PdfObjectStream {};_dbeg .PdfObjectDictionary =_gb .MakeDict ();_gaeefe ._fadf =_dbeg ;return _gaeefe ;};

// Val returns the value of the color.
func (_cgdde *PdfColorCalGray )Val ()float64 {return float64 (*_cgdde )};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gbcf pdfCIDFontType0 )GetCharMetrics (code _fed .CharCode )(_ad .CharMetrics ,bool ){_deace :=_gbcf ._beda ;if _egad ,_abcaf :=_gbcf ._dacag [code ];_abcaf {_deace =_egad ;};return _ad .CharMetrics {Wx :_deace },true ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;func _egag (_edfgg _gb .PdfObject )[]*_gb .PdfObjectStream {if _edfgg ==nil {return nil ;};_gaeef ,_eaagb :=_gb .GetArray (_edfgg );if !_eaagb ||_gaeef .Len ()==0{return nil ;};_eebdc :=make ([]*_gb .PdfObjectStream ,0,_gaeef .Len ());
for _ ,_defg :=range _gaeef .Elements (){if _agfgf ,_aecfc :=_gb .GetStream (_defg );_aecfc {_eebdc =append (_eebdc ,_agfgf );};};return _eebdc ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_aaggb *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _aaggb .baseFields ()._fcgcf !=nil {return _aaggb .baseFields ()._fcgcf ;};if _gbbdd :=_aaggb ._cbab .getFontDescriptor ();_gbbdd !=nil {return _gbbdd ;};_dgf .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_aaggb );
return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbad *PdfAnnotationTrapNet )ToPdfObject ()_gb .PdfObject {_dbad .PdfAnnotation .ToPdfObject ();_ffbd :=_dbad ._dccf ;_faffg :=_ffbd .PdfObject .(*_gb .PdfObjectDictionary );_faffg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ffbd ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _f .Time ){_cgdc .Lock ();defer _cgdc .Unlock ();_gdfccc =creationDate ;};

// B returns the value of the B component of the color.
func (_ddbf *PdfColorLab )B ()float64 {return _ddbf [2]};func (_gcdce *LTV )getCerts (_faddc []*_g .Certificate )([][]byte ,error ){_gdee :=make ([][]byte ,0,len (_faddc ));for _ ,_aegga :=range _faddc {_gdee =append (_gdee ,_aegga .Raw );};return _gdee ,nil ;
};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _gb .PdfObject ;FontFamily _gb .PdfObject ;FontStretch _gb .PdfObject ;FontWeight _gb .PdfObject ;Flags _gb .PdfObject ;FontBBox _gb .PdfObject ;ItalicAngle _gb .PdfObject ;Ascent _gb .PdfObject ;Descent _gb .PdfObject ;
Leading _gb .PdfObject ;CapHeight _gb .PdfObject ;XHeight _gb .PdfObject ;StemV _gb .PdfObject ;StemH _gb .PdfObject ;AvgWidth _gb .PdfObject ;MaxWidth _gb .PdfObject ;MissingWidth _gb .PdfObject ;FontFile _gb .PdfObject ;FontFile2 _gb .PdfObject ;FontFile3 _gb .PdfObject ;
CharSet _gb .PdfObject ;_gbgge int ;_gabd float64 ;*fontFile ;_dbcbc *_ad .TtfType ;

// Additional entries for CIDFonts
Style _gb .PdfObject ;Lang _gb .PdfObject ;FD _gb .PdfObject ;CIDSet _gb .PdfObject ;_cbde *_gb .PdfIndirectObject ;};

// SetFlag sets the flag for the field.
func (_fbfd *PdfField )SetFlag (flag FieldFlag ){_fbfd .Ff =_gb .MakeInteger (int64 (flag ))};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gecd :=&PdfColorspaceCalRGB {};_gecd .BlackPoint =[]float64 {0.0,0.0,0.0};_gecd .Gamma =[]float64 {1.0,1.0,1.0};_gecd .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gecd ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_edae *Image )ToJBIG2Image ()(*_gb .JBIG2Image ,error ){_eeee ,_dbdaf :=_edae .ToGoImage ();if _dbdaf !=nil {return nil ,_dbdaf ;};return _gb .GoImageToJBIG2 (_eeee ,_gb .JB2ImageAutoThreshold );};

// ToPdfObject implements interface PdfModel.
func (_ddaf *PdfAnnotation3D )ToPdfObject ()_gb .PdfObject {_ddaf .PdfAnnotation .ToPdfObject ();_bgf :=_ddaf ._dccf ;_edd :=_bgf .PdfObject .(*_gb .PdfObjectDictionary );_edd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0033\u0044"));
_edd .SetIfNotNil ("\u0033\u0044\u0044",_ddaf .T3DD );_edd .SetIfNotNil ("\u0033\u0044\u0056",_ddaf .T3DV );_edd .SetIfNotNil ("\u0033\u0044\u0041",_ddaf .T3DA );_edd .SetIfNotNil ("\u0033\u0044\u0049",_ddaf .T3DI );_edd .SetIfNotNil ("\u0033\u0044\u0042",_ddaf .T3DB );
return _bgf ;};func (_adgb *pdfFontSimple )getFontEncoding ()(_gadf string ,_ebdd map[_fed .CharCode ]_fed .GlyphName ,_gddf error ){_gadf ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _ebda ,_ddgf :=_aaedf [_adgb ._ebadb ];
_ddgf {_gadf =_ebda ;}else if _adgb .fontFlags ()&_dafg !=0{for _ccdae ,_abeg :=range _aaedf {if _fd .Contains (_adgb ._ebadb ,_ccdae ){_gadf =_abeg ;break ;};};};if _adgb .Encoding ==nil {return _gadf ,nil ,nil ;};switch _adgad :=_adgb .Encoding .(type ){case *_gb .PdfObjectName :return string (*_adgad ),nil ,nil ;
case *_gb .PdfObjectDictionary :_gddea ,_afagde :=_gb .GetName (_adgad .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _afagde {_gadf =_gddea .String ();};if _bafaa :=_adgad .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_bafaa !=nil {_eeedc ,_cdfc :=_gb .GetArray (_bafaa );if !_cdfc {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_adgad ,_adgad .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_gb .ErrTypeError ;};_ebdd ,_gddf =_fed .FromFontDifferences (_eeedc );};return _gadf ,_ebdd ,_gddf ;default:_dgf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_adgb .Encoding ,_adgb .Encoding );
return "",nil ,_gb .ErrTypeError ;};};func (_dbfadg *PdfPage )setContainer (_afge *_gb .PdfIndirectObject ){_afge .PdfObject =_dbfadg ._gaec ;_dbfadg ._gggeb =_afge ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dded ,_ecadb :=_fb .Open (filePath );if _ecadb !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ecadb );
return nil ,_ecadb ;};defer _dded .Close ();return NewCompositePdfFontFromTTF (_dded );};type modelManager struct{_daeg map[PdfModel ]_gb .PdfObject ;_dbfgg map[_gb .PdfObject ]PdfModel ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bage *PdfColorspaceSpecialPattern )ToPdfObject ()_gb .PdfObject {if _bage .UnderlyingCS ==nil {return _gb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_dedg :=_gb .MakeArray (_gb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_dedg .Append (_bage .UnderlyingCS .ToPdfObject ());
if _bage ._dfbd !=nil {_bage ._dfbd .PdfObject =_dedg ;return _bage ._dfbd ;};return _dedg ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_ceaef *PdfPage )GetPageAsIndirectObject ()*_gb .PdfIndirectObject {return _ceaef ._gggeb };

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_fcbb *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_bafe :=_cag .NewReader (img .getBase ());_ceac :=_fe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gbcbf :=_cag .NewWriter (_ceac );
_fee :=_fg .Pow (2,float64 (img .BitsPerComponent ))-1;_fafe :=make ([]uint32 ,3);var (_gfge error ;_cgfc ,_abcf ,_bga ,_eada ,_gbbd ,_aagg float64 ;);for {_gfge =_bafe .ReadSamples (_fafe );if _gfge ==_cf .EOF {break ;}else if _gfge !=nil {return img ,_gfge ;
};_cgfc =float64 (_fafe [0])/_fee ;_abcf =float64 (_fafe [1])/_fee ;_bga =float64 (_fafe [2])/_fee ;_eada =_fcbb .Matrix [0]*_fg .Pow (_cgfc ,_fcbb .Gamma [0])+_fcbb .Matrix [3]*_fg .Pow (_abcf ,_fcbb .Gamma [1])+_fcbb .Matrix [6]*_fg .Pow (_bga ,_fcbb .Gamma [2]);
_gbbd =_fcbb .Matrix [1]*_fg .Pow (_cgfc ,_fcbb .Gamma [0])+_fcbb .Matrix [4]*_fg .Pow (_abcf ,_fcbb .Gamma [1])+_fcbb .Matrix [7]*_fg .Pow (_bga ,_fcbb .Gamma [2]);_aagg =_fcbb .Matrix [2]*_fg .Pow (_cgfc ,_fcbb .Gamma [0])+_fcbb .Matrix [5]*_fg .Pow (_abcf ,_fcbb .Gamma [1])+_fcbb .Matrix [8]*_fg .Pow (_bga ,_fcbb .Gamma [2]);
_cgfc =3.240479*_eada +-1.537150*_gbbd +-0.498535*_aagg ;_abcf =-0.969256*_eada +1.875992*_gbbd +0.041556*_aagg ;_bga =0.055648*_eada +-0.204043*_gbbd +1.057311*_aagg ;_cgfc =_fg .Min (_fg .Max (_cgfc ,0),1.0);_abcf =_fg .Min (_fg .Max (_abcf ,0),1.0);
_bga =_fg .Min (_fg .Max (_bga ,0),1.0);_fafe [0]=uint32 (_cgfc *_fee );_fafe [1]=uint32 (_abcf *_fee );_fafe [2]=uint32 (_bga *_fee );if _gfge =_gbcbf .WriteSamples (_fafe );_gfge !=nil {return img ,_gfge ;};};return _aecb (&_ceac ),nil ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_egfgcc *PdfWriter )SetPageLabels (pageLabels _gb .PdfObject )error {if pageLabels ==nil {return nil ;};_dgf .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_egfgcc ._dfcaf .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _egfgcc .addObjects (pageLabels );};func _dacgf (_egcd *XObjectImage )error {if _egcd .SMask ==nil {return nil ;};_fbeed ,_fcbg :=_egcd .SMask .(*_gb .PdfObjectStream );
if !_fcbg {_dgf .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _gb .ErrTypeError ;};_adddf :=_fbeed .PdfObjectDictionary ;
_egadg :=_adddf .Get ("\u004d\u0061\u0074t\u0065");if _egadg ==nil {return nil ;};_ddbfae ,_dbcff :=_deacea (_egadg .(*_gb .PdfObjectArray ));if _dbcff !=nil {return _dbcff ;};_abfeg :=_gb .MakeArrayFromFloats ([]float64 {_ddbfae });_adddf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_abfeg );
return nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_ddbdd *Outline )Insert (index uint ,item *OutlineItem ){_cgeac :=uint (len (_ddbdd .Entries ));if index > _cgeac {index =_cgeac ;};_ddbdd .Entries =append (_ddbdd .Entries [:index ],append ([]*OutlineItem {item },_ddbdd .Entries [index :]...)...);
};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_fdc :=NewPdfAnnotation ();_ecg :=&PdfAnnotationLine {};_ecg .PdfAnnotation =_fdc ;_ecg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdc .SetContext (_ecg );return _ecg ;};func _fdafb (_efaad []byte )([]byte ,error ){_abbgeg :=_cg .New ();
if _ ,_ceege :=_cf .Copy (_abbgeg ,_bed .NewReader (_efaad ));_ceege !=nil {return nil ,_ceege ;};return _abbgeg .Sum (nil ),nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);
FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);
FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);
FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// ToPdfObject implements interface PdfModel.
func (_bbg *PdfAnnotationMovie )ToPdfObject ()_gb .PdfObject {_bbg .PdfAnnotation .ToPdfObject ();_cggg :=_bbg ._dccf ;_adec :=_cggg .PdfObject .(*_gb .PdfObjectDictionary );_adec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u004d\u006f\u0076i\u0065"));
_adec .SetIfNotNil ("\u0054",_bbg .T );_adec .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_bbg .Movie );_adec .SetIfNotNil ("\u0041",_bbg .A );return _cggg ;};func (_baf *PdfReader )newPdfActionGotoFromDict (_gcc *_gb .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_gcc .Get ("\u0044")},nil ;
};type pdfCIDFontType2 struct{fontCommon ;_acdb *_gb .PdfIndirectObject ;_agca _fed .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_gb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gb .PdfObject ;W _gb .PdfObject ;DW2 _gb .PdfObject ;W2 _gb .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _gb .PdfObject ;_fbdg map[_fed .CharCode ]float64 ;_aebcb float64 ;_dfcb map[rune ]int ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_adebb *PdfPageResources )SetPatternByName (keyName _gb .PdfObjectName ,pattern _gb .PdfObject )error {if _adebb .Pattern ==nil {_adebb .Pattern =_gb .MakeDict ();};_aabac ,_aaegd :=_adebb .Pattern .(*_gb .PdfObjectDictionary );if !_aaegd {return _gb .ErrTypeError ;
};_aabac .Set (keyName ,pattern );return nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_bbec *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ga .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_fdcg ,_addce :=_fe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abecg ,img ._ggcdd );if _addce !=nil {return img ,_addce ;};_aeaf ,_addce :=_fe .GrayConverter .Convert (_fdcg );if _addce !=nil {return img ,_addce ;
};return _aecb (_aeaf .Base ()),nil ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_cffdb *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_dbbea ,_dffc :=color .(*PdfColorDeviceCMYK );if !_dffc {_dgf .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fbb :=_dbbea .C ();_aaef :=_dbbea .M ();_abdf :=_dbbea .Y ();_ddfd :=_dbbea .K ();_fbb =_fbb *(1-_ddfd )+_ddfd ;_aaef =_aaef *(1-_ddfd )+_ddfd ;
_abdf =_abdf *(1-_ddfd )+_ddfd ;_ecaa :=1-_fbb ;_eeec :=1-_aaef ;_gce :=1-_abdf ;return NewPdfColorDeviceRGB (_ecaa ,_eeec ,_gce ),nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_afgb *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_facfe :=vals [0];if _facfe < 0.0||_facfe > 1.0{_dgf .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _facfe < 0.0{_facfe =0.0;}else if _facfe > 1.0{_facfe =1.0;};return NewPdfColorDeviceGray (_facfe ),nil ;};func (_cfdde *Image )resampleLowBits (_afbd []uint32 ){_aeaec :=_fe .BytesPerLine (int (_cfdde .Width ),int (_cfdde .BitsPerComponent ),_cfdde .ColorComponents );
_dcdgb :=make ([]byte ,_cfdde .ColorComponents *_aeaec *int (_cfdde .Height ));_afabf :=int (_cfdde .BitsPerComponent )*_cfdde .ColorComponents *int (_cfdde .Width );_egaca :=uint8 (8);var (_aegf ,_ebbf int ;_gdbga uint32 ;);for _gagf :=0;_gagf < int (_cfdde .Height );
_gagf ++{_ebbf =_gagf *_aeaec ;for _baca :=0;_baca < _afabf ;_baca ++{_gdbga =_afbd [_aegf ];_egaca -=uint8 (_cfdde .BitsPerComponent );_dcdgb [_ebbf ]|=byte (_gdbga )<<_egaca ;if _egaca ==0{_egaca =8;_ebbf ++;};_aegf ++;};};_cfdde .Data =_dcdgb ;};func (_edda *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};


// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_bbbcd *Image )SetSamples (samples []uint32 ){if _bbbcd .BitsPerComponent < 8{samples =_bbbcd .samplesAddPadding (samples );};_fbcf :=_cag .ResampleUint32 (samples ,int (_bbbcd .BitsPerComponent ),8);_eecb :=make ([]byte ,len (_fbcf ));for _feabb ,_cbeca :=range _fbcf {_eecb [_feabb ]=byte (_cbeca );
};_bbbcd .Data =_eecb ;};

// ToPdfObject implements interface PdfModel.
func (_adaa *PdfAnnotationSquare )ToPdfObject ()_gb .PdfObject {_adaa .PdfAnnotation .ToPdfObject ();_ebge :=_adaa ._dccf ;_agbee :=_ebge .PdfObject .(*_gb .PdfObjectDictionary );if _adaa .PdfAnnotationMarkup !=nil {_adaa .PdfAnnotationMarkup .appendToPdfDictionary (_agbee );
};_agbee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_agbee .SetIfNotNil ("\u0042\u0053",_adaa .BS );_agbee .SetIfNotNil ("\u0049\u0043",_adaa .IC );_agbee .SetIfNotNil ("\u0042\u0045",_adaa .BE );
_agbee .SetIfNotNil ("\u0052\u0044",_adaa .RD );return _ebge ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_fga :=NewPdfAction ();_dcg :=&PdfActionThread {};_dcg .PdfAction =_fga ;_fga .SetContext (_dcg );return _dcg ;};func (_cdbc *PdfReader )newPdfAnnotationSoundFromDict (_gfe *_gb .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_efb :=PdfAnnotationSound {};
_bceb ,_aabc :=_cdbc .newPdfAnnotationMarkupFromDict (_gfe );if _aabc !=nil {return nil ,_aabc ;};_efb .PdfAnnotationMarkup =_bceb ;_efb .Name =_gfe .Get ("\u004e\u0061\u006d\u0065");_efb .Sound =_gfe .Get ("\u0053\u006f\u0075n\u0064");return &_efb ,nil ;
};func _cbcfg (_ababd *_gb .PdfObjectDictionary )(*PdfShadingType5 ,error ){_beea :=PdfShadingType5 {};_effc :=_ababd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _effc ==nil {_dgf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_beacc ,_bcede :=_effc .(*_gb .PdfObjectInteger );if !_bcede {_dgf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_effc );
return nil ,_gb .ErrTypeError ;};_beea .BitsPerCoordinate =_beacc ;_effc =_ababd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _effc ==nil {_dgf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_beacc ,_bcede =_effc .(*_gb .PdfObjectInteger );if !_bcede {_dgf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_effc );
return nil ,_gb .ErrTypeError ;};_beea .BitsPerComponent =_beacc ;_effc =_ababd .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _effc ==nil {_dgf .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_beacc ,_bcede =_effc .(*_gb .PdfObjectInteger );if !_bcede {_dgf .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_effc );
return nil ,_gb .ErrTypeError ;};_beea .VerticesPerRow =_beacc ;_effc =_ababd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _effc ==nil {_dgf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bcggg ,_bcede :=_effc .(*_gb .PdfObjectArray );if !_bcede {_dgf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_effc );
return nil ,_gb .ErrTypeError ;};_beea .Decode =_bcggg ;if _eaaae :=_ababd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eaaae !=nil {_beea .Function =[]PdfFunction {};if _cdeec ,_fbfcbg :=_eaaae .(*_gb .PdfObjectArray );_fbfcbg {for _ ,_dfbff :=range _cdeec .Elements (){_fbfaca ,_bgeb :=_ceagc (_dfbff );
if _bgeb !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgeb );return nil ,_bgeb ;};_beea .Function =append (_beea .Function ,_fbfaca );
};}else {_bbbcf ,_egebg :=_ceagc (_eaaae );if _egebg !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egebg );return nil ,_egebg ;
};_beea .Function =append (_beea .Function ,_bbbcf );};};return &_beea ,nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_cceb *PdfPage )AddContentStreamByString (contentStr string )error {_gcgd ,_gfdb :=_gb .MakeStream ([]byte (contentStr ),_gb .NewFlateEncoder ());if _gfdb !=nil {return _gfdb ;};if _cceb .Contents ==nil {_cceb .Contents =_gcgd ;}else {_becac :=_gb .TraceToDirectObject (_cceb .Contents );
_ccab ,_gbded :=_becac .(*_gb .PdfObjectArray );if !_gbded {_ccab =_gb .MakeArray (_becac );};_ccab .Append (_gcgd );_cceb .Contents =_ccab ;};return nil ;};func (_fbacc *pdfFontSimple )baseFields ()*fontCommon {return &_fbacc .fontCommon };

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_eaffed *XObjectImage )SetFilter (encoder _gb .StreamEncoder )error {_eaefea :=_eaffed .Stream ;_cbaa ,_dgabgbb :=_eaffed .Filter .DecodeBytes (_eaefea );if _dgabgbb !=nil {return _dgabgbb ;};_eaffed .Filter =encoder ;encoder .UpdateParams (_eaffed .getParamsDict ());
_eaefea ,_dgabgbb =encoder .EncodeBytes (_cbaa );if _dgabgbb !=nil {return _dgabgbb ;};_eaffed .Stream =_eaefea ;return nil ;};type pdfFontType0 struct{fontCommon ;_ffce *_gb .PdfIndirectObject ;_bdde _fed .TextEncoder ;Encoding _gb .PdfObject ;DescendantFont *PdfFont ;
_cdab *_de .CMap ;};func (_fefdd *PdfReader )flattenFieldsWithOpts (_cbce bool ,_ggeb FieldAppearanceGenerator ,_gfddd *FieldFlattenOpts )error {if _gfddd ==nil {_gfddd =&FieldFlattenOpts {};};var _bdceb bool ;_afcde :=map[*PdfAnnotation ]bool {};{var _fffa []*PdfField ;
_gbbga :=_fefdd .AcroForm ;if _gbbga !=nil {if _gfddd .FilterFunc !=nil {_fffa =_gbbga .filteredFields (_gfddd .FilterFunc ,true );_bdceb =_gbbga .Fields !=nil &&len (*_gbbga .Fields )> 0;}else {_fffa =_gbbga .AllFields ();};};for _ ,_cdcda :=range _fffa {for _ ,_ecbe :=range _cdcda .Annotations {_afcde [_ecbe .PdfAnnotation ]=_cdcda .V !=nil ;
if _ggeb !=nil {_abeff ,_bddb :=_ggeb .GenerateAppearanceDict (_gbbga ,_cdcda ,_ecbe );if _bddb !=nil {return _bddb ;};_ecbe .AP =_abeff ;};};};};if _cbce {for _ ,_efeb :=range _fefdd .PageList {_befc ,_fcagf :=_efeb .GetAnnotations ();if _fcagf !=nil {return _fcagf ;
};for _ ,_bedg :=range _befc {_afcde [_bedg ]=true ;};};};for _ ,_afgbc :=range _fefdd .PageList {var _dced []*PdfAnnotation ;if _ggeb !=nil {if _bdfd :=_ggeb .WrapContentStream (_afgbc );_bdfd !=nil {return _bdfd ;};};_ccecb ,_bcgb :=_afgbc .GetAnnotations ();
if _bcgb !=nil {return _bcgb ;};for _ ,_cfdca :=range _ccecb {_dggfe ,_efbc :=_afcde [_cfdca ];if !_efbc &&_gfddd .AnnotFilterFunc !=nil {if _ ,_eeeb :=_cfdca .GetContext ().(*PdfAnnotationWidget );!_eeeb {_efbc =_gfddd .AnnotFilterFunc (_cfdca );};};if !_efbc {_dced =append (_dced ,_cfdca );
continue ;};switch _cfdca .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_aefc ,_gdae ,_bgb :=_fgfdg (_cfdca );if _bgb !=nil {if !_dggfe {_dgf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_bgb );
continue ;};if _aefc ==nil {continue ;};_acgc :=_afgbc .Resources .GenerateXObjectName ();_afgbc .Resources .SetXObjectFormByName (_acgc ,_aefc );_bfbc :=_fg .Min (_gdae .Llx ,_gdae .Urx );_dbbdb :=_fg .Min (_gdae .Lly ,_gdae .Ury );var _fdbf []string ;
_fdbf =append (_fdbf ,"\u0071");_fdbf =append (_fdbf ,_b .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_bfbc ,_dbbdb ));
_fdbf =append (_fdbf ,_b .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_acgc .String ()));_fdbf =append (_fdbf ,"\u0051");_accdb :=_fd .Join (_fdbf ,"\u000a");_bgb =_afgbc .AppendContentStream (_accdb );if _bgb !=nil {return _bgb ;};if _aefc .Resources !=nil {_feeaa ,_dgggc :=_gb .GetDict (_aefc .Resources .Font );
if _dgggc {for _ ,_dgaa :=range _feeaa .Keys (){if !_afgbc .Resources .HasFontByName (_dgaa ){_afgbc .Resources .SetFontByName (_dgaa ,_feeaa .Get (_dgaa ));};};};};};if len (_dced )> 0{_afgbc ._cafdf =_dced ;}else {_afgbc ._cafdf =[]*PdfAnnotation {};
};};if !_bdceb {_fefdd .AcroForm =nil ;};return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_caeec *PdfShadingType6 )ToPdfObject ()_gb .PdfObject {_caeec .PdfShading .ToPdfObject ();_efcffe ,_ebaef :=_caeec .getShadingDict ();if _ebaef !=nil {_dgf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _caeec .BitsPerCoordinate !=nil {_efcffe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_caeec .BitsPerCoordinate );};if _caeec .BitsPerComponent !=nil {_efcffe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_caeec .BitsPerComponent );
};if _caeec .BitsPerFlag !=nil {_efcffe .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_caeec .BitsPerFlag );};if _caeec .Decode !=nil {_efcffe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_caeec .Decode );};if _caeec .Function !=nil {if len (_caeec .Function )==1{_efcffe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_caeec .Function [0].ToPdfObject ());
}else {_egfac :=_gb .MakeArray ();for _ ,_bfbg :=range _caeec .Function {_egfac .Append (_bfbg .ToPdfObject ());};_efcffe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egfac );};};return _caeec ._gccef ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _gb .PdfObject ;BS _gb .PdfObject ;LE _gb .PdfObject ;IC _gb .PdfObject ;LL _gb .PdfObject ;LLE _gb .PdfObject ;Cap _gb .PdfObject ;IT _gb .PdfObject ;LLO _gb .PdfObject ;CP _gb .PdfObject ;
Measure _gb .PdfObject ;CO _gb .PdfObject ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fgde *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dgf .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ga .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// StdFontName represents name of a standard font.
type StdFontName =_ad .StdFontName ;

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_ggdfb *PdfPageResourcesColorspaces )Set (key _gb .PdfObjectName ,val PdfColorspace ){if _ ,_fdbfb :=_ggdfb .Colorspaces [string (key )];!_fdbfb {_ggdfb .Names =append (_ggdfb .Names ,string (key ));};_ggdfb .Colorspaces [string (key )]=val ;};func (_bbga *LTV )getOCSPs (_gbbaa []*_g .Certificate ,_abga map[string ]*_g .Certificate )([][]byte ,error ){_eggfb :=make ([][]byte ,0,len (_gbbaa ));
for _ ,_ccdag :=range _gbbaa {for _ ,_fbcfg :=range _ccdag .OCSPServer {if _bbga .CertClient .IsCA (_ccdag ){continue ;};_fedae ,_gegf :=_abga [_ccdag .Issuer .CommonName ];if !_gegf {_dgf .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_cbfb ,_bcfd :=_bbga .OCSPClient .MakeRequest (_fbcfg ,_ccdag ,_fedae );if _bcfd !=nil {_dgf .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_bcfd );
continue ;};_eggfb =append (_eggfb ,_cbfb );};};return _eggfb ,nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_ecdg *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _ecdg .Alternate ==nil {_dgf .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ecdg .N ==1{_dgf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_abab :=NewPdfColorspaceDeviceGray ();return _abab .ImageToRGB (img );}else if _ecdg .N ==3{_dgf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _ecdg .N ==4{_dgf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_cdgd :=NewPdfColorspaceDeviceCMYK ();return _cdgd .ImageToRGB (img );}else {return img ,_ga .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dgf .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ecdg );
_dgfbe ,_cfdfe :=_ecdg .Alternate .ImageToRGB (img );_dgf .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_dgf .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_dgfbe );
return _dgfbe ,_cfdfe ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_cadd :=&PdfColorspaceLab {};_cadd .BlackPoint =[]float64 {0.0,0.0,0.0};_cadd .Range =[]float64 {-100,100,-100,100};return _cadd ;};

// C returns the value of the cyan component of the color.
func (_bddf *PdfColorDeviceCMYK )C ()float64 {return _bddf [0]};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func (_ecbf *PdfReader )newPdfAnnotationPopupFromDict (_fge *_gb .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_eecf :=PdfAnnotationPopup {};_eecf .Parent =_fge .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_eecf .Open =_fge .Get ("\u004f\u0070\u0065\u006e");return &_eecf ,nil ;};

// ToInteger convert to an integer format.
func (_bdcb *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gcgc :=_fg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gcgc *_bdcb .R ()),uint32 (_gcgc *_bdcb .G ()),uint32 (_gcgc *_bdcb .B ())};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_baeff *PdfShading )ToPdfObject ()_gb .PdfObject {_eeag :=_baeff ._gccef ;_gfaecd ,_adba :=_baeff .getShadingDict ();if _adba !=nil {_dgf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _baeff .ShadingType !=nil {_gfaecd .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_baeff .ShadingType );};if _baeff .ColorSpace !=nil {_gfaecd .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_baeff .ColorSpace .ToPdfObject ());
};if _baeff .Background !=nil {_gfaecd .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_baeff .Background );};if _baeff .BBox !=nil {_gfaecd .Set ("\u0042\u0042\u006f\u0078",_baeff .BBox .ToPdfObject ());};if _baeff .AntiAlias !=nil {_gfaecd .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_baeff .AntiAlias );
};return _eeag ;};

// IsColored specifies if the pattern is colored.
func (_efcad *PdfTilingPattern )IsColored ()bool {if _efcad .PaintType !=nil &&*_efcad .PaintType ==1{return true ;};return false ;};func (_dbgfbd *PdfReader )buildPageList (_eaffef *_gb .PdfIndirectObject ,_fecd *_gb .PdfIndirectObject ,_gfcaa map[_gb .PdfObject ]struct{})error {if _eaffef ==nil {return nil ;
};if _ ,_bdbb :=_gfcaa [_eaffef ];_bdbb {_dgf .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_eaffef .ObjectNumber );
return nil ;};_gfcaa [_eaffef ]=struct{}{};_gaebg ,_abcg :=_eaffef .PdfObject .(*_gb .PdfObjectDictionary );if !_abcg {return _ga .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_fabgd ,_abcg :=(*_gaebg ).Get ("\u0054\u0079\u0070\u0065").(*_gb .PdfObjectName );
if !_abcg {if _gaebg .Get ("\u004b\u0069\u0064\u0073")==nil {return _ga .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_dgf .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_fabgd =_gb .MakeName ("\u0050\u0061\u0067e\u0073");_gaebg .Set ("\u0054\u0079\u0070\u0065",_fabgd );};_dgf .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_fabgd ,_eaffef );
if *_fabgd =="\u0050\u0061\u0067\u0065"{_aafac ,_ecbee :=_dbgfbd .newPdfPageFromDict (_gaebg );if _ecbee !=nil {return _ecbee ;};_aafac .setContainer (_eaffef );if _fecd !=nil {_gaebg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fecd );};_dbgfbd ._aegfg =append (_dbgfbd ._aegfg ,_eaffef );
_dbgfbd .PageList =append (_dbgfbd .PageList ,_aafac );return nil ;};if *_fabgd !="\u0050\u0061\u0067e\u0073"{_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_fabgd );
return _ga .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _fecd !=nil {_gaebg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fecd );};if !_dbgfbd ._ggea {_fagc :=_dbgfbd .traverseObjectData (_eaffef );if _fagc !=nil {return _fagc ;};};_bgee ,_afbec :=_dbgfbd ._gedb .Resolve (_gaebg .Get ("\u004b\u0069\u0064\u0073"));
if _afbec !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _afbec ;};var _gcdee *_gb .PdfObjectArray ;
_gcdee ,_abcg =_bgee .(*_gb .PdfObjectArray );if !_abcg {_ddgdfa ,_ceggd :=_bgee .(*_gb .PdfIndirectObject );if !_ceggd {return _ga .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gcdee ,_abcg =_ddgdfa .PdfObject .(*_gb .PdfObjectArray );
if !_abcg {return _ga .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_dgf .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_gcdee );
for _fbgb ,_dbfbe :=range _gcdee .Elements (){_ceagb ,_bffcb :=_gb .GetIndirect (_dbfbe );if !_bffcb {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_ceagb );
return _ga .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gcdee .Set (_fbgb ,_ceagb );_afbec =_dbgfbd .buildPageList (_ceagb ,_eaffef ,_gfcaa );if _afbec !=nil {return _afbec ;
};};return nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func (_dfge *PdfReader )newPdfAnnotation3DFromDict (_gbed *_gb .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_ccc :=PdfAnnotation3D {};_ccc .T3DD =_gbed .Get ("\u0033\u0044\u0044");
_ccc .T3DV =_gbed .Get ("\u0033\u0044\u0056");_ccc .T3DA =_gbed .Get ("\u0033\u0044\u0041");_ccc .T3DI =_gbed .Get ("\u0033\u0044\u0049");_ccc .T3DB =_gbed .Get ("\u0033\u0044\u0042");return &_ccc ,nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_fcbca *PdfFont )BytesToCharcodes (data []byte )[]_fed .CharCode {_dgf .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _dfgd ,_acda :=_fcbca ._cbab .(*pdfFontType0 );_acda &&_dfgd ._cdab !=nil {if _ggffe ,_gfgad :=_dfgd .bytesToCharcodes (data );_gfgad {return _ggffe ;};};_ggfa :=make ([]_fed .CharCode ,0,len (data )+len (data )%2);if _fcbca .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _bcgg :=0;_bcgg < len (data );_bcgg +=2{_cbgf :=uint16 (data [_bcgg ])<<8|uint16 (data [_bcgg +1]);_ggfa =append (_ggfa ,_fed .CharCode (_cbgf ));};}else {for _ ,_feaad :=range data {_ggfa =append (_ggfa ,_fed .CharCode (_feaad ));
};};return _ggfa ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dbbf *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fafb ,_ccdg :=_gb .GetNumbersAsFloat (objects );
if _ccdg !=nil {return nil ,_ccdg ;};return _dbbf .ColorFromFloats (_fafb );};func (_geeg *XObjectImage )getParamsDict ()*_gb .PdfObjectDictionary {_fbgeb :=_gb .MakeDict ();_fbgeb .Set ("\u0057\u0069\u0064t\u0068",_gb .MakeInteger (*_geeg .Width ));_fbgeb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gb .MakeInteger (*_geeg .Height ));
_fbgeb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gb .MakeInteger (int64 (_geeg .ColorSpace .GetNumComponents ())));_fbgeb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gb .MakeInteger (*_geeg .BitsPerComponent ));
return _fbgeb ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_fcga *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func (_gfba *PdfReader )newPdfAnnotationLineFromDict (_fffb *_gb .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_aee :=PdfAnnotationLine {};_ega ,_gaag :=_gfba .newPdfAnnotationMarkupFromDict (_fffb );
if _gaag !=nil {return nil ,_gaag ;};_aee .PdfAnnotationMarkup =_ega ;_aee .L =_fffb .Get ("\u004c");_aee .BS =_fffb .Get ("\u0042\u0053");_aee .LE =_fffb .Get ("\u004c\u0045");_aee .IC =_fffb .Get ("\u0049\u0043");_aee .LL =_fffb .Get ("\u004c\u004c");
_aee .LLE =_fffb .Get ("\u004c\u004c\u0045");_aee .Cap =_fffb .Get ("\u0043\u0061\u0070");_aee .IT =_fffb .Get ("\u0049\u0054");_aee .LLO =_fffb .Get ("\u004c\u004c\u004f");_aee .CP =_fffb .Get ("\u0043\u0050");_aee .Measure =_fffb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_aee .CO =_fffb .Get ("\u0043\u004f");return &_aee ,nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_acbbf *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_egcfb ,_dcdbf :=color .(*PdfColorDeviceGray );if !_dcdbf {_dgf .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_egcfb ),float64 (*_egcfb ),float64 (*_egcfb )),nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_gb .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func (_bfcc *PdfReader )newPdfAcroFormFromDict (_cbabg *_gb .PdfIndirectObject ,_gega *_gb .PdfObjectDictionary )(*PdfAcroForm ,error ){_gcae :=NewPdfAcroForm ();
if _cbabg !=nil {_gcae ._efgec =_cbabg ;_cbabg .PdfObject =_gb .MakeDict ();};if _gbebg :=_gega .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_gbebg !=nil {_abbaf ,_egaf :=_gb .GetArray (_gbebg );if !_egaf {return nil ,_b .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_gbebg );
};var _bceba []*PdfField ;for _ ,_acfg :=range _abbaf .Elements (){_bfagd ,_caadd :=_gb .GetIndirect (_acfg );if !_caadd {if _ ,_dbga :=_acfg .(*_gb .PdfObjectNull );_dbga {_dgf .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_dgf .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_acfg );
return nil ,_b .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cdfeg ,_cgacb :=_bfcc .newPdfFieldFromIndirectObject (_bfagd ,nil );
if _cgacb !=nil {return nil ,_cgacb ;};_dgf .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_cdfeg );_bceba =append (_bceba ,_cdfeg );};_gcae .Fields =&_bceba ;};if _ddacf :=_gega .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_ddacf !=nil {_fade ,_bffa :=_gb .GetBool (_ddacf );if _bffa {_gcae .NeedAppearances =_fade ;}else {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ddacf );
};};if _dbeaf :=_gega .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_dbeaf !=nil {_gcbe ,_cadadb :=_gb .GetInt (_dbeaf );if _cadadb {_gcae .SigFlags =_gcbe ;}else {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbeaf );
};};if _edad :=_gega .Get ("\u0043\u004f");_edad !=nil {_daff ,_cccf :=_gb .GetArray (_edad );if _cccf {_gcae .CO =_daff ;}else {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_edad );
};};if _gcabf :=_gega .Get ("\u0044\u0052");_gcabf !=nil {if _caba ,_ffggf :=_gb .GetDict (_gcabf );_ffggf {_gedae ,_eabcc :=NewPdfPageResourcesFromDict (_caba );if _eabcc !=nil {_dgf .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_eabcc );
return nil ,_eabcc ;};_gcae .DR =_gedae ;}else {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gcabf );};};if _becfff :=_gega .Get ("\u0044\u0041");
_becfff !=nil {_egca ,_edecc :=_gb .GetString (_becfff );if _edecc {_gcae .DA =_egca ;}else {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_becfff );
};};if _fbga :=_gega .Get ("\u0051");_fbga !=nil {_ddbaab ,_bbcb :=_gb .GetInt (_fbga );if _bbcb {_gcae .Q =_ddbaab ;}else {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fbga );
};};if _ffaa :=_gega .Get ("\u0058\u0046\u0041");_ffaa !=nil {_gcae .XFA =_ffaa ;};_gcae .ToPdfObject ();return _gcae ,nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_ecaab :=&PdfFieldSignature {};_ecaab .PdfField =NewPdfField ();_ecaab .PdfField .SetContext (_ecaab );_ecaab .PdfAnnotationWidget =NewPdfAnnotationWidget ();_ecaab .PdfAnnotationWidget .SetContext (_ecaab );
_ecaab .PdfAnnotationWidget ._dccf =_ecaab .PdfField ._faea ;_ecaab .T =_gb .MakeString ("");_ecaab .F =_gb .MakeInteger (132);_ecaab .V =signature ;return _ecaab ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_agcd *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_fdcc *PdfReader )loadAction (_gaa _gb .PdfObject )(*PdfAction ,error ){if _edcc ,_addc :=_gb .GetIndirect (_gaa );_addc {_bbeb ,_eaee :=_fdcc .newPdfActionFromIndirectObject (_edcc );
if _eaee !=nil {return nil ,_eaee ;};return _bbeb ,nil ;}else if !_gb .IsNullObject (_gaa ){return nil ,_ga .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func (_cegg *PdfReader )loadDSS ()(*DSS ,error ){if _cegg ._gedb .GetCrypter ()!=nil &&!_cegg ._gedb .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ddcdb :=_cegg ._ggce .Get ("\u0044\u0053\u0053");if _ddcdb ==nil {return nil ,nil ;};_afbcf ,_ :=_gb .GetIndirect (_ddcdb );_ddcdb =_gb .TraceToDirectObject (_ddcdb );switch _beafa :=_ddcdb .(type ){case *_gb .PdfObjectNull :return nil ,nil ;case *_gb .PdfObjectDictionary :return _dbag (_afbcf ,_beafa );
};return nil ,_b .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_ddcdb );};func (_edagc *PdfField )inherit (_ebee func (*PdfField )bool )(bool ,error ){_ddbda :=map[*PdfField ]bool {};_bdab :=false ;
_efda :=_edagc ;for _efda !=nil {if _ ,_dfbf :=_ddbda [_efda ];_dfbf {return false ,_ga .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_afdg :=_ebee (_efda );if _afdg {_bdab =true ;break ;
};_ddbda [_efda ]=true ;_efda =_efda .Parent ;};return _bdab ,nil ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_deg :=NewPdfAction ();_df :=&PdfActionNamed {};_df .PdfAction =_deg ;_deg .SetContext (_df );return _df ;};

// ToPdfObject implements interface PdfModel.
func (_fgaa *PdfActionLaunch )ToPdfObject ()_gb .PdfObject {_fgaa .PdfAction .ToPdfObject ();_egcb :=_fgaa ._cd ;_dgea :=_egcb .PdfObject .(*_gb .PdfObjectDictionary );_dgea .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeLaunch )));if _fgaa .F !=nil {_dgea .Set ("\u0046",_fgaa .F .ToPdfObject ());
};_dgea .SetIfNotNil ("\u0057\u0069\u006e",_fgaa .Win );_dgea .SetIfNotNil ("\u004d\u0061\u0063",_fgaa .Mac );_dgea .SetIfNotNil ("\u0055\u006e\u0069\u0078",_fgaa .Unix );_dgea .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fgaa .NewWindow );
return _egcb ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _gb .PdfObject ;};func _fcfg (_afbc *_gb .PdfObjectDictionary )(*PdfFieldChoice ,error ){_faade :=&PdfFieldChoice {};_faade .Opt ,_ =_gb .GetArray (_afbc .Get ("\u004f\u0070\u0074"));_faade .TI ,_ =_gb .GetInt (_afbc .Get ("\u0054\u0049"));
_faade .I ,_ =_gb .GetArray (_afbc .Get ("\u0049"));return _faade ,nil ;};var _adfge =_be .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func _fegab ()string {_cgdc .Lock ();defer _cgdc .Unlock ();if len (_fbae )> 0{return _fbae ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};func (_efa *PdfReader )newPdfActionGoTo3DViewFromDict (_adg *_gb .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_adg .Get ("\u0054\u0041"),V :_adg .Get ("\u0056")},nil ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_cbae *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_cegc :=NewPdfOutlineItem ();_cegc .Title =_gb .MakeEncodedString (_cbae .Title ,true );_cegc .Dest =_cbae .Dest .ToPdfObject ();var _bgcgd []*PdfOutlineItem ;var _afda int64 ;var _bfddg *PdfOutlineItem ;
for _ ,_cggb :=range _cbae .Entries {_bbfa ,_agfce :=_cggb .ToPdfOutlineItem ();_bbfa .Parent =&_cegc .PdfOutlineTreeNode ;if _bfddg !=nil {_bfddg .Next =&_bbfa .PdfOutlineTreeNode ;_bbfa .Prev =&_bfddg .PdfOutlineTreeNode ;};_bgcgd =append (_bgcgd ,_bbfa );
_afda +=_agfce ;_bfddg =_bbfa ;};_beca :=len (_bgcgd );_afda +=int64 (_beca );if _beca > 0{_cegc .First =&_bgcgd [0].PdfOutlineTreeNode ;_cegc .Last =&_bgcgd [_beca -1].PdfOutlineTreeNode ;_cegc .Count =&_afda ;};return _cegc ,_afda ;};func (_bfgbg *PdfReader )loadStructure ()error {if _bfgbg ._gedb .GetCrypter ()!=nil &&!_bfgbg ._gedb .IsAuthenticated (){return _b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dbddab :=_bfgbg ._gedb .GetTrailer ();if _dbddab ==nil {return _b .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_aebb ,_gcdca :=_dbddab .Get ("\u0052\u006f\u006f\u0074").(*_gb .PdfObjectReference );if !_gcdca {return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_dbddab );
};_gbgbb ,_bgdfe :=_bfgbg ._gedb .LookupByReference (*_aebb );if _bgdfe !=nil {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bgdfe );
return _bgdfe ;};_cecgb ,_gcdca :=_gbgbb .(*_gb .PdfIndirectObject );if !_gcdca {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gbgbb ,*_dbddab );
return _ga .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bbecc ,_gcdca :=(*_cecgb ).PdfObject .(*_gb .PdfObjectDictionary );if !_gcdca {_dgf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_cecgb .PdfObject );
return _ga .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dgf .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bbecc );_gecef ,_gcdca :=_bbecc .Get ("\u0050\u0061\u0067e\u0073").(*_gb .PdfObjectReference );
if !_gcdca {return _ga .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_bgfgd ,_bgdfe :=_bfgbg ._gedb .LookupByReference (*_gecef );
if _bgdfe !=nil {_dgf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bgdfe ;};_bbfce ,_gcdca :=_bgfgd .(*_gb .PdfIndirectObject );if !_gcdca {_dgf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_dgf .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_bbfce );return _ga .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_fdeg ,_gcdca :=_bbfce .PdfObject .(*_gb .PdfObjectDictionary );if !_gcdca {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_bbfce );
return _ga .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gfdbg ,_gcdca :=_gb .GetInt (_fdeg .Get ("\u0043\u006f\u0075n\u0074"));if !_gcdca {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ga .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_gcdca =_gb .GetName (_fdeg .Get ("\u0054\u0079\u0070\u0065"));!_gcdca {_dgf .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_fdeg .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0050\u0061\u0067e\u0073"));};_bfgbg ._gdged =_aebb ;_bfgbg ._ggce =_bbecc ;_bfgbg ._fgfb =_fdeg ;_bfgbg ._bgcdb =_bbfce ;_bfgbg ._efba =int (*_gfdbg );_bfgbg ._aegfg =[]*_gb .PdfIndirectObject {};
_bfgeb :=map[_gb .PdfObject ]struct{}{};_bgdfe =_bfgbg .buildPageList (_bbfce ,nil ,_bfgeb );if _bgdfe !=nil {return _bgdfe ;};_dgf .Log .Trace ("\u002d\u002d\u002d");_dgf .Log .Trace ("\u0054\u004f\u0043");_dgf .Log .Trace ("\u0050\u0061\u0067e\u0073");
_dgf .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_bfgbg ._aegfg ),_bfgbg ._aegfg );_bfgbg ._gafe ,_bgdfe =_bfgbg .loadOutlines ();if _bgdfe !=nil {_dgf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bgdfe );
return _bgdfe ;};_bfgbg .AcroForm ,_bgdfe =_bfgbg .loadForms ();if _bgdfe !=nil {return _bgdfe ;};_bfgbg .DSS ,_bgdfe =_bfgbg .loadDSS ();if _bgdfe !=nil {return _bgdfe ;};return nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_ecagg *PdfPage )HasXObjectByName (name _gb .PdfObjectName )bool {_bdda ,_ggabf :=_ecagg .Resources .XObject .(*_gb .PdfObjectDictionary );if !_ggabf {return false ;};if _ffaac :=_bdda .Get (name );_ffaac !=nil {return true ;};return false ;};

// ToPdfObject implements interface PdfModel.
func (_gbbf *PdfAnnotationPolyLine )ToPdfObject ()_gb .PdfObject {_gbbf .PdfAnnotation .ToPdfObject ();_ebecc :=_gbbf ._dccf ;_cdbg :=_ebecc .PdfObject .(*_gb .PdfObjectDictionary );_gbbf .PdfAnnotationMarkup .appendToPdfDictionary (_cdbg );_cdbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_cdbg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gbbf .Vertices );_cdbg .SetIfNotNil ("\u004c\u0045",_gbbf .LE );_cdbg .SetIfNotNil ("\u0042\u0053",_gbbf .BS );_cdbg .SetIfNotNil ("\u0049\u0043",_gbbf .IC );_cdbg .SetIfNotNil ("\u0042\u0045",_gbbf .BE );
_cdbg .SetIfNotNil ("\u0049\u0054",_gbbf .IT );_cdbg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gbbf .Measure );return _ebecc ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _f .Time ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_ggbaa *PdfReader )PageFromIndirectObject (ind *_gb .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_ggbaa .PageList )!=len (_ggbaa ._aegfg ){return nil ,0,_ga .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _gcdgd ,_gffa :=range _ggbaa ._aegfg {if _gffa ==ind {return _ggbaa .PageList [_gcdgd ],_gcdgd +1,nil ;};};return nil ,0,_ga .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_eadc ,_gecc :=_acgcg (basefont );if _gecc !=nil {return nil ,_gecc ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_eadc ._dgdge =_fed .NewWinAnsiEncoder ();};return &PdfFont {_cbab :&_eadc },nil ;
};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _f .Time ){_cgdc .Lock ();defer _cgdc .Unlock ();_bacgg =modifiedDate ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _gb .PdfObject ;BS _gb .PdfObject ;};func _affab ()string {_cgdc .Lock ();defer _cgdc .Unlock ();return _ecbfg };

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_fccg _gb .PdfObject ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_cgdc .Lock ();defer _cgdc .Unlock ();_ccdef =producer };func (_dae *PdfReader )newPdfAnnotationFreeTextFromDict (_ecbg *_gb .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_bced :=PdfAnnotationFreeText {};
_cbfe ,_eagc :=_dae .newPdfAnnotationMarkupFromDict (_ecbg );if _eagc !=nil {return nil ,_eagc ;};_bced .PdfAnnotationMarkup =_cbfe ;_bced .DA =_ecbg .Get ("\u0044\u0041");_bced .Q =_ecbg .Get ("\u0051");_bced .RC =_ecbg .Get ("\u0052\u0043");_bced .DS =_ecbg .Get ("\u0044\u0053");
_bced .CL =_ecbg .Get ("\u0043\u004c");_bced .IT =_ecbg .Get ("\u0049\u0054");_bced .BE =_ecbg .Get ("\u0042\u0045");_bced .RD =_ecbg .Get ("\u0052\u0044");_bced .BS =_ecbg .Get ("\u0042\u0053");_bced .LE =_ecbg .Get ("\u004c\u0045");return &_bced ,nil ;
};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_aeebg *modelManager )GetPrimitiveFromModel (model PdfModel )_gb .PdfObject {_egdb ,_dgdac :=_aeebg ._daeg [model ];if !_dgdac {return nil ;};return _egdb ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _gb .PdfObject ;PreserveRB _gb .PdfObject ;};func (_cfc *PdfReader )newPdfAnnotationProjectionFromDict (_dbee *_gb .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_cab :=&PdfAnnotationProjection {};
_fdf ,_aac :=_cfc .newPdfAnnotationMarkupFromDict (_dbee );if _aac !=nil {return nil ,_aac ;};_cab .PdfAnnotationMarkup =_fdf ;return _cab ,nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ddde *PdfAnnotationHighlight )ToPdfObject ()_gb .PdfObject {_ddde .PdfAnnotation .ToPdfObject ();_cdce :=_ddde ._dccf ;_dcbe :=_cdce .PdfObject .(*_gb .PdfObjectDictionary );_ddde .PdfAnnotationMarkup .appendToPdfDictionary (_dcbe );_dcbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_dcbe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ddde .QuadPoints );return _cdce ;};func (_abfb fontCommon )asPdfObjectDictionary (_cbbdc string )*_gb .PdfObjectDictionary {if _cbbdc !=""&&_abfb ._cedad !=""&&_cbbdc !=_abfb ._cedad {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_cbbdc ,_abfb );
}else if _cbbdc ==""&&_abfb ._cedad ==""{_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_abfb );
}else if _abfb ._cedad ==""{_abfb ._cedad =_cbbdc ;};_ddbfe :=_gb .MakeDict ();_ddbfe .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0046\u006f\u006e\u0074"));_ddbfe .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_gb .MakeName (_abfb ._ebadb ));
_ddbfe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName (_abfb ._cedad ));if _abfb ._fcgcf !=nil {_ddbfe .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_abfb ._fcgcf .ToPdfObject ());};if _abfb ._egbcb !=nil {_ddbfe .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_abfb ._egbcb );
}else if _abfb ._bfdd !=nil {_bgad ,_bcdf :=_abfb ._bfdd .Stream ();if _bcdf !=nil {_dgf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_bcdf );
}else {_ddbfe .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bgad );};};return _ddbfe ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_ggdeg *PdfReader )Inspect ()(map[string ]int ,error ){return _ggdeg ._gedb .Inspect ()};func (_cac *PdfReader )newPdfActionHideFromDict (_dbcd *_gb .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_dbcd .Get ("\u0054"),H :_dbcd .Get ("\u0048")},nil ;
};

// GetDescent returns the Descent of the font `descriptor`.
func (_gffda *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _gb .GetNumberAsFloat (_gffda .Descent );};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// GetAction returns the PDF action for the annotation link.
func (_agcb *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _agcb ._ace !=nil {return _agcb ._ace ,nil ;};if _agcb .A ==nil {return nil ,nil ;};if _agcb ._faab ==nil {return nil ,nil ;};_fdd ,_gca :=_agcb ._faab .loadAction (_agcb .A );if _gca !=nil {return nil ,_gca ;
};_agcb ._ace =_fdd ;return _agcb ._ace ,nil ;};func (_efge *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _gb .PdfObject ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_feaa *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// GetContentStream returns the XObject Form's content stream.
func (_cegcg *XObjectForm )GetContentStream ()([]byte ,error ){_fgdcc ,_ebfga :=_gb .DecodeStream (_cegcg ._fadf );if _ebfga !=nil {return nil ,_ebfga ;};return _fgdcc ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_eabc *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgfe :=vals [0];if _dgfe < 0.0||_dgfe > 1.0{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fcaa :=vals [1];if _fcaa < 0.0||_fcaa > 1.0{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbgb :=vals [2];if _gbgb < 0.0||_gbgb > 1.0{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ecacc :=NewPdfColorCalRGB (_dgfe ,_fcaa ,_gbgb );return _ecacc ,nil ;};

// SetAlpha sets the alpha layer for the image.
func (_dacf *Image )SetAlpha (alpha []byte ){_dacf ._abecg =alpha };

// Height returns the height of `rect`.
func (_ddbdc *PdfRectangle )Height ()float64 {return _fg .Abs (_ddbdc .Ury -_ddbdc .Lly )};func (_cbccc *PdfWriter )updateObjectNumbers (){_cddgd :=_cbccc .ObjNumOffset ;_bffdb :=0;for _ ,_fbba :=range _cbccc ._eeafb {_fddgb :=int64 (_bffdb +1+_cddgd );
_bgae :=true ;if _cbccc ._afgga {if _bacgc ,_gagbc :=_cbccc ._facba [_fbba ];_gagbc {_fddgb =_bacgc ;_bgae =false ;};};switch _gbgaa :=_fbba .(type ){case *_gb .PdfIndirectObject :_gbgaa .ObjectNumber =_fddgb ;_gbgaa .GenerationNumber =0;case *_gb .PdfObjectStream :_gbgaa .ObjectNumber =_fddgb ;
_gbgaa .GenerationNumber =0;case *_gb .PdfObjectStreams :_gbgaa .ObjectNumber =_fddgb ;_gbgaa .GenerationNumber =0;default:_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_gbgaa );
continue ;};if _bgae {_bffdb ++;};};_fefga :=func (_faaff _gb .PdfObject )int64 {switch _aecda :=_faaff .(type ){case *_gb .PdfIndirectObject :return _aecda .ObjectNumber ;case *_gb .PdfObjectStream :return _aecda .ObjectNumber ;case *_gb .PdfObjectStreams :return _aecda .ObjectNumber ;
};return 0;};_ec .SliceStable (_cbccc ._eeafb ,func (_eggeb ,_aaeac int )bool {return _fefga (_cbccc ._eeafb [_eggeb ])< _fefga (_cbccc ._eeafb [_aaeac ])});};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_fecec *PdfFont )CharcodesToStrings (charcodes []_fed .CharCode )([]string ,int ,int ){_efgdbc :=_fecec .baseFields ();_aeba :=make ([]string ,0,len (charcodes ));_cfae :=0;_efgb :=_fecec .Encoder ();if _efgb !=nil {switch _fbdd :=_efgb .(type ){case _fed .SimpleEncoder :_cedd :=_fbdd .BaseName ();
if _ ,_eadad :=_dcbee [_cedd ];_eadad {for _ ,_efgg :=range charcodes {if _bdga ,_ebacd :=_efgb .CharcodeToRune (_efgg );_ebacd {_aeba =append (_aeba ,string (_bdga ));}else {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_efgg ,charcodes ,_efgdbc .isCIDFont (),_fecec ,_efgb );
_cfae ++;_aeba =append (_aeba ,_de .MissingCodeString );};};return _aeba ,len (_aeba ),_cfae ;};};};for _ ,_agfdf :=range charcodes {if _efgdbc ._bfdd !=nil {if _febeb ,_ecfg :=_efgdbc ._bfdd .CharcodeToUnicode (_de .CharCode (_agfdf ));_ecfg {_aeba =append (_aeba ,_febeb );
continue ;};};if _efgb !=nil {if _cccg ,_edgd :=_efgb .CharcodeToRune (_agfdf );_edgd {_aeba =append (_aeba ,string (_cccg ));continue ;};};_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_agfdf ,charcodes ,_efgdbc .isCIDFont (),_fecec ,_efgb );
_cfae ++;_aeba =append (_aeba ,_de .MissingCodeString );};if _cfae !=0{_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_cfae ,_fecec );
};return _aeba ,len (_aeba ),_cfae ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_fead *_gb .PdfIndirectObject ;};func _cbgeb (_cbfd _gb .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_cdba :=&PdfColorspaceDeviceNAttributes {};var _bdeaa *_gb .PdfObjectDictionary ;
if _cdad ,_gcdc :=_cbfd .(*_gb .PdfIndirectObject );_gcdc {_cdba ._egbf =_cdad ;var _eeba bool ;_bdeaa ,_eeba =_cdad .PdfObject .(*_gb .PdfObjectDictionary );if !_eeba {_dgf .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ga .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _dacce ,_fgba :=_cbfd .(*_gb .PdfObjectDictionary );_fgba {_bdeaa =_dacce ;}else {_dgf .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ga .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _debgg :=_bdeaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_debgg !=nil {_agfc ,_gefcc :=_gb .TraceToDirectObject (_debgg ).(*_gb .PdfObjectName );if !_gefcc {_dgf .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ga .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cdba .Subtype =_agfc ;};if _gcea :=_bdeaa .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_gcea !=nil {_cdba .Colorants =_gcea ;};if _cfegc :=_bdeaa .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_cfegc !=nil {_cdba .Process =_cfegc ;};if _acaea :=_bdeaa .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_acaea !=nil {_cdba .MixingHints =_acaea ;};return _cdba ,nil ;};

// Val returns the color value.
func (_gffea *PdfColorDeviceGray )Val ()float64 {return float64 (*_gffea )};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_dbd :=NewPdfAction ();_aaf :=&PdfActionSound {};_aaf .PdfAction =_dbd ;_dbd .SetContext (_aaf );return _aaf ;};func _egbc (_bcdg _gb .PdfObject )(*PdfColorspaceCalRGB ,error ){_acbbb :=NewPdfColorspaceCalRGB ();
if _dcea ,_fddd :=_bcdg .(*_gb .PdfIndirectObject );_fddd {_acbbb ._cfgc =_dcea ;};_bcdg =_gb .TraceToDirectObject (_bcdg );_acec ,_abdb :=_bcdg .(*_gb .PdfObjectArray );if !_abdb {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _acec .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_bcdg =_gb .TraceToDirectObject (_acec .Get (0));_aeeeb ,_abdb :=_bcdg .(*_gb .PdfObjectName );
if !_abdb {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_aeeeb !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_b .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_bcdg =_gb .TraceToDirectObject (_acec .Get (1));_gabc ,_abdb :=_bcdg .(*_gb .PdfObjectDictionary );if !_abdb {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_bcdg =_gabc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bcdg =_gb .TraceToDirectObject (_bcdg );_cffee ,_abdb :=_bcdg .(*_gb .PdfObjectArray );if !_abdb {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _cffee .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_gbbe ,_caec :=_cffee .GetAsFloat64Slice ();
if _caec !=nil {return nil ,_caec ;};_acbbb .WhitePoint =_gbbe ;_bcdg =_gabc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bcdg !=nil {_bcdg =_gb .TraceToDirectObject (_bcdg );_dcgfb ,_cfeg :=_bcdg .(*_gb .PdfObjectArray );if !_cfeg {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _dcgfb .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_edag ,_ebaf :=_dcgfb .GetAsFloat64Slice ();
if _ebaf !=nil {return nil ,_ebaf ;};_acbbb .BlackPoint =_edag ;};_bcdg =_gabc .Get ("\u0047\u0061\u006dm\u0061");if _bcdg !=nil {_bcdg =_gb .TraceToDirectObject (_bcdg );_beag ,_eccd :=_bcdg .(*_gb .PdfObjectArray );if !_eccd {return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _beag .Len ()!=3{return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_fgae ,_bebge :=_beag .GetAsFloat64Slice ();if _bebge !=nil {return nil ,_bebge ;
};_acbbb .Gamma =_fgae ;};_bcdg =_gabc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _bcdg !=nil {_bcdg =_gb .TraceToDirectObject (_bcdg );_bffg ,_cbgef :=_bcdg .(*_gb .PdfObjectArray );if !_cbgef {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _bffg .Len ()!=9{_dgf .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_bffg .String ());return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_ddfg ,_fbdf :=_bffg .GetAsFloat64Slice ();if _fbdf !=nil {return nil ,_fbdf ;};_acbbb .Matrix =_ddfg ;};return _acbbb ,nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _gb .PdfObject ;ColorSpace _gb .PdfObject ;Pattern _gb .PdfObject ;Shading _gb .PdfObject ;XObject _gb .PdfObject ;Font _gb .PdfObject ;ProcSet _gb .PdfObject ;Properties _gb .PdfObject ;_aecba *_gb .PdfObjectDictionary ;
_fabgf *PdfPageResourcesColorspaces ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _gb .PdfObject ;NewWindow _gb .PdfObject ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_cgab *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _cgab ._bcaggd .(*PdfShadingPattern );};

// GetOCProperties returns the optional content properties PdfObject.
func (_bbddd *PdfReader )GetOCProperties ()(_gb .PdfObject ,error ){_dcec :=_bbddd ._ggce ;_bbddg :=_dcec .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bbddg =_gb .ResolveReference (_bbddg );if !_bbddd ._ggea {_fedg :=_bbddd .traverseObjectData (_bbddg );
if _fedg !=nil {return nil ,_fedg ;};};return _bbddg ,nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_dacd *PdfReader )GetEncryptionMethod ()string {_gdbcf :=_dacd ._gedb .GetCrypter ();return _gdbcf .String ();};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_gb .PdfObjectDictionary )(*PdfPageResources ,error ){_geefg :=NewPdfPageResources ();if _bdagg :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bdagg !=nil {_geefg .ExtGState =_bdagg ;};if _degg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_degg !=nil &&!_gb .IsNullObject (_degg ){_geefg .ColorSpace =_degg ;};if _adeaef :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_adeaef !=nil {_geefg .Pattern =_adeaef ;};if _gggbc :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_gggbc !=nil {_geefg .Shading =_gggbc ;
};if _cfcgf :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_cfcgf !=nil {_geefg .XObject =_cfcgf ;};if _adaab :=_gb .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_adaab !=nil {_geefg .Font =_adaab ;};if _deaae :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_deaae !=nil {_geefg .ProcSet =_deaae ;};if _fddbf :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_fddbf !=nil {_geefg .Properties =_fddbf ;};return _geefg ,nil ;};func (_caf *PdfReader )newPdfActionSubmitFormFromDict (_gfd *_gb .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_bcbb ,_cga :=_ebg (_gfd .Get ("\u0046"));
if _cga !=nil {return nil ,_cga ;};return &PdfActionSubmitForm {F :_bcbb ,Fields :_gfd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gfd .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_ddd :=NewPdfAnnotation ();_egg :=&PdfAnnotationText {};_egg .PdfAnnotation =_ddd ;_egg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddd .SetContext (_egg );return _egg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bfed *PdfColorspaceSpecialSeparation )ToPdfObject ()_gb .PdfObject {_ffbe :=_gb .MakeArray (_gb .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_ffbe .Append (_bfed .ColorantName );_ffbe .Append (_bfed .AlternateSpace .ToPdfObject ());
_ffbe .Append (_bfed .TintTransform .ToPdfObject ());if _bfed ._efag !=nil {_bfed ._efag .PdfObject =_ffbe ;return _bfed ._efag ;};return _ffbe ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_gfef *PdfInfo )AddCustomInfo (name string ,value string )error {if _gfef ._acdf ==nil {_gfef ._acdf =_gb .MakeDict ();};if _ ,_dbgg :=_fbagg [name ];_dbgg {return _b .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_gfef ._acdf .SetIfNotNil (*_gb .MakeName (name ),_gb .MakeString (value ));return nil ;};

// String returns a string that describes `base`.
func (_dgbc fontCommon )String ()string {return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_dgbc .coreString ());};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ccgec pdfCIDFontType2 )GetRuneMetrics (r rune )(_ad .CharMetrics ,bool ){_addfd ,_cbee :=_ccgec ._dfcb [r ];if !_cbee {_fcaaf ,_ecdbe :=_gb .GetInt (_ccgec .DW );if !_ecdbe {return _ad .CharMetrics {},false ;};_addfd =int (*_fcaaf );};return _ad .CharMetrics {Wx :float64 (_addfd )},true ;
};func _bgfe (_agdb _gb .PdfObject )(*PdfColorspaceLab ,error ){_egeb :=NewPdfColorspaceLab ();if _dgec ,_fdcda :=_agdb .(*_gb .PdfIndirectObject );_fdcda {_egeb ._eacd =_dgec ;};_agdb =_gb .TraceToDirectObject (_agdb );_cebc ,_cebcf :=_agdb .(*_gb .PdfObjectArray );
if !_cebcf {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cebc .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_agdb =_gb .TraceToDirectObject (_cebc .Get (0));_cef ,_cebcf :=_agdb .(*_gb .PdfObjectName );if !_cebcf {return nil ,_b .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_cef !="\u004c\u0061\u0062"{return nil ,_b .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_agdb =_gb .TraceToDirectObject (_cebc .Get (1));_bagb ,_cebcf :=_agdb .(*_gb .PdfObjectDictionary );
if !_cebcf {return nil ,_b .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};
_agdb =_bagb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_agdb =_gb .TraceToDirectObject (_agdb );_dgbb ,_cebcf :=_agdb .(*_gb .PdfObjectArray );if !_cebcf {return nil ,_b .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _dgbb .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_afab ,_bba :=_dgbb .GetAsFloat64Slice ();
if _bba !=nil {return nil ,_bba ;};_egeb .WhitePoint =_afab ;_agdb =_bagb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _agdb !=nil {_agdb =_gb .TraceToDirectObject (_agdb );_acg ,_aegg :=_agdb .(*_gb .PdfObjectArray );if !_aegg {return nil ,_b .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");
};if _acg .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_babe ,_faac :=_acg .GetAsFloat64Slice ();
if _faac !=nil {return nil ,_faac ;};_egeb .BlackPoint =_babe ;};_agdb =_bagb .Get ("\u0052\u0061\u006eg\u0065");if _agdb !=nil {_agdb =_gb .TraceToDirectObject (_agdb );_fagbg ,_aeeg :=_agdb .(*_gb .PdfObjectArray );if !_aeeg {_dgf .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
return nil ,_b .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fagbg .Len ()!=4{_dgf .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_bge ,_ddcd :=_fagbg .GetAsFloat64Slice ();if _ddcd !=nil {return nil ,_ddcd ;};_egeb .Range =_bge ;};return _egeb ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _gb .PdfObject ;H _gb .PdfObject ;};func (_eagag *PdfReader )newPdfAnnotationCaretFromDict (_cbge *_gb .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_dcfe :=PdfAnnotationCaret {};_bdc ,_cbd :=_eagag .newPdfAnnotationMarkupFromDict (_cbge );
if _cbd !=nil {return nil ,_cbd ;};_dcfe .PdfAnnotationMarkup =_bdc ;_dcfe .RD =_cbge .Get ("\u0052\u0044");_dcfe .Sy =_cbge .Get ("\u0053\u0079");return &_dcfe ,nil ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_ggeg *PdfInfo )ToPdfObject ()_gb .PdfObject {_fbac :=_gb .MakeDict ();_fbac .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_ggeg .Title );_fbac .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_ggeg .Author );_fbac .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_ggeg .Subject );
_fbac .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ggeg .Keywords );_fbac .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_ggeg .Creator );_fbac .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_ggeg .Producer );
_fbac .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_ggeg .Trapped );if _ggeg .CreationDate !=nil {_fbac .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ggeg .CreationDate .ToPdfObject ());};if _ggeg .ModifiedDate !=nil {_fbac .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_ggeg .ModifiedDate .ToPdfObject ());
};for _ ,_deaa :=range _ggeg ._acdf .Keys (){_fbac .SetIfNotNil (_deaa ,_ggeg ._acdf .Get (_deaa ));};return _fbac ;};func (_fdee *PdfReader )newPdfAnnotationMovieFromDict (_ecf *_gb .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_egd :=PdfAnnotationMovie {};
_egd .T =_ecf .Get ("\u0054");_egd .Movie =_ecf .Get ("\u004d\u006f\u0076i\u0065");_egd .A =_ecf .Get ("\u0041");return &_egd ,nil ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_acegc byte )byte ;

// GetContainingPdfObject implements interface PdfModel.
func (_gaegf *PdfFilespec )GetContainingPdfObject ()_gb .PdfObject {return _gaegf ._ebc };

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_gbgg *PdfFont )SubsetRegistered ()error {switch _ebacg :=_gbgg ._cbab .(type ){case *pdfFontType0 :_bffe :=_ebacg .subsetRegistered ();if _bffe !=nil {_dgf .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bffe );
return _bffe ;};if _ebacg ._ffce !=nil {if _ebacg ._bdde !=nil {_ebacg ._bdde .ToPdfObject ();};_ebacg .ToPdfObject ();};default:_dgf .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_ebacg );
};return nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_cffa *PdfAppender )WriteToFile (outputPath string )error {_gdgd ,_bbfd :=_fb .Create (outputPath );if _bbfd !=nil {return _bbfd ;};defer _gdgd .Close ();return _cffa .Write (_gdgd );};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_bc :=NewPdfAction ();_gff :=&PdfActionTrans {};_gff .PdfAction =_bc ;_bc .SetContext (_gff );return _gff ;};func _dagef ()string {_cgdc .Lock ();defer _cgdc .Unlock ();return _eebce };

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_dfcaa *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_eeae :=_dfcaa .GetContentStreamObjs ();wrapContents =wrapContents &&len (_eeae )> 0;_bcbbf :=_gb .NewFlateEncoder ();_fgbge :=_gb .MakeArray ();if wrapContents {_bbccf ,_dbdce :=_gb .MakeStream ([]byte ("\u0071\u000a"),_bcbbf );
if _dbdce !=nil {return _dbdce ;};_fgbge .Append (_bbccf );};_fgbge .Append (_eeae ...);if wrapContents {_addgd ,_aaec :=_gb .MakeStream ([]byte ("\u000a\u0051\u000a"),_bcbbf );if _aaec !=nil {return _aaec ;};_fgbge .Append (_addgd );};_bcea ,_adgcd :=_gb .MakeStream (cs ,_bcbbf );
if _adgcd !=nil {return _adgcd ;};_fgbge .Append (_bcea );_dfcaa .Contents =_fgbge ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcae *PdfFilespec )ToPdfObject ()_gb .PdfObject {_cece :=_fcae .getDict ();_cece .Clear ();_cece .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_cece .SetIfNotNil ("\u0046\u0053",_fcae .FS );
_cece .SetIfNotNil ("\u0046",_fcae .F );_cece .SetIfNotNil ("\u0055\u0046",_fcae .UF );_cece .SetIfNotNil ("\u0044\u004f\u0053",_fcae .DOS );_cece .SetIfNotNil ("\u004d\u0061\u0063",_fcae .Mac );_cece .SetIfNotNil ("\u0055\u006e\u0069\u0078",_fcae .Unix );
_cece .SetIfNotNil ("\u0049\u0044",_fcae .ID );_cece .SetIfNotNil ("\u0056",_fcae .V );_cece .SetIfNotNil ("\u0045\u0046",_fcae .EF );_cece .SetIfNotNil ("\u0052\u0046",_fcae .RF );_cece .SetIfNotNil ("\u0044\u0065\u0073\u0063",_fcae .Desc );_cece .SetIfNotNil ("\u0043\u0049",_fcae .CI );
return _fcae ._ebc ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_fcfc *PdfPage )SetContentStreams (cStreams []string ,encoder _gb .StreamEncoder )error {if len (cStreams )==0{_fcfc .Contents =nil ;return nil ;};if encoder ==nil {encoder =_gb .NewRawEncoder ();};var _dgaeb []*_gb .PdfObjectStream ;for _ ,_acacd :=range cStreams {_dcab :=&_gb .PdfObjectStream {};
_deffa :=encoder .MakeStreamDict ();_daefc ,_aeegd :=encoder .EncodeBytes ([]byte (_acacd ));if _aeegd !=nil {return _aeegd ;};_deffa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_daefc ))));_dcab .PdfObjectDictionary =_deffa ;
_dcab .Stream =_daefc ;_dgaeb =append (_dgaeb ,_dcab );};if len (_dgaeb )==1{_fcfc .Contents =_dgaeb [0];}else {_adca :=_gb .MakeArray ();for _ ,_gacfb :=range _dgaeb {_adca .Append (_gacfb );};_fcfc .Contents =_adca ;};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_agda *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbag :=vals [0];if _gbag < 0.0||_gbag > 1.0{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_efbd :=vals [1];if _efbd < 0.0||_efbd > 1.0{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cede :=vals [2];if _cede < 0.0||_cede > 1.0{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_adad :=NewPdfColorDeviceRGB (_gbag ,_efbd ,_cede );return _adad ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_faga *PdfShadingPattern )ToPdfObject ()_gb .PdfObject {_faga .PdfPattern .ToPdfObject ();_egabg :=_faga .getDict ();if _faga .Shading !=nil {_egabg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_faga .Shading .ToPdfObject ());};if _faga .Matrix !=nil {_egabg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_faga .Matrix );
};if _faga .ExtGState !=nil {_egabg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_faga .ExtGState );};return _faga ._agab ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_dbdf *PdfAppender )Write (w _cf .Writer )error {if _dbdf ._abad {return _ga .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_bgdf :=NewPdfWriter ();_eced ,_egfg :=_gb .GetDict (_bgdf ._ddacg );if !_egfg {return _ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_acfeb ,_egfg :=_eced .Get ("\u004b\u0069\u0064\u0073").(*_gb .PdfObjectArray );if !_egfg {return _ga .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_dacgg ,_egfg :=_eced .Get ("\u0043\u006f\u0075n\u0074").(*_gb .PdfObjectInteger );if !_egfg {return _ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_cagag :=_dbdf ._ddda ._gedb ;_bfgdc :=_cagag .GetTrailer ();if _bfgdc ==nil {return _ga .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_acbc ,_egfg :=_gb .GetIndirect (_bfgdc .Get ("\u0052\u006f\u006f\u0074"));
if !_egfg {return _ga .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_cbec ,_egfg :=_gb .GetDict (_acbc );if !_egfg {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_acbc ,*_bfgdc );
return _ga .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_gab :=range _cbec .Keys (){if _bgdf ._dfcaf .Get (_gab )==nil {_fede :=_cbec .Get (_gab );_bgdf ._dfcaf .Set (_gab ,_fede );};};if _dbdf ._fbc !=nil {_bgdf ._dfcaf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dbdf ._fbc .ToPdfObject ());
_dbdf .updateObjectsDeep (_dbdf ._fbc .ToPdfObject (),nil );};if _dbdf ._ccgbe !=nil {_dbdf .updateObjectsDeep (_dbdf ._ccgbe .ToPdfObject (),nil );_bgdf ._dfcaf .Set ("\u0044\u0053\u0053",_dbdf ._ccgbe .GetContainingPdfObject ());};if _bgdf ._cgde < 2{_bgdf .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_bgdf .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_dbdf .addNewObject (_bgdf ._cgcab );_dbdf .addNewObject (_bgdf ._gceec );_cfcgc :=false ;if len (_dbdf ._ddda .PageList )!=len (_dbdf ._bcabf ){_cfcgc =true ;}else {for _bgcf :=range _dbdf ._ddda .PageList {switch {case _dbdf ._bcabf [_bgcf ]==_dbdf ._ddda .PageList [_bgcf ]:case _dbdf ._bcabf [_bgcf ]==_dbdf .Reader .PageList [_bgcf ]:default:_cfcgc =true ;
};if _cfcgc {break ;};};};if _cfcgc {_dbdf .updateObjectsDeep (_bgdf ._ddacg ,nil );}else {_dbdf ._dbcge [_bgdf ._ddacg ]=struct{}{};};_bgdf ._ddacg .ObjectNumber =_dbdf .Reader ._bgcdb .ObjectNumber ;_dbdf ._dbgc [_bgdf ._ddacg ]=_dbdf .Reader ._bgcdb .ObjectNumber ;
_bcd :=[]_gb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_ecff :=range _dbdf ._bcabf {_acfc :=_ecff .ToPdfObject ();
*_dacgg =*_dacgg +1;if _aaaa ,_effgc :=_acfc .(*_gb .PdfIndirectObject );_effgc &&_aaaa .GetParser ()==_dbdf ._ddda ._gedb {_acfeb .Append (&_aaaa .PdfObjectReference );continue ;};if _acae ,_fbag :=_gb .GetDict (_acfc );_fbag {_cea ,_aafa :=_acae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gb .PdfIndirectObject );
for _aafa {_dgf .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cea );_fbca ,_bbba :=_cea .PdfObject .(*_gb .PdfObjectDictionary );if !_bbba {return _ga .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_ebbb :=range _bcd {_dgf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ebbb );if _acae .Get (_ebbb )!=nil {_dgf .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _gede :=_fbca .Get (_ebbb );_gede !=nil {_dgf .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ebbb );_acae .Set (_ebbb ,_gede );};};_cea ,_aafa =_fbca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gb .PdfIndirectObject );
_dgf .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fbca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_acae .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bgdf ._ddacg );};_dbdf .updateObjectsDeep (_acfc ,nil );
_acfeb .Append (_acfc );};if _ ,_ccgba :=_dbdf ._fgd .Seek (0,_cf .SeekStart );_ccgba !=nil {return _ccgba ;};_cadg :=make (map[SignatureHandler ]_cf .Writer );_gcaacd :=_gb .MakeArray ();for _ ,_afdb :=range _dbdf ._ccac {if _aggf ,_aeee :=_gb .GetIndirect (_afdb );
_aeee {if _gdea ,_ccbbd :=_aggf .PdfObject .(*pdfSignDictionary );_ccbbd {_aea :=*_gdea ._aeece ;var _bfdg error ;_cadg [_aea ],_bfdg =_aea .NewDigest (_gdea ._gfebb );if _bfdg !=nil {return _bfdg ;};_gcaacd .Append (_gb .MakeInteger (0xfffff),_gb .MakeInteger (0xfffff));
};};};if _gcaacd .Len ()> 0{_gcaacd .Append (_gb .MakeInteger (0xfffff),_gb .MakeInteger (0xfffff));};for _ ,_fcaf :=range _dbdf ._ccac {if _ddgc ,_dddg :=_gb .GetIndirect (_fcaf );_dddg {if _ccda ,_dbaf :=_ddgc .PdfObject .(*pdfSignDictionary );_dbaf {_ccda .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_gcaacd );
};};};_affa :=len (_cadg )> 0;var _dbdd _cf .Reader =_dbdf ._fgd ;if _affa {_gea :=make ([]_cf .Writer ,0,len (_cadg ));for _ ,_deee :=range _cadg {_gea =append (_gea ,_deee );};_dbdd =_cf .TeeReader (_dbdf ._fgd ,_cf .MultiWriter (_gea ...));};_ecdb ,_gaad :=_cf .Copy (w ,_dbdd );
if _gaad !=nil {return _gaad ;};if len (_dbdf ._ccac )==0{return nil ;};_bgdf ._dfcgb =_ecdb ;_bgdf .ObjNumOffset =_dbdf ._efde ;_bgdf ._afgga =true ;_bgdf ._gddac =_dbdf ._gebf ;_bgdf ._gbbea =_dbdf ._bdg ;_bgdf ._dfaaad =_dbdf ._cbbc ;_bgdf ._dcggb =_dbdf ._ddda .PdfVersion ().Minor ;
_bgdf ._facba =_dbdf ._dbgc ;_dedac :=_dbdf ._fag .GetXrefType ();if _dedac !=nil {_cbbdd :=*_dedac ==_gb .XrefTypeObjectStream ;_bgdf ._bfab =&_cbbdd ;};_bgdf ._dbbcgf =map[_gb .PdfObject ]struct{}{};_bgdf ._eeafb =[]_gb .PdfObject {};for _ ,_abaf :=range _dbdf ._ccac {if _ ,_dfe :=_dbdf ._dbcge [_abaf ];
_dfe {continue ;};_bgdf .addObject (_abaf );};_fgadf :=w ;if _affa {_fgadf =_bed .NewBuffer (nil );};if _dcdg :=_bgdf .Write (_fgadf );_dcdg !=nil {return _dcdg ;};if _affa {_fec :=_fgadf .(*_bed .Buffer ).Bytes ();_geab :=_gb .MakeArray ();var _gbdb []*pdfSignDictionary ;
var _edde int64 ;for _ ,_bea :=range _bgdf ._eeafb {if _bebd ,_gfbc :=_gb .GetIndirect (_bea );_gfbc {if _ccbc ,_fad :=_bebd .PdfObject .(*pdfSignDictionary );_fad {_gbdb =append (_gbdb ,_ccbc );_gcgf :=_ccbc ._aebcd +int64 (_ccbc ._bbaaf );_geab .Append (_gb .MakeInteger (_edde ),_gb .MakeInteger (_gcgf -_edde ));
_edde =_ccbc ._aebcd +int64 (_ccbc ._fbcb );};};};_geab .Append (_gb .MakeInteger (_edde ),_gb .MakeInteger (_ecdb +int64 (len (_fec ))-_edde ));_debg :=[]byte (_geab .WriteString ());for _ ,_eagab :=range _gbdb {_ggfb :=int (_eagab ._aebcd -_ecdb );for _bbbc :=_eagab ._edbb ;
_bbbc < _eagab ._fdga ;_bbbc ++{_fec [_ggfb +_bbbc ]=' ';};_ffaf :=_fec [_ggfb +_eagab ._edbb :_ggfb +_eagab ._fdga ];copy (_ffaf ,_debg );};var _facf int ;for _ ,_bcagf :=range _gbdb {_cgeb :=int (_bcagf ._aebcd -_ecdb );_fdad :=_fec [_facf :_cgeb +_bcagf ._bbaaf ];
_aagdb :=*_bcagf ._aeece ;_cadg [_aagdb ].Write (_fdad );_facf =_cgeb +_bcagf ._fbcb ;};for _ ,_agce :=range _gbdb {_gaefg :=_fec [_facf :];_gefc :=*_agce ._aeece ;_cadg [_gefc ].Write (_gaefg );};for _ ,_dddd :=range _gbdb {_cba :=int (_dddd ._aebcd -_ecdb );
_deged :=*_dddd ._aeece ;_bdeae :=_cadg [_deged ];if _bbdb :=_deged .Sign (_dddd ._gfebb ,_bdeae );_bbdb !=nil {return _bbdb ;};_dddd ._gfebb .ByteRange =_geab ;_gbaf :=[]byte (_dddd ._gfebb .Contents .WriteString ());for _eccc :=_dddd ._edbb ;_eccc < _dddd ._fdga ;
_eccc ++{_fec [_cba +_eccc ]=' ';};for _cacd :=_dddd ._bbaaf ;_cacd < _dddd ._fbcb ;_cacd ++{_fec [_cba +_cacd ]=' ';};_fded :=_fec [_cba +_dddd ._edbb :_cba +_dddd ._fdga ];copy (_fded ,_debg );_fded =_fec [_cba +_dddd ._bbaaf :_cba +_dddd ._fbcb ];copy (_fded ,_gbaf );
};_ecfc :=_bed .NewBuffer (_fec );_ ,_gaad =_cf .Copy (w ,_ecfc );if _gaad !=nil {return _gaad ;};};_dbdf ._abad =true ;return nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_ffde *VRI )ToPdfObject ()*_gb .PdfObjectDictionary {_daaf :=_gb .MakeDict ();_daaf .SetIfNotNil (_gb .PdfObjectName ("\u0043\u0065\u0072\u0074"),_fdacg (_ffde .Cert ));_daaf .SetIfNotNil (_gb .PdfObjectName ("\u004f\u0043\u0053\u0050"),_fdacg (_ffde .OCSP ));
_daaf .SetIfNotNil (_gb .PdfObjectName ("\u0043\u0052\u004c"),_fdacg (_ffde .CRL ));_daaf .SetIfNotNil ("\u0054\u0055",_ffde .TU );_daaf .SetIfNotNil ("\u0054\u0053",_ffde .TS );return _daaf ;};func (_ged *PdfReader )newPdfActionURIFromDict (_fce *_gb .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_fce .Get ("\u0055\u0052\u0049"),IsMap :_fce .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// AddAnnotation appends `annot` to the list of page annotations.
func (_adabd *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _adabd ._cafdf ==nil {_adabd .GetAnnotations ();};_adabd ._cafdf =append (_adabd ._cafdf ,annot );};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_fgade DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_agad *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func _daccg ()_f .Time {_cgdc .Lock ();defer _cgdc .Unlock ();return _gdfccc };func (_baeb *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _ecabc :=_baeb ._fcgcf ;
_ecabc !=nil {return _ecabc ;};return _baeb ._cffeea ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _gg .Permissions ;Algorithm EncryptionAlgorithm ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_ecda *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gadb *PdfPageResourcesColorspaces )ToPdfObject ()_gb .PdfObject {_daga :=_gb .MakeDict ();for _ ,_bgeab :=range _gadb .Names {_daga .Set (_gb .PdfObjectName (_bgeab ),_gadb .Colorspaces [_bgeab ].ToPdfObject ());};if _gadb ._fead !=nil {_gadb ._fead .PdfObject =_daga ;
return _gadb ._fead ;};return _daga ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_acea *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_febe ,_beef :=color .(*PdfColorDeviceRGB );if !_beef {_dgf .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _febe ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_daffa *PdfRectangle )ToPdfObject ()_gb .PdfObject {return _gb .MakeArray (_gb .MakeFloat (_daffa .Llx ),_gb .MakeFloat (_daffa .Lly ),_gb .MakeFloat (_daffa .Urx ),_gb .MakeFloat (_daffa .Ury ));};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ebcbd *PdfShadingType3 )ToPdfObject ()_gb .PdfObject {_ebcbd .PdfShading .ToPdfObject ();_cgga ,_baace :=_ebcbd .getShadingDict ();if _baace !=nil {_dgf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ebcbd .Coords !=nil {_cgga .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_ebcbd .Coords );};if _ebcbd .Domain !=nil {_cgga .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ebcbd .Domain );};if _ebcbd .Function !=nil {if len (_ebcbd .Function )==1{_cgga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebcbd .Function [0].ToPdfObject ());
}else {_cfcea :=_gb .MakeArray ();for _ ,_dddc :=range _ebcbd .Function {_cfcea .Append (_dddc .ToPdfObject ());};_cgga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cfcea );};};if _ebcbd .Extend !=nil {_cgga .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_ebcbd .Extend );
};return _ebcbd ._gccef ;};func (_bdef *pdfCIDFontType0 )baseFields ()*fontCommon {return &_bdef .fontCommon };

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_ebbbd *Image )Resample (targetBitsPerComponent int64 ){if _ebbbd .BitsPerComponent ==targetBitsPerComponent {return ;};_cdabb :=_ebbbd .GetSamples ();if targetBitsPerComponent < _ebbbd .BitsPerComponent {_cdefg :=_ebbbd .BitsPerComponent -targetBitsPerComponent ;
for _cdfd :=range _cdabb {_cdabb [_cdfd ]>>=uint (_cdefg );};}else if targetBitsPerComponent > _ebbbd .BitsPerComponent {_dffge :=targetBitsPerComponent -_ebbbd .BitsPerComponent ;for _fadgf :=range _cdabb {_cdabb [_fadgf ]<<=uint (_dffge );};};_ebbbd .BitsPerComponent =targetBitsPerComponent ;
if _ebbbd .BitsPerComponent < 8{_ebbbd .resampleLowBits (_cdabb );return ;};_fbfgb :=_fe .BytesPerLine (int (_ebbbd .Width ),int (_ebbbd .BitsPerComponent ),_ebbbd .ColorComponents );_eccge :=make ([]byte ,_fbfgb *int (_ebbbd .Height ));var (_cfgcb ,_geccg ,_bdcc ,_gdbbf int ;
_fbdfb uint32 ;);for _bdcc =0;_bdcc < int (_ebbbd .Height );_bdcc ++{_cfgcb =_bdcc *_fbfgb ;_geccg =(_bdcc +1)*_fbfgb -1;_eccac :=_cag .ResampleUint32 (_cdabb [_cfgcb :_geccg ],int (targetBitsPerComponent ),8);for _gdbbf ,_fbdfb =range _eccac {_eccge [_gdbbf +_cfgcb ]=byte (_fbdfb );
};};_ebbbd .Data =_eccge ;};func _fdbfa (_ddag string )(map[_fed .CharCode ]_fed .GlyphName ,error ){_gafa :=_fd .Split (_ddag ,"\u000a");_cgbge :=make (map[_fed .CharCode ]_fed .GlyphName );for _ ,_dfa :=range _gafa {_cgea :=_eefe .FindStringSubmatch (_dfa );
if _cgea ==nil {continue ;};_bdgf ,_fgace :=_cgea [1],_cgea [2];_ddge ,_dggbf :=_fa .Atoi (_bdgf );if _dggbf !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_dfa );
return nil ,_gb .ErrTypeError ;};_cgbge [_fed .CharCode (_ddge )]=_fed .GlyphName (_fgace );};_dgf .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_cgbge );
return _cgbge ,nil ;};func _fccga (_ccbd *_gb .PdfObjectDictionary )bool {for _ ,_agee :=range _ccbd .Keys (){if _ ,_ebd :=_ababf [_agee .String ()];_ebd {return true ;};};return false ;};func (_edf *PdfReader )newPdfActionGotoEFromDict (_afe *_gb .PdfObjectDictionary )(*PdfActionGoToE ,error ){_eegc ,_becb :=_ebg (_afe .Get ("\u0046"));
if _becb !=nil {return nil ,_becb ;};return &PdfActionGoToE {D :_afe .Get ("\u0044"),NewWindow :_afe .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_afe .Get ("\u0054"),F :_eegc },nil ;};func _fgfdg (_ceef *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_cacfa ,_bbgb :=_gb .GetDict (_ceef .AP );
if !_bbgb {return nil ,nil ,_ga .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _cacfa ==nil {return nil ,nil ,nil ;};_bade ,_bbgb :=_gb .GetArray (_ceef .Rect );
if !_bbgb ||_bade .Len ()!=4{return nil ,nil ,_ga .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bcebg ,_aacaa :=NewPdfRectangle (*_bade );if _aacaa !=nil {return nil ,nil ,_aacaa ;};_ababa :=_gb .TraceToDirectObject (_cacfa .Get ("\u004e"));
switch _aefcb :=_ababa .(type ){case *_gb .PdfObjectStream :_gfgaf :=_aefcb ;_addgf ,_acdd :=NewXObjectFormFromStream (_gfgaf );return _addgf ,_bcebg ,_acdd ;case *_gb .PdfObjectDictionary :_bgcb :=_aefcb ;_aaeg ,_gdcca :=_gb .GetName (_ceef .AS );if !_gdcca {return nil ,nil ,nil ;
};if _bgcb .Get (*_aaeg )==nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_dfdfd ,_gdcca :=_gb .GetStream (_bgcb .Get (*_aaeg ));if !_gdcca {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_aaeg );
return nil ,nil ,_ga .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_baef ,_bdge :=NewXObjectFormFromStream (_dfdfd );return _baef ,_bcebg ,_bdge ;};_dgf .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_ababa );
return nil ,nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_bcaggd PdfModel ;_agab _gb .PdfObject ;};func _febac (_bcccg _gb .PdfObject )(*PdfShading ,error ){_aedc :=&PdfShading {};var _gdadf *_gb .PdfObjectDictionary ;if _bdfba ,_fbaa :=_gb .GetIndirect (_bcccg );_fbaa {_aedc ._gccef =_bdfba ;
_fbfcb ,_gddfc :=_bdfba .PdfObject .(*_gb .PdfObjectDictionary );if !_gddfc {_dgf .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_gb .ErrTypeError ;
};_gdadf =_fbfcb ;}else if _gddba ,_eccaaf :=_gb .GetStream (_bcccg );_eccaaf {_aedc ._gccef =_gddba ;_gdadf =_gddba .PdfObjectDictionary ;}else if _fgcd ,_bcdc :=_gb .GetDict (_bcccg );_bcdc {_aedc ._gccef =_fgcd ;_gdadf =_fgcd ;}else {_dgf .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_bcccg );
return nil ,_gb .ErrTypeError ;};if _gdadf ==nil {_dgf .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ga .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_bcccg =_gdadf .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _bcccg ==nil {_dgf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bcccg =_gb .TraceToDirectObject (_bcccg );_ggcbg ,_fcgd :=_bcccg .(*_gb .PdfObjectInteger );if !_fcgd {_dgf .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bcccg );
return nil ,_gb .ErrTypeError ;};if *_ggcbg < 1||*_ggcbg > 7{_dgf .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_ggcbg );
return nil ,_gb .ErrTypeError ;};_aedc .ShadingType =_ggcbg ;_bcccg =_gdadf .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _bcccg ==nil {_dgf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dbcgf ,_dcbef :=NewPdfColorspaceFromPdfObject (_bcccg );if _dcbef !=nil {_dgf .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_dcbef );
return nil ,_dcbef ;};_aedc .ColorSpace =_dbcgf ;_bcccg =_gdadf .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _bcccg !=nil {_bcccg =_gb .TraceToDirectObject (_bcccg );_cgcbg ,_egebf :=_bcccg .(*_gb .PdfObjectArray );if !_egebf {_dgf .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bcccg );
return nil ,_gb .ErrTypeError ;};_aedc .Background =_cgcbg ;};_bcccg =_gdadf .Get ("\u0042\u0042\u006f\u0078");if _bcccg !=nil {_bcccg =_gb .TraceToDirectObject (_bcccg );_deabd ,_afggg :=_bcccg .(*_gb .PdfObjectArray );if !_afggg {_dgf .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bcccg );
return nil ,_gb .ErrTypeError ;};_bgfab ,_gbbcd :=NewPdfRectangle (*_deabd );if _gbbcd !=nil {_dgf .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gbbcd );return nil ,_gbbcd ;};_aedc .BBox =_bgfab ;};_bcccg =_gdadf .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _bcccg !=nil {_bcccg =_gb .TraceToDirectObject (_bcccg );_gedbe ,_cecdf :=_bcccg .(*_gb .PdfObjectBool );if !_cecdf {_dgf .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcccg );
return nil ,_gb .ErrTypeError ;};_aedc .AntiAlias =_gedbe ;};switch *_ggcbg {case 1:_gage ,_edbac :=_edcbc (_gdadf );if _edbac !=nil {return nil ,_edbac ;};_gage .PdfShading =_aedc ;_aedc ._fbcg =_gage ;return _aedc ,nil ;case 2:_beba ,_dcfbg :=_bffff (_gdadf );
if _dcfbg !=nil {return nil ,_dcfbg ;};_beba .PdfShading =_aedc ;_aedc ._fbcg =_beba ;return _aedc ,nil ;case 3:_cbdff ,_begb :=_eacfa (_gdadf );if _begb !=nil {return nil ,_begb ;};_cbdff .PdfShading =_aedc ;_aedc ._fbcg =_cbdff ;return _aedc ,nil ;case 4:_adaee ,_ggccd :=_gbef (_gdadf );
if _ggccd !=nil {return nil ,_ggccd ;};_adaee .PdfShading =_aedc ;_aedc ._fbcg =_adaee ;return _aedc ,nil ;case 5:_gfbcc ,_cedcd :=_cbcfg (_gdadf );if _cedcd !=nil {return nil ,_cedcd ;};_gfbcc .PdfShading =_aedc ;_aedc ._fbcg =_gfbcc ;return _aedc ,nil ;
case 6:_cbcd ,_egbcc :=_gagd (_gdadf );if _egbcc !=nil {return nil ,_egbcc ;};_cbcd .PdfShading =_aedc ;_aedc ._fbcg =_cbcd ;return _aedc ,nil ;case 7:_cadac ,_dbffg :=_cgdgbb (_gdadf );if _dbffg !=nil {return nil ,_dbffg ;};_cadac .PdfShading =_aedc ;
_aedc ._fbcg =_cadac ;return _aedc ,nil ;};return nil ,_ga .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_baa :=&PdfAction {};_baa ._cd =_gb .MakeIndirectObject (_gb .MakeDict ());return _baa ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_bbfg *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=_bbfg .GetNumComponents (){return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgbbb ,_cgfgc :=_gb .GetNumbersAsFloat (objects );
if _cgfgc !=nil {return nil ,_cgfgc ;};return _bbfg .ColorFromFloats (_dgbbb );};var _dcbee =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};
func (_aadbee *PdfWriter )copyObject (_eaafd _gb .PdfObject ,_dcgga map[_gb .PdfObject ]_gb .PdfObject ,_aecbd map[_gb .PdfObject ]struct{},_bdabgg bool )_gb .PdfObject {_gcfbf :=!_aadbee ._afgga &&_aecbd !=nil ;if _cgabd ,_ccga :=_dcgga [_eaafd ];_ccga {if _gcfbf &&!_bdabgg {delete (_aecbd ,_eaafd );
};return _cgabd ;};_edeg :=_eaafd ;switch _ffgfa :=_eaafd .(type ){case *_gb .PdfObjectArray :_bdac :=_gb .MakeArray ();_edeg =_bdac ;_dcgga [_eaafd ]=_edeg ;for _ ,_bgfc :=range _ffgfa .Elements (){_bdac .Append (_aadbee .copyObject (_bgfc ,_dcgga ,_aecbd ,_bdabgg ));
};case *_gb .PdfObjectStreams :_adebd :=&_gb .PdfObjectStreams {PdfObjectReference :_ffgfa .PdfObjectReference };_edeg =_adebd ;_dcgga [_eaafd ]=_edeg ;for _ ,_adggdd :=range _ffgfa .Elements (){_adebd .Append (_aadbee .copyObject (_adggdd ,_dcgga ,_aecbd ,_bdabgg ));
};case *_gb .PdfObjectStream :_edgb :=&_gb .PdfObjectStream {Stream :_ffgfa .Stream ,PdfObjectReference :_ffgfa .PdfObjectReference };_edeg =_edgb ;_dcgga [_eaafd ]=_edeg ;_edgb .PdfObjectDictionary =_aadbee .copyObject (_ffgfa .PdfObjectDictionary ,_dcgga ,_aecbd ,_bdabgg ).(*_gb .PdfObjectDictionary );
case *_gb .PdfObjectDictionary :var _ceeaf bool ;if _gcfbf &&!_bdabgg {if _gcaec ,_ :=_gb .GetNameVal (_ffgfa .Get ("\u0054\u0079\u0070\u0065"));_gcaec =="\u0050\u0061\u0067\u0065"{_ ,_ecada :=_aadbee ._ceagag [_ffgfa ];_bdabgg =!_ecada ;_ceeaf =_bdabgg ;
};};_cddda :=_gb .MakeDict ();_edeg =_cddda ;_dcgga [_eaafd ]=_edeg ;for _ ,_afcdg :=range _ffgfa .Keys (){_cddda .Set (_afcdg ,_aadbee .copyObject (_ffgfa .Get (_afcdg ),_dcgga ,_aecbd ,_bdabgg ));};if _ceeaf {_edeg =_gb .MakeNull ();_bdabgg =false ;};
case *_gb .PdfIndirectObject :_bfcgc :=&_gb .PdfIndirectObject {PdfObjectReference :_ffgfa .PdfObjectReference };_edeg =_bfcgc ;_dcgga [_eaafd ]=_edeg ;_bfcgc .PdfObject =_aadbee .copyObject (_ffgfa .PdfObject ,_dcgga ,_aecbd ,_bdabgg );case *_gb .PdfObjectString :_ffcf :=*_ffgfa ;
_edeg =&_ffcf ;_dcgga [_eaafd ]=_edeg ;case *_gb .PdfObjectName :_dagbga :=*_ffgfa ;_edeg =&_dagbga ;_dcgga [_eaafd ]=_edeg ;case *_gb .PdfObjectNull :_edeg =_gb .MakeNull ();_dcgga [_eaafd ]=_edeg ;case *_gb .PdfObjectInteger :_gdagc :=*_ffgfa ;_edeg =&_gdagc ;
_dcgga [_eaafd ]=_edeg ;case *_gb .PdfObjectReference :_gefca :=*_ffgfa ;_edeg =&_gefca ;_dcgga [_eaafd ]=_edeg ;case *_gb .PdfObjectFloat :_bggfd :=*_ffgfa ;_edeg =&_bggfd ;_dcgga [_eaafd ]=_edeg ;case *_gb .PdfObjectBool :_gbbde :=*_ffgfa ;_edeg =&_gbbde ;
_dcgga [_eaafd ]=_edeg ;case *pdfSignDictionary :_effga :=&pdfSignDictionary {PdfObjectDictionary :_gb .MakeDict (),_aeece :_ffgfa ._aeece ,_gfebb :_ffgfa ._gfebb };_edeg =_effga ;_dcgga [_eaafd ]=_edeg ;for _ ,_efec :=range _ffgfa .Keys (){_effga .Set (_efec ,_aadbee .copyObject (_ffgfa .Get (_efec ),_dcgga ,_aecbd ,_bdabgg ));
};default:_dgf .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_eaafd );
};if _gcfbf &&_bdabgg {_aecbd [_eaafd ]=struct{}{};};return _edeg ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_daaaf *PdfColorspaceLab )ToPdfObject ()_gb .PdfObject {_cedc :=_gb .MakeArray ();_cedc .Append (_gb .MakeName ("\u004c\u0061\u0062"));_gccc :=_gb .MakeDict ();if _daaaf .WhitePoint !=nil {_dffa :=_gb .MakeArray (_gb .MakeFloat (_daaaf .WhitePoint [0]),_gb .MakeFloat (_daaaf .WhitePoint [1]),_gb .MakeFloat (_daaaf .WhitePoint [2]));
_gccc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dffa );}else {_dgf .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _daaaf .BlackPoint !=nil {_bcbe :=_gb .MakeArray (_gb .MakeFloat (_daaaf .BlackPoint [0]),_gb .MakeFloat (_daaaf .BlackPoint [1]),_gb .MakeFloat (_daaaf .BlackPoint [2]));_gccc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bcbe );
};if _daaaf .Range !=nil {_cafe :=_gb .MakeArray (_gb .MakeFloat (_daaaf .Range [0]),_gb .MakeFloat (_daaaf .Range [1]),_gb .MakeFloat (_daaaf .Range [2]),_gb .MakeFloat (_daaaf .Range [3]));_gccc .Set ("\u0052\u0061\u006eg\u0065",_cafe );};_cedc .Append (_gccc );
if _daaaf ._eacd !=nil {_daaaf ._eacd .PdfObject =_cedc ;return _daaaf ._eacd ;};return _cedc ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_bcbbb :=NewPdfAnnotation ();_gcaf :=&PdfAnnotationCircle {};_gcaf .PdfAnnotation =_bcbbb ;_gcaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcbbb .SetContext (_gcaf );return _gcaf ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_deaf PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_gb .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_cbba []_gb .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_fdfb []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_cageb *PdfAppender )UpdateObject (obj _gb .PdfObject ){_cageb .replaceObject (obj ,obj );if _ ,_fdge :=_cageb ._cgda [obj ];!_fdge {_cageb ._ccac =append (_cageb ._ccac ,obj );_cageb ._cgda [obj ]=struct{}{};};};func _bcagg (_ddcag *_gb .PdfObjectStream )(*PdfFunctionType4 ,error ){_bcgcd :=&PdfFunctionType4 {};
_bcgcd ._bdcd =_ddcag ;_cgbfg :=_ddcag .PdfObjectDictionary ;_bcfad ,_cddbd :=_gb .TraceToDirectObject (_cgbfg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gb .PdfObjectArray );if !_cddbd {_dgf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ga .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bcfad .Len ()%2!=0{_dgf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_ga .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ebfgb ,_fgdbe :=_bcfad .ToFloat64Array ();if _fgdbe !=nil {return nil ,_fgdbe ;};_bcgcd .Domain =_ebfgb ;_bcfad ,_cddbd =_gb .TraceToDirectObject (_cgbfg .Get ("\u0052\u0061\u006eg\u0065")).(*_gb .PdfObjectArray );
if _cddbd {if _bcfad .Len ()< 0||_bcfad .Len ()%2!=0{return nil ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fcedf ,_dcbg :=_bcfad .ToFloat64Array ();if _dcbg !=nil {return nil ,_dcbg ;};_bcgcd .Range =_fcedf ;
};_fcde ,_fgdbe :=_gb .DecodeStream (_ddcag );if _fgdbe !=nil {return nil ,_fgdbe ;};_bcgcd ._ggggf =_fcde ;_deaac :=_gc .NewPSParser (_fcde );_aeebd ,_fgdbe :=_deaac .Parse ();if _fgdbe !=nil {return nil ,_fgdbe ;};_bcgcd .Program =_aeebd ;return _bcgcd ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_ebb *PdfAnnotationStamp )ToPdfObject ()_gb .PdfObject {_ebb .PdfAnnotation .ToPdfObject ();_daa :=_ebb ._dccf ;_agf :=_daa .PdfObject .(*_gb .PdfObjectDictionary );_ebb .PdfAnnotationMarkup .appendToPdfDictionary (_agf );_agf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053\u0074\u0061m\u0070"));
_agf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebb .Name );return _daa ;};func _eade (_gbcg *_gb .PdfObjectDictionary )*VRI {_afeb ,_ :=_gb .GetString (_gbcg .Get ("\u0054\u0055"));_gadc ,_ :=_gb .GetString (_gbcg .Get ("\u0054\u0053"));return &VRI {Cert :_egag (_gbcg .Get ("\u0043\u0065\u0072\u0074")),OCSP :_egag (_gbcg .Get ("\u004f\u0043\u0053\u0050")),CRL :_egag (_gbcg .Get ("\u0043\u0052\u004c")),TU :_afeb ,TS :_gadc };
};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_gccfe *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func _gagb (_bdgb *_gb .PdfObjectDictionary )(*PdfTilingPattern ,error ){_fdba :=&PdfTilingPattern {};_efgdfb :=_bdgb .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _efgdfb ==nil {_dgf .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ddaca ,_abegc :=_efgdfb .(*_gb .PdfObjectInteger );if !_abegc {_dgf .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_efgdfb );
return nil ,_gb .ErrTypeError ;};_fdba .PaintType =_ddaca ;_efgdfb =_bdgb .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _efgdfb ==nil {_dgf .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fcdac ,_abegc :=_efgdfb .(*_gb .PdfObjectInteger );if !_abegc {_dgf .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_efgdfb );
return nil ,_gb .ErrTypeError ;};_fdba .TilingType =_fcdac ;_efgdfb =_bdgb .Get ("\u0042\u0042\u006f\u0078");if _efgdfb ==nil {_dgf .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_efgdfb =_gb .TraceToDirectObject (_efgdfb );_aafdb ,_abegc :=_efgdfb .(*_gb .PdfObjectArray );if !_abegc {_dgf .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_efgdfb );
return nil ,_gb .ErrTypeError ;};_aggaf ,_accc :=NewPdfRectangle (*_aafdb );if _accc !=nil {_dgf .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_accc );return nil ,_accc ;};_fdba .BBox =_aggaf ;_efgdfb =_bdgb .Get ("\u0058\u0053\u0074e\u0070");
if _efgdfb ==nil {_dgf .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gbea ,_accc :=_gb .GetNumberAsFloat (_efgdfb );if _accc !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gbea );
return nil ,_accc ;};_fdba .XStep =_gb .MakeFloat (_gbea );_efgdfb =_bdgb .Get ("\u0059\u0053\u0074e\u0070");if _efgdfb ==nil {_dgf .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_dcgfd ,_accc :=_gb .GetNumberAsFloat (_efgdfb );if _accc !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_dcgfd );
return nil ,_accc ;};_fdba .YStep =_gb .MakeFloat (_dcgfd );_efgdfb =_bdgb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _efgdfb ==nil {_dgf .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bdgb ,_abegc =_gb .TraceToDirectObject (_efgdfb ).(*_gb .PdfObjectDictionary );if !_abegc {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_efgdfb );
};_aeff ,_accc :=NewPdfPageResourcesFromDict (_bdgb );if _accc !=nil {return nil ,_accc ;};_fdba .Resources =_aeff ;if _fgcg :=_bdgb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fgcg !=nil {_feaab ,_gcddc :=_fgcg .(*_gb .PdfObjectArray );if !_gcddc {_dgf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgcg );
return nil ,_gb .ErrTypeError ;};_fdba .Matrix =_feaab ;};return _fdba ,nil ;};

// GetContentStream returns the pattern cell's content stream
func (_fbge *PdfTilingPattern )GetContentStream ()([]byte ,error ){_cabff ,_ ,_facbb :=_fbge .GetContentStreamWithEncoder ();return _cabff ,_facbb ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cbgd ,_adeaa :=_fb .Open (filePath );if _adeaa !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_adeaa );
return nil ,_adeaa ;};defer _cbgd .Close ();return NewPdfFontFromTTF (_cbgd );};func _gbagf (_cfbba *_gb .PdfIndirectObject )(*PdfOutline ,error ){_acagac ,_eaec :=_cfbba .PdfObject .(*_gb .PdfObjectDictionary );if !_eaec {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cecbg :=NewPdfOutline ();if _cdegd :=_acagac .Get ("\u0054\u0079\u0070\u0065");_cdegd !=nil {_fcec ,_cgge :=_cdegd .(*_gb .PdfObjectName );if _cgge {if *_fcec !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_dgf .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_fcec );
};};};if _cedcff :=_acagac .Get ("\u0043\u006f\u0075n\u0074");_cedcff !=nil {_ebfefg ,_fcdbb :=_gb .GetNumberAsInt64 (_cedcff );if _fcdbb !=nil {return nil ,_fcdbb ;};_cecbg .Count =&_ebfefg ;};return _cecbg ,nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_dba :=NewPdfAnnotation ();_cda :=&PdfAnnotationScreen {};_cda .PdfAnnotation =_dba ;_dba .SetContext (_cda );return _cda ;};

// GetPdfInfo returns the PDF info dictionary.
func (_fbbfb *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_bdged :=PdfInfo {};_acbbg ,_fegbb :=_fbbfb .GetTrailer ();if _fegbb !=nil {return nil ,_fegbb ;};var _cfgd *_gb .PdfObjectDictionary ;_gecb :=_acbbg .Get ("\u0049\u006e\u0066\u006f");switch _bcdeb :=_gecb .(type ){case *_gb .PdfObjectReference :_gbbfe :=_bcdeb ;
_gecb ,_fegbb =_fbbfb .GetIndirectObjectByNumber (int (_gbbfe .ObjectNumber ));_gecb =_gb .TraceToDirectObject (_gecb );if _fegbb !=nil {return nil ,_fegbb ;};_cfgd ,_ =_gecb .(*_gb .PdfObjectDictionary );case *_gb .PdfObjectDictionary :_cfgd =_bcdeb ;
};if _cfgd ==nil {return nil ,_ga .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_gdecd :=range _cfgd .Keys (){switch _gdecd {case "\u0054\u0069\u0074l\u0065":_bdged .Title ,_ =_gb .GetString (_cfgd .Get ("\u0054\u0069\u0074l\u0065"));
case "\u0041\u0075\u0074\u0068\u006f\u0072":_bdged .Author ,_ =_gb .GetString (_cfgd .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_bdged .Subject ,_ =_gb .GetString (_cfgd .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));
case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_bdged .Keywords ,_ =_gb .GetString (_cfgd .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_bdged .Creator ,_ =_gb .GetString (_cfgd .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));
case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_bdged .Producer ,_ =_gb .GetString (_cfgd .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_bdged .Trapped ,_ =_gb .GetName (_cfgd .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));
case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _abdef ,_efbcf :=_gb .GetString (_cfgd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_efbcf &&_abdef .String ()!=""{_agfda ,_faefgf :=NewPdfDate (_abdef .String ());
if _faefgf !=nil {return nil ,_faefgf ;};_bdged .CreationDate =&_agfda ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _dgegd ,_ddfc :=_gb .GetString (_cfgd .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_ddfc &&_dgegd .String ()!=""{_cfgbg ,_gbga :=NewPdfDate (_dgegd .String ());
if _gbga !=nil {return nil ,_gbga ;};_bdged .ModifiedDate =&_cfgbg ;};default:_bgeae ,_ :=_gb .GetString (_cfgd .Get (_gdecd ));if _bdged ._acdf ==nil {_bdged ._acdf =_gb .MakeDict ();};_bdged ._acdf .Set (_gdecd ,_bgeae );};};return &_bdged ,nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_ggec :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_ggec ;};

// K returns the value of the key component of the color.
func (_geaa *PdfColorDeviceCMYK )K ()float64 {return _geaa [3]};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_aaede *pdfCIDFontType0 )ToPdfObject ()_gb .PdfObject {return _gb .MakeNull ()};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_gb .PdfObject ;GetContainingPdfObject ()_gb .PdfObject ;};

// R returns the value of the red component of the color.
func (_fdade *PdfColorDeviceRGB )R ()float64 {return _fdade [0]};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_dfgg *PdfWriter )SetOptimizer (optimizer Optimizer ){_dfgg ._cccfc =optimizer };func (_gegd *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_ggbag *PdfPageResources )SetColorspaceByName (keyName _gb .PdfObjectName ,cs PdfColorspace )error {_gcgad ,_eebc :=_ggbag .GetColorspaces ();if _eebc !=nil {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eebc );
return _eebc ;};if _gcgad ==nil {_gcgad =NewPdfPageResourcesColorspaces ();_ggbag .SetColorSpace (_gcgad );};_gcgad .Set (keyName ,cs );return nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_feec *PdfOutlineTreeNode )ToPdfObject ()_gb .PdfObject {return _feec .GetContext ().ToPdfObject ()};func (_dfdd *PdfFont )baseFields ()*fontCommon {if _dfdd ._cbab ==nil {_dgf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _dfdd ._cbab .baseFields ();};func (_dccdg *LTV )enable (_fabb ,_bgbd []*_g .Certificate ,_gdfb string )error {_gdefe ,_agbfe ,_ccdbc :=_dccdg .buildCertChain (_fabb ,_bgbd );if _ccdbc !=nil {return _ccdbc ;};_cfeee ,_ccdbc :=_dccdg .getCerts (_gdefe );
if _ccdbc !=nil {return _ccdbc ;};_gcff ,_ccdbc :=_dccdg .getOCSPs (_gdefe ,_agbfe );if _ccdbc !=nil {return _ccdbc ;};_geddb ,_ccdbc :=_dccdg .getCRLs (_gdefe );if _ccdbc !=nil {return _ccdbc ;};_bddde :=_dccdg ._egce ;_fbfa ,_ccdbc :=_bddde .addCerts (_cfeee );
if _ccdbc !=nil {return _ccdbc ;};_gcfcf ,_ccdbc :=_bddde .addOCSPs (_gcff );if _ccdbc !=nil {return _ccdbc ;};_faaed ,_ccdbc :=_bddde .addCRLs (_geddb );if _ccdbc !=nil {return _ccdbc ;};if _gdfb !=""{_bddde .VRI [_gdfb ]=&VRI {Cert :_fbfa ,OCSP :_gcfcf ,CRL :_faaed };
};_dccdg ._aaaed .SetDSS (_bddde );return nil ;};func (_bcebc *fontFile )parseASCIIPart (_bfbfa []byte )error {if len (_bfbfa )< 2||string (_bfbfa [:2])!="\u0025\u0021"{return _ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_fgbc ,_agac ,_ebeb :=_bfggc (_bfbfa );if _ebeb !=nil {return _ebeb ;};_dead :=_ggfc (_fgbc );_bcebc ._gdaa =_dead ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _bcebc ._gdaa ==""{_dgf .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _agac !=""{_cadcg ,_addbf :=_fdbfa (_agac );if _addbf !=nil {return _addbf ;};_bfggf ,_addbf :=_fed .NewCustomSimpleTextEncoder (_cadcg ,nil );if _addbf !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_addbf );
return nil ;};_bcebc ._baage =_bfggf ;};return nil ;};func _edef (_fadd _gb .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_gbdecc :=NewPdfColorspaceSpecialIndexed ();if _ceca ,_afac :=_fadd .(*_gb .PdfIndirectObject );_afac {_gbdecc ._fddb =_ceca ;
};_fadd =_gb .TraceToDirectObject (_fadd );_gadg ,_cgdf :=_fadd .(*_gb .PdfObjectArray );if !_cgdf {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gadg .Len ()!=4{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_fadd =_gadg .Get (0);_cfag ,_cgdf :=_fadd .(*_gb .PdfObjectName );if !_cgdf {return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_cfag !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_fadd =_gadg .Get (1);_aafdg ,_ccgg :=DetermineColorspaceNameFromPdfObject (_fadd );if _ccgg !=nil {return nil ,_ccgg ;};if _aafdg =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_aafdg =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dgf .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_aafdg );
return nil ,_gffc ;};_aefg ,_ccgg :=NewPdfColorspaceFromPdfObject (_fadd );if _ccgg !=nil {return nil ,_ccgg ;};_gbdecc .Base =_aefg ;_fadd =_gadg .Get (2);_gegge ,_ccgg :=_gb .GetNumberAsInt64 (_fadd );if _ccgg !=nil {return nil ,_ccgg ;};if _gegge > 255{return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_gbdecc .HiVal =int (_gegge );_fadd =_gadg .Get (3);_gbdecc .Lookup =_fadd ;_fadd =_gb .TraceToDirectObject (_fadd );var _ceab []byte ;if _ddbad ,_ceae :=_fadd .(*_gb .PdfObjectString );_ceae {_ceab =_ddbad .Bytes ();_dgf .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_ceab );
}else if _cgfg ,_cefe :=_fadd .(*_gb .PdfObjectStream );_cefe {_dgf .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_fadd .String ());_dgf .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_cgfg .Stream ),_cgfg .Stream );
_debf ,_dfcf :=_gb .DecodeStream (_cgfg );if _dfcf !=nil {return nil ,_dfcf ;};_dgf .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_debf ),_debf );_ceab =_debf ;}else {_dgf .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_fadd );
return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_ceab )< _gbdecc .Base .GetNumComponents ()*(_gbdecc .HiVal +1){_dgf .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_dgf .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_ceab ),_gbdecc .Base .GetNumComponents (),_gbdecc .HiVal );
}else {_ceab =_ceab [:_gbdecc .Base .GetNumComponents ()*(_gbdecc .HiVal +1)];};_gbdecc ._acag =_ceab ;return _gbdecc ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_cbbaf *PdfField )Flags ()FieldFlag {var _cgebc FieldFlag ;_aeef ,_dfea :=_cbbaf .inherit (func (_gbbeb *PdfField )bool {if _gbbeb .Ff !=nil {_cgebc =FieldFlag (*_cbbaf .Ff );return true ;};return false ;});if _dfea !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_dfea );
};if !_aeef {_dgf .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _cgebc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_afef *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_afef .Base .GetNumComponents ();_dggg :=int (vals [0])*N ;
if _dggg < 0||(_dggg +N -1)>=len (_afef ._acag ){return nil ,_ga .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_dfcga :=_afef ._acag [_dggg :_dggg +N ];var _ecgg []float64 ;for _ ,_fdaa :=range _dfcga {_ecgg =append (_ecgg ,float64 (_fdaa )/255.0);
};_gbagb ,_ddac :=_afef .Base .ColorFromFloats (_ecgg );if _ddac !=nil {return nil ,_ddac ;};return _gbagb ,nil ;};func _cgdgbb (_abfgf *_gb .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bbfb :=PdfShadingType7 {};_gbddc :=_abfgf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gbddc ==nil {_dgf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_afefc ,_adffc :=_gbddc .(*_gb .PdfObjectInteger );if !_adffc {_dgf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbddc );
return nil ,_gb .ErrTypeError ;};_bbfb .BitsPerCoordinate =_afefc ;_gbddc =_abfgf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gbddc ==nil {_dgf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_afefc ,_adffc =_gbddc .(*_gb .PdfObjectInteger );if !_adffc {_dgf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gbddc );
return nil ,_gb .ErrTypeError ;};_bbfb .BitsPerComponent =_afefc ;_gbddc =_abfgf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gbddc ==nil {_dgf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_afefc ,_adffc =_gbddc .(*_gb .PdfObjectInteger );if !_adffc {_dgf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gbddc );
return nil ,_gb .ErrTypeError ;};_bbfb .BitsPerComponent =_afefc ;_gbddc =_abfgf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gbddc ==nil {_dgf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fdaga ,_adffc :=_gbddc .(*_gb .PdfObjectArray );if !_adffc {_dgf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gbddc );
return nil ,_gb .ErrTypeError ;};_bbfb .Decode =_fdaga ;if _fgfgb :=_abfgf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fgfgb !=nil {_bbfb .Function =[]PdfFunction {};if _defcd ,_defea :=_fgfgb .(*_gb .PdfObjectArray );_defea {for _ ,_dedgf :=range _defcd .Elements (){_edga ,_eaeed :=_ceagc (_dedgf );
if _eaeed !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eaeed );return nil ,_eaeed ;};_bbfb .Function =append (_bbfb .Function ,_edga );
};}else {_gdgga ,_ggdd :=_ceagc (_fgfgb );if _ggdd !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggdd );return nil ,_ggdd ;
};_bbfb .Function =append (_bbfb .Function ,_gdgga );};};return &_bbfb ,nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_ecdd *_gb .PdfIndirectObject ;};func _geggeg (_cfecd *_gb .PdfObjectDictionary ,_deed *fontCommon )(*pdfCIDFontType0 ,error ){if _deed ._cedad !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_dgf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_deed );
return nil ,_gb .ErrRangeError ;};_ecaaf :=_dcfb (_deed );_bfad ,_cgbf :=_gb .GetDict (_cfecd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cgbf {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_deed );
return nil ,ErrRequiredAttributeMissing ;};_ecaaf .CIDSystemInfo =_bfad ;_ecaaf .DW =_cfecd .Get ("\u0044\u0057");_ecaaf .W =_cfecd .Get ("\u0057");_ecaaf .DW2 =_cfecd .Get ("\u0044\u0057\u0032");_ecaaf .W2 =_cfecd .Get ("\u0057\u0032");_ecaaf ._beda =1000.0;
if _cddc ,_bdffc :=_gb .GetNumberAsFloat (_ecaaf .DW );_bdffc ==nil {_ecaaf ._beda =_cddc ;};_eeddd ,_fafa :=_cfce (_ecaaf .W );if _fafa !=nil {return nil ,_fafa ;};if _eeddd ==nil {_eeddd =map[_fed .CharCode ]float64 {};};_ecaaf ._dacag =_eeddd ;return _ecaaf ,nil ;
};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_aebg *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ga .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_agae ,_cbbdf :=_fe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abecg ,img ._ggcdd );if _cbbdf !=nil {return img ,_cbbdf ;};_ecec ,_cbbdf :=_fe .NRGBAConverter .Convert (_agae );
if _cbbdf !=nil {return img ,_cbbdf ;};_bcda :=_aecb (_ecec .Base ());_dgf .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_dgf .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );
_dgf .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_bcda .Data );_dgf .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_bcda );return _bcda ,nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_cefd *PdfField )SetContext (ctx PdfModel ){_cefd ._gbce =ctx };func _gagd (_egeca *_gb .PdfObjectDictionary )(*PdfShadingType6 ,error ){_gddfb :=PdfShadingType6 {};_cfgdb :=_egeca .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cfgdb ==nil {_dgf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bcfcbe ,_bbbe :=_cfgdb .(*_gb .PdfObjectInteger );if !_bbbe {_dgf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfgdb );
return nil ,_gb .ErrTypeError ;};_gddfb .BitsPerCoordinate =_bcfcbe ;_cfgdb =_egeca .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cfgdb ==nil {_dgf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bcfcbe ,_bbbe =_cfgdb .(*_gb .PdfObjectInteger );if !_bbbe {_dgf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cfgdb );
return nil ,_gb .ErrTypeError ;};_gddfb .BitsPerComponent =_bcfcbe ;_cfgdb =_egeca .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cfgdb ==nil {_dgf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bcfcbe ,_bbbe =_cfgdb .(*_gb .PdfObjectInteger );if !_bbbe {_dgf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cfgdb );
return nil ,_gb .ErrTypeError ;};_gddfb .BitsPerComponent =_bcfcbe ;_cfgdb =_egeca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cfgdb ==nil {_dgf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dbddc ,_bbbe :=_cfgdb .(*_gb .PdfObjectArray );if !_bbbe {_dgf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cfgdb );
return nil ,_gb .ErrTypeError ;};_gddfb .Decode =_dbddc ;if _gcgea :=_egeca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gcgea !=nil {_gddfb .Function =[]PdfFunction {};if _aabgb ,_gbbdc :=_gcgea .(*_gb .PdfObjectArray );_gbbdc {for _ ,_baeg :=range _aabgb .Elements (){_bbaaa ,_dfaaa :=_ceagc (_baeg );
if _dfaaa !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfaaa );return nil ,_dfaaa ;};_gddfb .Function =append (_gddfb .Function ,_bbaaa );
};}else {_feaf ,_fcaab :=_ceagc (_gcgea );if _fcaab !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcaab );return nil ,_fcaab ;
};_gddfb .Function =append (_gddfb .Function ,_feaf );};};return &_gddfb ,nil ;};func (_fba *PdfReader )newPdfActionLaunchFromDict (_ffd *_gb .PdfObjectDictionary )(*PdfActionLaunch ,error ){_fbe ,_abd :=_ebg (_ffd .Get ("\u0046"));if _abd !=nil {return nil ,_abd ;
};return &PdfActionLaunch {Win :_ffd .Get ("\u0057\u0069\u006e"),Mac :_ffd .Get ("\u004d\u0061\u0063"),Unix :_ffd .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_ffd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fbe },nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_ecag FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_ecag .Mask ()|fl .Mask ())};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_gb .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_efag *_gb .PdfIndirectObject ;};

// GetBorderWidth returns the border style's width.
func (_dbffc *PdfBorderStyle )GetBorderWidth ()float64 {if _dbffc .W ==nil {return 1;};return *_dbffc .W ;};func (_fcdg *PdfReader )newPdfAnnotationRichMediaFromDict (_bbdf *_gb .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_abag :=&PdfAnnotationRichMedia {};
_abag .RichMediaSettings =_bbdf .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_abag .RichMediaContent =_bbdf .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _abag ,nil ;};func (_ceg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_edce *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _edce ._bcaggd .(*PdfTilingPattern );};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_beb :=NewPdfAction ();_ggd :=&PdfActionGoTo3DView {};_ggd .PdfAction =_beb ;_beb .SetContext (_ggd );return _ggd ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_fcacd *PdfColorspaceDeviceN )ToPdfObject ()_gb .PdfObject {_dagg :=_gb .MakeArray (_gb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_dagg .Append (_fcacd .ColorantNames );_dagg .Append (_fcacd .AlternateSpace .ToPdfObject ());_dagg .Append (_fcacd .TintTransform .ToPdfObject ());
if _fcacd .Attributes !=nil {_dagg .Append (_fcacd .Attributes .ToPdfObject ());};if _fcacd ._defbe !=nil {_fcacd ._defbe .PdfObject =_dagg ;return _fcacd ._defbe ;};return _dagg ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_gccg *Outline )ToPdfOutline ()*PdfOutline {_edded :=NewPdfOutline ();var _agceb []*PdfOutlineItem ;var _egcaf int64 ;var _efae *PdfOutlineItem ;for _ ,_fdeee :=range _gccg .Entries {_cecad ,_aeac :=_fdeee .ToPdfOutlineItem ();_cecad .Parent =&_edded .PdfOutlineTreeNode ;
if _efae !=nil {_efae .Next =&_cecad .PdfOutlineTreeNode ;_cecad .Prev =&_efae .PdfOutlineTreeNode ;};_agceb =append (_agceb ,_cecad );_egcaf +=_aeac ;_efae =_cecad ;};_gbcfb :=int64 (len (_agceb ));_egcaf +=_gbcfb ;if _gbcfb > 0{_edded .First =&_agceb [0].PdfOutlineTreeNode ;
_edded .Last =&_agceb [_gbcfb -1].PdfOutlineTreeNode ;_edded .Count =&_egcaf ;};return _edded ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cgdc .Lock ();defer _cgdc .Unlock ();_ecbfg =title };

// ValidateSignatures validates digital signatures in the document.
func (_dcgdb *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _dcgdb .AcroForm ==nil {return nil ,nil ;};if _dcgdb .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_gdcda *PdfSignature ;
_bcceg *PdfField ;_bbdbae SignatureHandler ;};var _dgdff []*sigFieldPair ;for _ ,_agacb :=range _dcgdb .AcroForm .AllFields (){if _agacb .V ==nil {continue ;};if _afgbee ,_ccce :=_gb .GetDict (_agacb .V );_ccce {if _aaefb ,_eadcdf :=_gb .GetNameVal (_afgbee .Get ("\u0054\u0079\u0070\u0065"));
_eadcdf &&_aaefb =="\u0053\u0069\u0067"{_cbcea ,_adcea :=_gb .GetIndirect (_agacb .V );if !_adcea {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_fbacg ,_dfed :=_dcgdb .newPdfSignatureFromIndirect (_cbcea );if _dfed !=nil {return nil ,_dfed ;};var _afdbf SignatureHandler ;for _ ,_ccecgc :=range handlers {if _ccecgc .IsApplicable (_fbacg ){_afdbf =_ccecgc ;break ;};};
_dgdff =append (_dgdff ,&sigFieldPair {_gdcda :_fbacg ,_bcceg :_agacb ,_bbdbae :_afdbf });};};};var _fbcbg []SignatureValidationResult ;for _ ,_gafac :=range _dgdff {_dgdcf :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_gafac ._bcceg }};
if _gafac ._bbdbae ==nil {_dgdcf .Errors =append (_dgdcf .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_fbcbg =append (_fbcbg ,_dgdcf );continue ;};_ggfcg ,_cgffb :=_gafac ._bbdbae .NewDigest (_gafac ._gdcda );
if _cgffb !=nil {_dgdcf .Errors =append (_dgdcf .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_cgffb .Error ());_fbcbg =append (_fbcbg ,_dgdcf );continue ;};_eaadb :=_gafac ._gdcda .ByteRange ;if _eaadb ==nil {_dgdcf .Errors =append (_dgdcf .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_fbcbg =append (_fbcbg ,_dgdcf );continue ;};for _fffga :=0;_fffga < _eaadb .Len ();_fffga =_fffga +2{_dbbef ,_ :=_gb .GetNumberAsInt64 (_eaadb .Get (_fffga ));_baddg ,_ :=_gb .GetIntVal (_eaadb .Get (_fffga +1));if _ ,_gcbae :=_dcgdb ._cgae .Seek (_dbbef ,_cf .SeekStart );
_gcbae !=nil {return nil ,_gcbae ;};_effe :=make ([]byte ,_baddg );if _ ,_ccba :=_dcgdb ._cgae .Read (_effe );_ccba !=nil {return nil ,_ccba ;};_ggfcg .Write (_effe );};_dfag ,_cgffb :=_gafac ._bbdbae .Validate (_gafac ._gdcda ,_ggfcg );if _cgffb !=nil {return nil ,_cgffb ;
};_dfag .Name =_gafac ._gdcda .Name .Decoded ();_dfag .Reason =_gafac ._gdcda .Reason .Decoded ();if _gafac ._gdcda .M !=nil {_ecagc ,_efcef :=NewPdfDate (_gafac ._gdcda .M .String ());if _efcef !=nil {_dfag .Errors =append (_dfag .Errors ,_efcef .Error ());
continue ;};_dfag .Date =_ecagc ;};_dfag .ContactInfo =_gafac ._gdcda .ContactInfo .Decoded ();_dfag .Location =_gafac ._gdcda .Location .Decoded ();_dfag .Fields =_dgdcf .Fields ;_fbcbg =append (_fbcbg ,_dfag );};return _fbcbg ,nil ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_gb .PdfObjectStream ;Data []byte ;_aeca *_gb .PdfIndirectObject ;_aafd *_gb .PdfObjectStream ;};func (_cbb *PdfReader )newPdfActionNamedFromDict (_gge *_gb .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_gge .Get ("\u004e")},nil ;
};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_gb .PdfObjectInteger ;BitsPerComponent *_gb .PdfObjectInteger ;BitsPerFlag *_gb .PdfObjectInteger ;Decode *_gb .PdfObjectArray ;Function []PdfFunction ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_cacfg *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_aaedb ,_eaef :=color .(*PdfColorPattern );if !_eaef {_dgf .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _aaedb .Color ==nil {return color ,nil ;};if _cacfg .UnderlyingCS ==nil {return nil ,_ga .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};
return _cacfg .UnderlyingCS .ColorToRGB (_aaedb .Color );};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// String returns a human readable description of `fontfile`.
func (_gcbdf *fontFile )String ()string {_ggcda :="\u005b\u004e\u006f\u006e\u0065\u005d";if _gcbdf ._baage !=nil {_ggcda =_gcbdf ._baage .String ();};return _b .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_gcbdf ._gdaa ,_ggcda );
};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _gb .PdfObject )(*PdfFont ,error ){return _edec (fontObj ,true )};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _gb .PdfObject )(_gb .PdfObjectName ,error ){var _fddc *_gb .PdfObjectName ;var _bbgf *_gb .PdfObjectArray ;if _afca ,_edfe :=obj .(*_gb .PdfIndirectObject );_edfe {if _feb ,_gaebb :=_afca .PdfObject .(*_gb .PdfObjectArray );
_gaebb {_bbgf =_feb ;}else if _gbfb ,_gdbd :=_afca .PdfObject .(*_gb .PdfObjectName );_gdbd {_fddc =_gbfb ;};}else if _fegd ,_defc :=obj .(*_gb .PdfObjectArray );_defc {_bbgf =_fegd ;}else if _afba ,_gdgg :=obj .(*_gb .PdfObjectName );_gdgg {_fddc =_afba ;
};if _fddc !=nil {switch *_fddc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_fddc ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_fddc ,nil ;
};};if _bbgf !=nil &&_bbgf .Len ()> 0{if _ggdf ,_gbcd :=_bbgf .Get (0).(*_gb .PdfObjectName );_gbcd {switch *_ggdf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bbgf .Len ()==1{return *_ggdf ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_ggdf ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_ggdf ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_ggdf ,nil ;};};};return "",nil ;};

// A returns the value of the A component of the color.
func (_aedd *PdfColorCalRGB )A ()float64 {return _aedd [0]};func (_fdacb *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _fdacb ._fcgcf };

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _gb .PdfObject )(PdfColorspace ,error ){var _aadb *_gb .PdfIndirectObject ;var _ggbf *_gb .PdfObjectName ;var _gcceb *_gb .PdfObjectArray ;if _agcea ,_ceaf :=obj .(*_gb .PdfIndirectObject );_ceaf {_aadb =_agcea ;
};obj =_gb .TraceToDirectObject (obj );switch _eagg :=obj .(type ){case *_gb .PdfObjectArray :_gcceb =_eagg ;case *_gb .PdfObjectName :_ggbf =_eagg ;};if _ggbf !=nil {switch *_ggbf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_dgf .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_ggbf );return nil ,_gffc ;};};if _gcceb !=nil &&_gcceb .Len ()> 0{var _fadg _gb .PdfObject =_aadb ;
if _aadb ==nil {_fadg =_gcceb ;};if _aebf ,_egcf :=_gb .GetName (_gcceb .Get (0));_egcf {switch _aebf .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _gcceb .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _gcceb .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gcceb .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _cfdc (_fadg );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _egbc (_fadg );
case "\u004c\u0061\u0062":return _bgfe (_fadg );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _adcde (_fadg );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _acfd (_fadg );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _edef (_fadg );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _fagbgf (_fadg );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _bddfd (_fadg );default:_dgf .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_aebf );
};};};_dgf .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_eea *_gb .PdfObjectDictionary ;_cfgc *_gb .PdfIndirectObject ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_dgc :=NewPdfAction ();_gf :=&PdfActionSubmitForm {};_gf .PdfAction =_dgc ;_dgc .SetContext (_gf );return _gf ;};func (_dbbe *PdfReader )newPdfAnnotationWidgetFromDict (_aca *_gb .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_gdge :=PdfAnnotationWidget {};
_gdge .H =_aca .Get ("\u0048");_gdge .MK =_aca .Get ("\u004d\u004b");_gdge .A =_aca .Get ("\u0041");_gdge .AA =_aca .Get ("\u0041\u0041");_gdge .BS =_aca .Get ("\u0042\u0053");_gdge .Parent =_aca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_gdge ,nil ;
};func _gbef (_ebcd *_gb .PdfObjectDictionary )(*PdfShadingType4 ,error ){_cgegc :=PdfShadingType4 {};_edade :=_ebcd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _edade ==nil {_dgf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fcgee ,_bdbbf :=_edade .(*_gb .PdfObjectInteger );if !_bdbbf {_dgf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edade );
return nil ,_gb .ErrTypeError ;};_cgegc .BitsPerCoordinate =_fcgee ;_edade =_ebcd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _edade ==nil {_dgf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fcgee ,_bdbbf =_edade .(*_gb .PdfObjectInteger );if !_bdbbf {_dgf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_edade );
return nil ,_gb .ErrTypeError ;};_cgegc .BitsPerComponent =_fcgee ;_edade =_ebcd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _edade ==nil {_dgf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fcgee ,_bdbbf =_edade .(*_gb .PdfObjectInteger );if !_bdbbf {_dgf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_edade );
return nil ,_gb .ErrTypeError ;};_cgegc .BitsPerComponent =_fcgee ;_edade =_ebcd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _edade ==nil {_dgf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eadeg ,_bdbbf :=_edade .(*_gb .PdfObjectArray );if !_bdbbf {_dgf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edade );
return nil ,_gb .ErrTypeError ;};_cgegc .Decode =_eadeg ;_edade =_ebcd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _edade ==nil {_dgf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cgegc .Function =[]PdfFunction {};if _dedc ,_egdg :=_edade .(*_gb .PdfObjectArray );_egdg {for _ ,_cagfc :=range _dedc .Elements (){_fddg ,_ebaa :=_ceagc (_cagfc );if _ebaa !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebaa );
return nil ,_ebaa ;};_cgegc .Function =append (_cgegc .Function ,_fddg );};}else {_cfaeg ,_cbdeb :=_ceagc (_edade );if _cbdeb !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbdeb );
return nil ,_cbdeb ;};_cgegc .Function =append (_cgegc .Function ,_cfaeg );};return &_cgegc ,nil ;};func (_ecfe *pdfFontType0 )bytesToCharcodes (_baag []byte )([]_fed .CharCode ,bool ){if _ecfe ._cdab ==nil {return nil ,false ;};_fefff ,_cbffa :=_ecfe ._cdab .BytesToCharcodes (_baag );
if !_cbffa {return nil ,false ;};_cbcc :=make ([]_fed .CharCode ,len (_fefff ));for _cbcfe ,_gdagb :=range _fefff {_cbcc [_cbcfe ]=_fed .CharCode (_gdagb );};return _cbcc ,true ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_afbe :=NewPdfAnnotation ();_gac :=&PdfAnnotationSound {};_gac .PdfAnnotation =_afbe ;_gac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afbe .SetContext (_gac );return _gac ;};

// ToGoTime returns the date in time.Time format.
func (_gggffd PdfDate )ToGoTime ()_f .Time {_gcgae :=int (_gggffd ._fefca *60*60+_gggffd ._fddca *60);switch _gggffd ._gbdde {case '-':_gcgae =-_gcgae ;case 'Z':_gcgae =0;};_abbfc :=_b .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_gggffd ._gbdde ,_gggffd ._fefca ,_gggffd ._fddca );
_aaece :=_f .FixedZone (_abbfc ,_gcgae );return _f .Date (int (_gggffd ._dcage ),_f .Month (_gggffd ._fgecg ),int (_gggffd ._fdafa ),int (_gggffd ._ccbea ),int (_gggffd ._aafc ),int (_gggffd ._cfddc ),0,_aaece );};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_cdceb *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_gb .PdfObject ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _gb .StreamEncoder ;FormType _gb .PdfObject ;BBox _gb .PdfObject ;Matrix _gb .PdfObject ;Resources *PdfPageResources ;Group _gb .PdfObject ;Ref _gb .PdfObject ;MetaData _gb .PdfObject ;PieceInfo _gb .PdfObject ;LastModified _gb .PdfObject ;
StructParent _gb .PdfObject ;StructParents _gb .PdfObject ;OPI _gb .PdfObject ;OC _gb .PdfObject ;Name _gb .PdfObject ;

// Stream data.
Stream []byte ;_fadf *_gb .PdfObjectStream ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _f .Time )(PdfDate ,error ){_dgfeb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_ebdce ,_ :=_fa .ParseInt (_dgfeb [1:3],10,32);_cccc ,_ :=_fa .ParseInt (_dgfeb [4:6],10,32);return PdfDate {_dcage :int64 (timeObj .Year ()),_fgecg :int64 (timeObj .Month ()),_fdafa :int64 (timeObj .Day ()),_ccbea :int64 (timeObj .Hour ()),_aafc :int64 (timeObj .Minute ()),_cfddc :int64 (timeObj .Second ()),_gbdde :_dgfeb [0],_fefca :_ebdce ,_fddca :_cccc },nil ;
};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_dddgc *Image )ColorAt (x ,y int )(_af .Color ,error ){_gafc :=_fe .BytesPerLine (int (_dddgc .Width ),int (_dddgc .BitsPerComponent ),_dddgc .ColorComponents );switch _dddgc .ColorComponents {case 1:return _fe .ColorAtGrayscale (x ,y ,int (_dddgc .BitsPerComponent ),_gafc ,_dddgc .Data ,_dddgc ._ggcdd );
case 3:return _fe .ColorAtNRGBA (x ,y ,int (_dddgc .Width ),_gafc ,int (_dddgc .BitsPerComponent ),_dddgc .Data ,_dddgc ._abecg ,_dddgc ._ggcdd );case 4:return _fe .ColorAtCMYK (x ,y ,int (_dddgc .Width ),_dddgc .Data ,_dddgc ._ggcdd );};_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dddgc .ColorComponents ,_dddgc .BitsPerComponent );
return nil ,_ga .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// ToPdfObject implements interface PdfModel.
func (_eegd *PdfAnnotationScreen )ToPdfObject ()_gb .PdfObject {_eegd .PdfAnnotation .ToPdfObject ();_efd :=_eegd ._dccf ;_dedb :=_efd .PdfObject .(*_gb .PdfObjectDictionary );_dedb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_dedb .SetIfNotNil ("\u0054",_eegd .T );_dedb .SetIfNotNil ("\u004d\u004b",_eegd .MK );_dedb .SetIfNotNil ("\u0041",_eegd .A );_dedb .SetIfNotNil ("\u0041\u0041",_eegd .AA );return _efd ;};

// Encoder returns the font's text encoder.
func (_eacc pdfFontType0 )Encoder ()_fed .TextEncoder {return _eacc ._bdde };

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_ggfd *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_adbd ,_ ,_geea :=_ggfd .CharcodesToUnicodeWithStats (_ggfd .BytesToCharcodes (data ));_fada :=_fed .ExpandLigatures (_adbd );return _fada ,_ff .RuneCountInString (_fada ),_geea ;
};

// ToPdfObject implements interface PdfModel.
func (_dgefe *PdfAnnotationRichMedia )ToPdfObject ()_gb .PdfObject {_dgefe .PdfAnnotation .ToPdfObject ();_fea :=_dgefe ._dccf ;_afa :=_fea .PdfObject .(*_gb .PdfObjectDictionary );_afa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_afa .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_dgefe .RichMediaSettings );_afa .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_dgefe .RichMediaContent );
return _fea ;};

// String returns a string representation of what flags are set.
func (_eggd FieldFlag )String ()string {_egba :="";if _eggd ==FieldFlagClear {_egba ="\u0043\u006c\u0065a\u0072";return _egba ;};if _eggd &FieldFlagReadOnly > 0{_egba +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _eggd &FieldFlagRequired > 0{_egba +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _eggd &FieldFlagNoExport > 0{_egba +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _eggd &FieldFlagNoToggleToOff > 0{_egba +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _eggd &FieldFlagRadio > 0{_egba +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _eggd &FieldFlagPushbutton > 0{_egba +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _eggd &FieldFlagRadiosInUnision > 0{_egba +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _eggd &FieldFlagMultiline > 0{_egba +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _eggd &FieldFlagPassword > 0{_egba +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _eggd &FieldFlagFileSelect > 0{_egba +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _eggd &FieldFlagDoNotScroll > 0{_egba +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _eggd &FieldFlagComb > 0{_egba +="\u007c\u0043\u006fm\u0062";};if _eggd &FieldFlagRichText > 0{_egba +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _eggd &FieldFlagDoNotSpellCheck > 0{_egba +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _eggd &FieldFlagCombo > 0{_egba +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _eggd &FieldFlagEdit > 0{_egba +="\u007c\u0045\u0064i\u0074";};if _eggd &FieldFlagSort > 0{_egba +="\u007c\u0053\u006fr\u0074";};if _eggd &FieldFlagMultiSelect > 0{_egba +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _eggd &FieldFlagCommitOnSelChange > 0{_egba +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _fd .Trim (_egba ,"\u007c");};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_cbdg *PdfFieldButton )IsPush ()bool {return _cbdg .GetType ()==ButtonTypePush };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fgca *PdfShadingType1 )ToPdfObject ()_gb .PdfObject {_fgca .PdfShading .ToPdfObject ();_baaac ,_ffebg :=_fgca .getShadingDict ();if _ffebg !=nil {_dgf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fgca .Domain !=nil {_baaac .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgca .Domain );};if _fgca .Matrix !=nil {_baaac .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fgca .Matrix );};if _fgca .Function !=nil {if len (_fgca .Function )==1{_baaac .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgca .Function [0].ToPdfObject ());
}else {_baefe :=_gb .MakeArray ();for _ ,_cggbg :=range _fgca .Function {_baefe .Append (_cggbg .ToPdfObject ());};_baaac .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_baefe );};};return _fgca ._gccef ;};var _ababf =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func (_dcbbc *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _dcbbc ._gedb .GetCrypter ()!=nil &&!_dcbbc ._gedb .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ceea :=_dcbbc ._ggce ;_gcbc :=_ceea .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _gcbc ==nil {return nil ,nil ;};_fadb ,_ :=_gb .GetIndirect (_gcbc );_gcbc =_gb .TraceToDirectObject (_gcbc );if _gb .IsNullObject (_gcbc ){_dgf .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_eddg ,_gefd :=_gb .GetDict (_gcbc );if !_gefd {_dgf .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gcbc );_dgf .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gcbc );};_dgf .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_dgf .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_dcbbc ._ggea {_fcff :=_dcbbc .traverseObjectData (_eddg );
if _fcff !=nil {_dgf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_fcff );
return nil ,_fcff ;};};_aabdb ,_faddcf :=_dcbbc .newPdfAcroFormFromDict (_fadb ,_eddg );if _faddcf !=nil {return nil ,_faddcf ;};return _aabdb ,nil ;};func _cadad (_fgfc []byte )bool {if len (_fgfc )< 4{return true ;};for _dfgf :=range _fgfc [:4]{_ebgbd :=rune (_dfgf );
if !_dbf .Is (_dbf .ASCII_Hex_Digit ,_ebgbd )&&!_dbf .IsSpace (_ebgbd ){return true ;};};return false ;};

// ToPdfObject implements interface PdfModel.
func (_agcg *PdfBorderStyle )ToPdfObject ()_gb .PdfObject {_cccb :=_gb .MakeDict ();if _agcg ._fccg !=nil {if _ccde ,_fcg :=_agcg ._fccg .(*_gb .PdfIndirectObject );_fcg {_ccde .PdfObject =_cccb ;};};_cccb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _agcg .W !=nil {_cccb .Set ("\u0057",_gb .MakeFloat (*_agcg .W ));};if _agcg .S !=nil {_cccb .Set ("\u0053",_gb .MakeName (_agcg .S .GetPdfName ()));};if _agcg .D !=nil {_cccb .Set ("\u0044",_gb .MakeArrayFromIntegers (*_agcg .D ));};if _agcg ._fccg !=nil {return _agcg ._fccg ;
};return _cccb ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_faeae []_gb .PdfObject )([]_gb .PdfObject ,error );};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_fdda *PdfColorspaceICCBased )ToPdfObject ()_gb .PdfObject {_geggb :=&_gb .PdfObjectArray {};_geggb .Append (_gb .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _agcf *_gb .PdfObjectStream ;if _fdda ._aafd !=nil {_agcf =_fdda ._aafd ;
}else {_agcf =&_gb .PdfObjectStream {};};_adde :=_gb .MakeDict ();_adde .Set ("\u004e",_gb .MakeInteger (int64 (_fdda .N )));if _fdda .Alternate !=nil {_adde .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_fdda .Alternate .ToPdfObject ());};if _fdda .Metadata !=nil {_adde .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fdda .Metadata );
};if _fdda .Range !=nil {var _ggae []_gb .PdfObject ;for _ ,_dcbdc :=range _fdda .Range {_ggae =append (_ggae ,_gb .MakeFloat (_dcbdc ));};_adde .Set ("\u0052\u0061\u006eg\u0065",_gb .MakeArray (_ggae ...));};_adde .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_fdda .Data ))));
_agcf .Stream =_fdda .Data ;_agcf .PdfObjectDictionary =_adde ;_geggb .Append (_agcf );if _fdda ._aeca !=nil {_fdda ._aeca .PdfObject =_geggb ;return _fdda ._aeca ;};return _geggb ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// Register registers (caches) a model to primitive object relationship.
func (_fdag *modelManager )Register (primitive _gb .PdfObject ,model PdfModel ){_fdag ._daeg [model ]=primitive ;_fdag ._dbfgg [primitive ]=model ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ggfab *PdfPageResources )GetShadingByName (keyName _gb .PdfObjectName )(*PdfShading ,bool ){if _ggfab .Shading ==nil {return nil ,false ;};_agccd ,_bggeb :=_gb .TraceToDirectObject (_ggfab .Shading ).(*_gb .PdfObjectDictionary );if !_bggeb {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggfab .Shading );
return nil ,false ;};if _bbbgb :=_agccd .Get (keyName );_bbbgb !=nil {_aggfa ,_bfffd :=_febac (_bbbgb );if _bfffd !=nil {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_bfffd );
return nil ,false ;};return _aggfa ,true ;};return nil ,false ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_fedf *_gb .PdfIndirectObject ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _gb .PdfObject ;B _gb .PdfObject ;};

// Subtype returns the font's "Subtype" field.
func (_bggde *PdfFont )Subtype ()string {_eafg :=_bggde .baseFields ()._cedad ;if _dfffe ,_cafd :=_bggde ._cbab .(*pdfFontType0 );_cafd {_eafg =_eafg +"\u003a"+_dfffe .DescendantFont .Subtype ();};return _eafg ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_daad :=PdfColorDeviceRGB {r ,g ,b };return &_daad ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_gbdfd *PdfShading )GetContext ()PdfModel {return _gbdfd ._fbcg };

// GetContentStreams returns the content stream as an array of strings.
func (_faed *PdfPage )GetContentStreams ()([]string ,error ){_cceg :=_faed .GetContentStreamObjs ();var _ebafc []string ;for _ ,_gbcgb :=range _cceg {_agdc ,_eaeef :=_fcfd (_gbcgb );if _eaeef !=nil {return nil ,_eaeef ;};_ebafc =append (_ebafc ,_agdc );
};return _ebafc ,nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_deefb *PdfTilingPattern )ToPdfObject ()_gb .PdfObject {_deefb .PdfPattern .ToPdfObject ();_cdbbg :=_deefb .getDict ();if _deefb .PaintType !=nil {_cdbbg .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_deefb .PaintType );};if _deefb .TilingType !=nil {_cdbbg .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_deefb .TilingType );
};if _deefb .BBox !=nil {_cdbbg .Set ("\u0042\u0042\u006f\u0078",_deefb .BBox .ToPdfObject ());};if _deefb .XStep !=nil {_cdbbg .Set ("\u0058\u0053\u0074e\u0070",_deefb .XStep );};if _deefb .YStep !=nil {_cdbbg .Set ("\u0059\u0053\u0074e\u0070",_deefb .YStep );
};if _deefb .Resources !=nil {_cdbbg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_deefb .Resources .ToPdfObject ());};if _deefb .Matrix !=nil {_cdbbg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_deefb .Matrix );};return _deefb ._agab ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _gb .PdfObject ;RichMediaContent _gb .PdfObject ;};func _dbaeb (_abbbb *[]*PdfField ,_gggcg FieldFilterFunc ,_cfceb bool )[]*PdfField {if _abbbb ==nil {return nil ;};_gbcab :=*_abbbb ;
if len (*_abbbb )==0{return nil ;};_dccae :=_gbcab [:0];if _gggcg ==nil {_gggcg =func (*PdfField )bool {return true };};var _cccbd []*PdfField ;for _ ,_cefa :=range _gbcab {_bddc :=_gggcg (_cefa );if _bddc {_cccbd =append (_cccbd ,_cefa );if len (_cefa .Kids )> 0{_cccbd =append (_cccbd ,_dbaeb (&_cefa .Kids ,_gggcg ,_cfceb )...);
};};if !_cfceb ||!_bddc ||len (_cefa .Kids )> 0{_dccae =append (_dccae ,_cefa );};};*_abbbb =_dccae ;return _cccbd ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;func _bacda (_deecba _gb .PdfObject ,_gadcg *fontCommon )(*_de .CMap ,error ){_fefa ,_bggf :=_gb .GetStream (_deecba );if !_bggf {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_deecba );
return nil ,_gb .ErrTypeError ;};_cedec ,_aeae :=_gb .DecodeStream (_fefa );if _aeae !=nil {return nil ,_aeae ;};_bcfa ,_aeae :=_de .LoadCmapFromData (_cedec ,!_gadcg .isCIDFont ());if _aeae !=nil {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_fefa .ObjectNumber ,_aeae );
};return _bcfa ,_aeae ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_fcfbg :=&PdfPageResources {};_fcfbg ._aecba =_gb .MakeDict ();return _fcfbg ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_bcacb *PdfOutline )GetContainingPdfObject ()_gb .PdfObject {return _bcacb ._begfa };

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_gae :=NewPdfAnnotation ();_eefa :=&PdfAnnotationStamp {};_eefa .PdfAnnotation =_gae ;_eefa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gae .SetContext (_eefa );return _eefa ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fbefd *PdfSignature )GetContainingPdfObject ()_gb .PdfObject {return _fbefd ._cbdae };func (_gdeeg *PdfReader )newPdfPageFromDict (_bceff *_gb .PdfObjectDictionary )(*PdfPage ,error ){_gdead :=NewPdfPage ();_gdead ._gaec =_bceff ;_fcacf :=*_bceff ;
_bdaab ,_dccdd :=_fcacf .Get ("\u0054\u0079\u0070\u0065").(*_gb .PdfObjectName );if !_dccdd {return nil ,_ga .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_bdaab !="\u0050\u0061\u0067\u0065"{return nil ,_ga .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _eagd :=_fcacf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_eagd !=nil {_gdead .Parent =_eagd ;};if _fdadf :=_fcacf .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_fdadf !=nil {_bgfed ,_ecge :=_gb .GetString (_fdadf );if !_ecge {return nil ,_ga .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_ccecg ,_dgba :=NewPdfDate (_bgfed .Str ());if _dgba !=nil {return nil ,_dgba ;};_gdead .LastModified =&_ccecg ;};if _fgea :=_fcacf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fgea !=nil &&!_gb .IsNullObject (_fgea ){_faafc ,_bceea :=_gb .GetDict (_fgea );
if !_bceea {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fgea );};var _ffag error ;_gdead .Resources ,_ffag =NewPdfPageResourcesFromDict (_faafc );
if _ffag !=nil {return nil ,_ffag ;};}else {_fccfa ,_abbgc :=_gdead .getParentResources ();if _abbgc !=nil {return nil ,_abbgc ;};if _fccfa ==nil {_fccfa =NewPdfPageResources ();};_gdead .Resources =_fccfa ;};if _gcbgf :=_fcacf .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_gcbgf !=nil {_bedgc ,_bbcff :=_gb .GetArray (_gcbgf );if !_bbcff {return nil ,_ga .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _cfea error ;
_gdead .MediaBox ,_cfea =NewPdfRectangle (*_bedgc );if _cfea !=nil {return nil ,_cfea ;};};if _fegeb :=_fcacf .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_fegeb !=nil {_ebdcc ,_agdf :=_gb .GetArray (_fegeb );if !_agdf {return nil ,_ga .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _dedd error ;_gdead .CropBox ,_dedd =NewPdfRectangle (*_ebdcc );if _dedd !=nil {return nil ,_dedd ;};};if _dgbf :=_fcacf .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_dgbf !=nil {_dgegf ,_edbgb :=_gb .GetArray (_dgbf );if !_edbgb {return nil ,_ga .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _bbeeb error ;_gdead .BleedBox ,_bbeeb =NewPdfRectangle (*_dgegf );if _bbeeb !=nil {return nil ,_bbeeb ;};};if _cacbe :=_fcacf .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_cacbe !=nil {_feceb ,_caaad :=_gb .GetArray (_cacbe );if !_caaad {return nil ,_ga .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ececa error ;_gdead .TrimBox ,_ececa =NewPdfRectangle (*_feceb );if _ececa !=nil {return nil ,_ececa ;};};if _abce :=_fcacf .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_abce !=nil {_eebb ,_gefgd :=_gb .GetArray (_abce );if !_gefgd {return nil ,_ga .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _daae error ;_gdead .ArtBox ,_daae =NewPdfRectangle (*_eebb );if _daae !=nil {return nil ,_daae ;};};if _bcdd :=_fcacf .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_bcdd !=nil {_gdead .BoxColorInfo =_bcdd ;};if _ebcg :=_fcacf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_ebcg !=nil {_gdead .Contents =_ebcg ;};if _dfgcd :=_fcacf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_dfgcd !=nil {_ffbg ,_effbd :=_gb .GetInt (_dfgcd );if !_effbd {return nil ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fgfag :=int64 (*_ffbg );_gdead .Rotate =&_fgfag ;};if _ebeee :=_fcacf .Get ("\u0047\u0072\u006fu\u0070");_ebeee !=nil {_gdead .Group =_ebeee ;};if _dgcfe :=_fcacf .Get ("\u0054\u0068\u0075m\u0062");_dgcfe !=nil {_gdead .Thumb =_dgcfe ;};if _edbade :=_fcacf .Get ("\u0042");
_edbade !=nil {_gdead .B =_edbade ;};if _eggad :=_fcacf .Get ("\u0044\u0075\u0072");_eggad !=nil {_gdead .Dur =_eggad ;};if _cgaf :=_fcacf .Get ("\u0054\u0072\u0061n\u0073");_cgaf !=nil {_gdead .Trans =_cgaf ;};if _dbba :=_fcacf .Get ("\u0041\u0041");_dbba !=nil {_gdead .AA =_dbba ;
};if _bgfbg :=_fcacf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bgfbg !=nil {_gdead .Metadata =_bgfbg ;};if _ecddd :=_fcacf .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ecddd !=nil {_gdead .PieceInfo =_ecddd ;};if _ccbeg :=_fcacf .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_ccbeg !=nil {_gdead .StructParents =_ccbeg ;};if _efgc :=_fcacf .Get ("\u0049\u0044");_efgc !=nil {_gdead .ID =_efgc ;};if _cdfag :=_fcacf .Get ("\u0050\u005a");_cdfag !=nil {_gdead .PZ =_cdfag ;};if _faegg :=_fcacf .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_faegg !=nil {_gdead .SeparationInfo =_faegg ;};if _gebgg :=_fcacf .Get ("\u0054\u0061\u0062\u0073");_gebgg !=nil {_gdead .Tabs =_gebgg ;};if _fefad :=_fcacf .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_fefad !=nil {_gdead .TemplateInstantiated =_fefad ;};if _ddgea :=_fcacf .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_ddgea !=nil {_gdead .PresSteps =_ddgea ;};if _faccb :=_fcacf .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_faccb !=nil {_gdead .UserUnit =_faccb ;
};if _cfdeg :=_fcacf .Get ("\u0056\u0050");_cfdeg !=nil {_gdead .VP =_cfdeg ;};if _ebba :=_fcacf .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_ebba !=nil {_gdead .Annots =_ebba ;};_gdead ._aefcc =_gdeeg ;return _gdead ,nil ;};type fontFile struct{_gdaa string ;
_bfbfg string ;_baage _fed .SimpleEncoder ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func _gdecc (_dcaa _gb .PdfObject )(*PdfFunctionType3 ,error ){_gcbg :=&PdfFunctionType3 {};var _bcefg *_gb .PdfObjectDictionary ;if _bbcfa ,_gfeec :=_dcaa .(*_gb .PdfIndirectObject );_gfeec {_gdeff ,_adeaf :=_bbcfa .PdfObject .(*_gb .PdfObjectDictionary );
if !_adeaf {return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gcbg ._ecdd =_bbcfa ;_bcefg =_gdeff ;}else if _dgfef ,_bbacf :=_dcaa .(*_gb .PdfObjectDictionary );_bbacf {_bcefg =_dgfef ;}else {return nil ,_ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gdad ,_afga :=_gb .TraceToDirectObject (_bcefg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gb .PdfObjectArray );if !_afga {_dgf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ga .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gdad .Len ()!=2{_dgf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ga .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fbeee ,_ggab :=_gdad .ToFloat64Array ();
if _ggab !=nil {return nil ,_ggab ;};_gcbg .Domain =_fbeee ;_gdad ,_afga =_gb .TraceToDirectObject (_bcefg .Get ("\u0052\u0061\u006eg\u0065")).(*_gb .PdfObjectArray );if _afga {if _gdad .Len ()< 0||_gdad .Len ()%2!=0{return nil ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ddbef ,_bgagc :=_gdad .ToFloat64Array ();if _bgagc !=nil {return nil ,_bgagc ;};_gcbg .Range =_ddbef ;};_gdad ,_afga =_gb .TraceToDirectObject (_bcefg .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_gb .PdfObjectArray );if !_afga {_dgf .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ga .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gcbg .Functions =[]PdfFunction {};
for _ ,_agef :=range _gdad .Elements (){_ebfge ,_edgdcc :=_ceagc (_agef );if _edgdcc !=nil {return nil ,_edgdcc ;};_gcbg .Functions =append (_gcbg .Functions ,_ebfge );};_gdad ,_afga =_gb .TraceToDirectObject (_bcefg .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_gb .PdfObjectArray );
if !_afga {_dgf .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ga .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_facc ,_ggab :=_gdad .ToFloat64Array ();if _ggab !=nil {return nil ,_ggab ;};_gcbg .Bounds =_facc ;if len (_gcbg .Bounds )!=len (_gcbg .Functions )-1{_dgf .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_gcbg .Bounds ),len (_gcbg .Functions ));
return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdad ,_afga =_gb .TraceToDirectObject (_bcefg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gb .PdfObjectArray );if !_afga {_dgf .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ga .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ffbbf ,_ggab :=_gdad .ToFloat64Array ();
if _ggab !=nil {return nil ,_ggab ;};_gcbg .Encode =_ffbbf ;if len (_gcbg .Encode )!=2*len (_gcbg .Functions ){_dgf .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_gcbg .Encode ),len (_gcbg .Functions ));
return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _gcbg ,nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_gefg *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _gefg .RunesToCharcodeBytes ([]rune (str ));};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _gb .PdfObject ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_gb .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_gb .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_gb .PdfObjectBool ;_fbcg PdfModel ;_gccef _gb .PdfObject ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_fde :=NewPdfAnnotation ();_gfb :=&PdfAnnotationHighlight {};_gfb .PdfAnnotation =_fde ;_gfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fde .SetContext (_gfb );return _gfb ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_cebbd *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdcbd ,_dcgb :=_gb .GetNumbersAsFloat (objects );
if _dcgb !=nil {return nil ,_dcgb ;};return _cebbd .ColorFromFloats (_bdcbd );};

// AddExtGState adds a graphics state to the XObject resources.
func (_fcbag *PdfPage )AddExtGState (name _gb .PdfObjectName ,egs *_gb .PdfObjectDictionary )error {if _fcbag .Resources ==nil {_fcbag .Resources =NewPdfPageResources ();};if _fcbag .Resources .ExtGState ==nil {_fcbag .Resources .ExtGState =_gb .MakeDict ();
};_eegf ,_efaab :=_gb .TraceToDirectObject (_fcbag .Resources .ExtGState ).(*_gb .PdfObjectDictionary );if !_efaab {_dgf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gb .TraceToDirectObject (_fcbag .Resources .ExtGState ));
return _ga .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eegf .Set (name ,egs );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbdeg *PdfActionResetForm )ToPdfObject ()_gb .PdfObject {_dbdeg .PdfAction .ToPdfObject ();_dgg :=_dbdeg ._cd ;_agb :=_dgg .PdfObject .(*_gb .PdfObjectDictionary );_agb .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeResetForm )));_agb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_dbdeg .Fields );
_agb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_dbdeg .Flags );return _dgg ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_aagbb *XObjectImage )GetContainingPdfObject ()_gb .PdfObject {return _aagbb ._abfbc };

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _gb .PdfObject ;T3DV _gb .PdfObject ;T3DA _gb .PdfObject ;T3DI _gb .PdfObject ;T3DB _gb .PdfObject ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_gdcd *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _gbeef []*PdfField ;if _gdcd .AcroForm !=nil {_gbeef =_gdcd .AcroForm .AllFields ();};_addbe :=make (map[*PdfField ]struct{},len (_gbeef ));for _ ,_fggde :=range _gbeef {_addbe [_fggde ]=struct{}{};
};for _ ,_dbdcd :=range _gdcd .PageList {_bfgbb ,_cegcc :=_dbdcd .GetAnnotations ();if _cegcc !=nil {return false ,_cegcc ;};for _ ,_eacdd :=range _bfgbb {_eadff ,_gdedd :=_eacdd .GetContext ().(*PdfAnnotationWidget );if !_gdedd {continue ;};_egcfc :=_eadff .Field ();
if _egcfc ==nil {return true ,nil ;};if _ ,_bgdfa :=_addbe [_egcfc ];!_bgdfa {return true ,nil ;};};};return false ,nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_bdbdd *PdfPageResources )HasColorspaceByName (keyName _gb .PdfObjectName )bool {_cace ,_ebcca :=_bdbdd .GetColorspaces ();if _ebcca !=nil {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ebcca );
return false ;};if _cace ==nil {return false ;};_ ,_bfdea :=_cace .Colorspaces [string (keyName )];return _bfdea ;};

// ReplacePage replaces the original page to a new page.
func (_deac *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_afbea :=pageNum -1;for _bdce :=range _deac ._bcabf {if _bdce ==_afbea {_bace :=page .Duplicate ();_deac ._bcabf [_bdce ]=_bace ;};};};func _ebg (_cfd _gb .PdfObject )(*PdfFilespec ,error ){if _cfd ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_cfd );};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_bdgda *PdfPageResources )SetXObjectFormByName (keyName _gb .PdfObjectName ,xform *XObjectForm )error {_dbced :=xform .ToPdfObject ().(*_gb .PdfObjectStream );_gdfdge :=_bdgda .SetXObjectByName (keyName ,_dbced );return _gdfdge ;};func (_babcb *LTV )getCRLs (_cddf []*_g .Certificate )([][]byte ,error ){_facb :=make ([][]byte ,0,len (_cddf ));
for _ ,_debc :=range _cddf {for _ ,_gbfcb :=range _debc .CRLDistributionPoints {if _babcb .CertClient .IsCA (_debc ){continue ;};_fececc ,_gbgf :=_babcb .CRLClient .MakeRequest (_gbfcb ,_debc );if _gbgf !=nil {_dgf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_gbgf );
continue ;};_facb =append (_facb ,_fececc );};};return _facb ,nil ;};type pdfSignDictionary struct{*_gb .PdfObjectDictionary ;_aeece *SignatureHandler ;_gfebb *PdfSignature ;_aebcd int64 ;_bbaaf int ;_fbcb int ;_edbb int ;_fdga int ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_bgfa :=PdfColorCalGray (grayVal );return &_bgfa ;};

// HasFontByName checks if has font resource by name.
func (_cbbdgf *PdfPage )HasFontByName (name _gb .PdfObjectName )bool {_dgfad ,_egdd :=_cbbdgf .Resources .Font .(*_gb .PdfObjectDictionary );if !_egdd {return false ;};if _fecbc :=_dgfad .Get (name );_fecbc !=nil {return true ;};return false ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_ggdg *PdfPage )GetPageDict ()*_gb .PdfObjectDictionary {_eega :=_ggdg ._gaec ;_eega .Clear ();_eega .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0050\u0061\u0067\u0065"));_eega .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ggdg .Parent );if _ggdg .LastModified !=nil {_eega .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_ggdg .LastModified .ToPdfObject ());
};if _ggdg .Resources !=nil {_eega .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ggdg .Resources .ToPdfObject ());};if _ggdg .CropBox !=nil {_eega .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_ggdg .CropBox .ToPdfObject ());};if _ggdg .MediaBox !=nil {_eega .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_ggdg .MediaBox .ToPdfObject ());
};if _ggdg .BleedBox !=nil {_eega .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_ggdg .BleedBox .ToPdfObject ());};if _ggdg .TrimBox !=nil {_eega .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_ggdg .TrimBox .ToPdfObject ());};if _ggdg .ArtBox !=nil {_eega .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_ggdg .ArtBox .ToPdfObject ());
};_eega .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_ggdg .BoxColorInfo );_eega .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ggdg .Contents );if _ggdg .Rotate !=nil {_eega .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_gb .MakeInteger (*_ggdg .Rotate ));
};_eega .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_ggdg .Group );_eega .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_ggdg .Thumb );_eega .SetIfNotNil ("\u0042",_ggdg .B );_eega .SetIfNotNil ("\u0044\u0075\u0072",_ggdg .Dur );_eega .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ggdg .Trans );
_eega .SetIfNotNil ("\u0041\u0041",_ggdg .AA );_eega .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ggdg .Metadata );_eega .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_ggdg .PieceInfo );_eega .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ggdg .StructParents );
_eega .SetIfNotNil ("\u0049\u0044",_ggdg .ID );_eega .SetIfNotNil ("\u0050\u005a",_ggdg .PZ );_eega .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_ggdg .SeparationInfo );_eega .SetIfNotNil ("\u0054\u0061\u0062\u0073",_ggdg .Tabs );
_eega .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_ggdg .TemplateInstantiated );_eega .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_ggdg .PresSteps );_eega .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_ggdg .UserUnit );
_eega .SetIfNotNil ("\u0056\u0050",_ggdg .VP );if _ggdg ._cafdf !=nil {_dbca :=_gb .MakeArray ();for _ ,_ddeee :=range _ggdg ._cafdf {if _agcag :=_ddeee .GetContext ();_agcag !=nil {_dbca .Append (_agcag .ToPdfObject ());}else {_dbca .Append (_ddeee .ToPdfObject ());
};};if _dbca .Len ()> 0{_eega .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_dbca );};}else if _ggdg .Annots !=nil {_eega .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_ggdg .Annots );};return _eega ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_dddfa *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_gb .PdfObjectInteger ;BitsPerComponent *_gb .PdfObjectInteger ;VerticesPerRow *_gb .PdfObjectInteger ;Decode *_gb .PdfObjectArray ;Function []PdfFunction ;};func (_bgdc *PdfReader )newPdfAnnotationPrinterMarkFromDict (_gbg *_gb .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_agga :=PdfAnnotationPrinterMark {};
_agga .MN =_gbg .Get ("\u004d\u004e");return &_agga ,nil ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _gb .PdfObject ;NewWindow _gb .PdfObject ;T _gb .PdfObject ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_gcb :=NewPdfAction ();_gdf :=&PdfActionSetOCGState {};_gdf .PdfAction =_gcb ;_gcb .SetContext (_gdf );return _gdf ;};func _ceagc (_cdeg _gb .PdfObject )(PdfFunction ,error ){_cdeg =_gb .ResolveReference (_cdeg );
if _efdgc ,_eaggb :=_cdeg .(*_gb .PdfObjectStream );_eaggb {_dfbc :=_efdgc .PdfObjectDictionary ;_bgegef ,_bgcbc :=_dfbc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gb .PdfObjectInteger );if !_bgcbc {_dgf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ga .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bgegef ==0{return _fbce (_efdgc );}else if *_bgegef ==4{return _bcagg (_efdgc );
}else {return nil ,_ga .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _eaeff ,_agddb :=_cdeg .(*_gb .PdfIndirectObject );_agddb {_aebfb ,_gdfcc :=_eaeff .PdfObject .(*_gb .PdfObjectDictionary );
if !_gdfcc {_dgf .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ga .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_abfe ,_gdfcc :=_aebfb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gb .PdfObjectInteger );
if !_gdfcc {_dgf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ga .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_abfe ==2{return _ecef (_eaeff );}else if *_abfe ==3{return _gdecc (_eaeff );}else {return nil ,_ga .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cdeb ,_aaba :=_cdeg .(*_gb .PdfObjectDictionary );
_aaba {_geaae ,_cfbd :=_cdeb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gb .PdfObjectInteger );if !_cfbd {_dgf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ga .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_geaae ==2{return _ecef (_cdeb );}else if *_geaae ==3{return _gdecc (_cdeb );
}else {return nil ,_ga .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_dgf .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_cdeg );
return nil ,_ga .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};func (_fabgc *DSS )addOCSPs (_cddb [][]byte )([]*_gb .PdfObjectStream ,error ){return _fabgc .add (&_fabgc .OCSPs ,_fabgc ._dgcd ,_cddb );};

// ToPdfObject implements interface PdfModel.
func (_dga *PdfAnnotationFreeText )ToPdfObject ()_gb .PdfObject {_dga .PdfAnnotation .ToPdfObject ();_fda :=_dga ._dccf ;_dggd :=_fda .PdfObject .(*_gb .PdfObjectDictionary );_dga .PdfAnnotationMarkup .appendToPdfDictionary (_dggd );_dggd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_dggd .SetIfNotNil ("\u0044\u0041",_dga .DA );_dggd .SetIfNotNil ("\u0051",_dga .Q );_dggd .SetIfNotNil ("\u0052\u0043",_dga .RC );_dggd .SetIfNotNil ("\u0044\u0053",_dga .DS );_dggd .SetIfNotNil ("\u0043\u004c",_dga .CL );_dggd .SetIfNotNil ("\u0049\u0054",_dga .IT );
_dggd .SetIfNotNil ("\u0042\u0045",_dga .BE );_dggd .SetIfNotNil ("\u0052\u0044",_dga .RD );_dggd .SetIfNotNil ("\u0042\u0053",_dga .BS );_dggd .SetIfNotNil ("\u004c\u0045",_dga .LE );return _fda ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_egddb *PdfShading )GetContainingPdfObject ()_gb .PdfObject {return _egddb ._gccef };func (_ffad fontCommon )fontFlags ()int {if _ffad ._fcgcf ==nil {return 0;};return _ffad ._fcgcf ._gbgge ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_gcca *pdfFontSimple )ToPdfObject ()_gb .PdfObject {if _gcca ._fgecf ==nil {_gcca ._fgecf =&_gb .PdfIndirectObject {};};_egadf :=_gcca .baseFields ().asPdfObjectDictionary ("");_gcca ._fgecf .PdfObject =_egadf ;if _gcca .FirstChar !=nil {_egadf .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gcca .FirstChar );
};if _gcca .LastChar !=nil {_egadf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gcca .LastChar );};if _gcca .Widths !=nil {_egadf .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gcca .Widths );};if _gcca .Encoding !=nil {_egadf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gcca .Encoding );
}else if _gcca ._dgdge !=nil {_geaac :=_gcca ._dgdge .ToPdfObject ();if _geaac !=nil {_egadf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_geaac );};};return _gcca ._fgecf ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_dbddf FieldFlag )Mask ()uint32 {return uint32 (_dbddf )};func _bfff (_fbaf _gb .PdfObject )(*_gb .PdfObjectDictionary ,*fontCommon ,error ){_cedcf :=&fontCommon {};if _fedff ,_gfgg :=_fbaf .(*_gb .PdfIndirectObject );_gfgg {_cedcf ._bgbfa =_fedff .ObjectNumber ;
};_faddg ,_begd :=_gb .GetDict (_fbaf );if !_begd {_dgf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fbaf );
return nil ,nil ,ErrFontNotSupported ;};_dbecd ,_begd :=_gb .GetNameVal (_faddg .Get ("\u0054\u0079\u0070\u0065"));if !_begd {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _dbecd !="\u0046\u006f\u006e\u0074"{_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_dbecd ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_gb .ErrTypeError ;};_fffd ,_begd :=_gb .GetNameVal (_faddg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_begd {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_cedcf ._cedad =_fffd ;_dbadb ,_begd :=_gb .GetNameVal (_faddg .Get ("\u004e\u0061\u006d\u0065"));if _begd {_cedcf ._bege =_dbadb ;};if _fffd =="\u0054\u0079\u0070e\u0033"{_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_faddg );
return _faddg ,_cedcf ,ErrType3FontNotSupported ;};_gbca ,_begd :=_gb .GetNameVal (_faddg .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_begd {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _faddg ,_cedcf ,ErrRequiredAttributeMissing ;};_cedcf ._ebadb =_gbca ;_dceag :=_faddg .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _dceag !=nil {_abbge ,_egdcb :=_adeae (_dceag );if _egdcb !=nil {_dgf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_egdcb );
return _faddg ,_cedcf ,_egdcb ;};_cedcf ._fcgcf =_abbge ;};_gbcda :=_faddg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _gbcda !=nil {_cedcf ._egbcb =_gb .TraceToDirectObject (_gbcda );_cgba ,_ecca :=_bacda (_cedcf ._egbcb ,_cedcf );if _ecca !=nil {return _faddg ,_cedcf ,_ecca ;
};_cedcf ._bfdd =_cgba ;}else if _fffd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_fffd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bdbg ,_fgbaf :=_de .NewCIDSystemInfo (_faddg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _fgbaf !=nil {return _faddg ,_cedcf ,_fgbaf ;};_fgaab :=_b .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_bdbg .Registry ,_bdbg .Ordering );if _de .IsPredefinedCMap (_fgaab ){_cedcf ._bfdd ,_fgbaf =_de .LoadPredefinedCMap (_fgaab );
if _fgbaf !=nil {_dgf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fgaab ,_fgbaf );
};};};return _faddg ,_cedcf ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_edaf *PdfColorspaceLab )GetNumComponents ()int {return 3};

// GetSubFilter returns SubFilter value or empty string.
func (_fgbdc *pdfSignDictionary )GetSubFilter ()string {_ggege :=_fgbdc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _ggege ==nil {return "";};if _ebff ,_bgefg :=_gb .GetNameVal (_ggege );_bgefg {return _ebff ;};return "";};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_afce *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _afce .flattenFieldsWithOpts (false ,appgen ,opts );};func (_decd SignatureValidationResult )String ()string {var _eaaac _bed .Buffer ;
_eaaac .WriteString (_b .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_decd .Name ));if _decd .Date ._dcage > 0{_eaaac .WriteString (_b .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_decd .Date .ToGoTime ().String ()));}else {_eaaac .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_decd .Reason )> 0{_eaaac .WriteString (_b .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_decd .Reason ));}else {_eaaac .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_decd .Location )> 0{_eaaac .WriteString (_b .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_decd .Location ));}else {_eaaac .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_decd .ContactInfo )> 0{_eaaac .WriteString (_b .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_decd .ContactInfo ));}else {_eaaac .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_eaaac .WriteString (_b .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_decd .Fields )));if _decd .IsSigned {_eaaac .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_eaaac .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _decd .IsVerified {_eaaac .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_eaaac .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _decd .IsTrusted {_eaaac .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_eaaac .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_decd .GeneralizedTime .IsZero (){_eaaac .WriteString (_b .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_decd .GeneralizedTime .String ()));
};return _eaaac .String ();};

// ColorToRGB converts an Indexed color to an RGB color.
func (_geef *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _geef .Base ==nil {return nil ,_ga .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _geef .Base .ColorToRGB (color );};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_beeb *PdfOutlineItem )GetContainingPdfObject ()_gb .PdfObject {return _beeb ._caeeee };

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_aaead *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_aaead ._fabgf =colorspace ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_cecbf *PdfPageResources )GetXObjectByName (keyName _gb .PdfObjectName )(*_gb .PdfObjectStream ,XObjectType ){if _cecbf .XObject ==nil {return nil ,XObjectTypeUndefined ;};_fedaa ,_fbbfe :=_gb .TraceToDirectObject (_cecbf .XObject ).(*_gb .PdfObjectDictionary );
if !_fbbfe {_dgf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gb .TraceToDirectObject (_cecbf .XObject ));
return nil ,XObjectTypeUndefined ;};if _efaee :=_fedaa .Get (keyName );_efaee !=nil {_aafdd ,_cdfdc :=_gb .GetStream (_efaee );if !_cdfdc {_dgf .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_efaee );
return nil ,XObjectTypeUndefined ;};_bdaae :=_aafdd .PdfObjectDictionary ;_bcddc ,_cdfdc :=_gb .TraceToDirectObject (_bdaae .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_gb .PdfObjectName );if !_cdfdc {_dgf .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_bdaae .String ());
return nil ,XObjectTypeUndefined ;};if *_bcddc =="\u0049\u006d\u0061g\u0065"{return _aafdd ,XObjectTypeImage ;}else if *_bcddc =="\u0046\u006f\u0072\u006d"{return _aafdd ,XObjectTypeForm ;}else if *_bcddc =="\u0050\u0053"{return _aafdd ,XObjectTypePS ;
}else {_dgf .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_bcddc );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// ToPdfObject implements interface PdfModel.
func (_eg *PdfAction )ToPdfObject ()_gb .PdfObject {_ccg :=_eg ._cd ;_ba :=_ccg .PdfObject .(*_gb .PdfObjectDictionary );_ba .Clear ();_ba .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ba .SetIfNotNil ("\u0053",_eg .S );
_ba .SetIfNotNil ("\u004e\u0065\u0078\u0074",_eg .Next );return _ccg ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";
);

// ToPdfObject returns a stream object.
func (_gcdf *XObjectImage )ToPdfObject ()_gb .PdfObject {_degba :=_gcdf ._abfbc ;_ceefe :=_degba .PdfObjectDictionary ;if _gcdf .Filter !=nil {_ceefe =_gcdf .Filter .MakeStreamDict ();_degba .PdfObjectDictionary =_ceefe ;};_ceefe .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_ceefe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0049\u006d\u0061g\u0065"));_ceefe .Set ("\u0057\u0069\u0064t\u0068",_gb .MakeInteger (*(_gcdf .Width )));_ceefe .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gb .MakeInteger (*(_gcdf .Height )));
if _gcdf .BitsPerComponent !=nil {_ceefe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gb .MakeInteger (*(_gcdf .BitsPerComponent )));};if _gcdf .ColorSpace !=nil {_ceefe .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gcdf .ColorSpace .ToPdfObject ());
};_ceefe .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_gcdf .Intent );_ceefe .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_gcdf .ImageMask );_ceefe .SetIfNotNil ("\u004d\u0061\u0073\u006b",_gcdf .Mask );_cgeag :=_ceefe .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _gcdf .Decode ==nil &&_cgeag {_ceefe .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _gcdf .Decode !=nil {_ceefe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gcdf .Decode );};_ceefe .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_gcdf .Interpolate );
_ceefe .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_gcdf .Alternatives );_ceefe .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_gcdf .SMask );_ceefe .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_gcdf .SMaskInData );
_ceefe .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gcdf .Matte );_ceefe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gcdf .Name );_ceefe .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gcdf .StructParent );_ceefe .SetIfNotNil ("\u0049\u0044",_gcdf .ID );
_ceefe .SetIfNotNil ("\u004f\u0050\u0049",_gcdf .OPI );_ceefe .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gcdf .Metadata );_ceefe .SetIfNotNil ("\u004f\u0043",_gcdf .OC );_ceefe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_gcdf .Stream ))));
_degba .Stream =_gcdf .Stream ;return _degba ;};func _gdbf (_eddec *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_eddec }};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_aaab :=NewPdfAction ();_egb :=&PdfActionRendition {};_egb .PdfAction =_aaab ;_aaab .SetContext (_egb );return _egb ;};

// ToInteger convert to an integer format.
func (_bbeg *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_bedd :=_fg .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_bedd *_bbeg .C ()),uint32 (_bedd *_bbeg .M ()),uint32 (_bedd *_bbeg .Y ()),uint32 (_bedd *_bbeg .K ())};};

// SetBorderWidth sets the style's border width.
func (_adfb *PdfBorderStyle )SetBorderWidth (width float64 ){_adfb .W =&width };

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _gb .PdfObject ;Sy _gb .PdfObject ;};func (_fdadd *PdfWriter )hasObject (_afaa _gb .PdfObject )bool {_ ,_dfgee :=_fdadd ._dbbcgf [_afaa ];return _dfgee ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_aef :=NewPdfAnnotation ();_fcc :=&PdfAnnotationWidget {};_fcc .PdfAnnotation =_aef ;_aef .SetContext (_fcc );return _fcc ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_afd :=NewPdfAction ();_dcd :=&PdfActionResetForm {};_dcd .PdfAction =_afd ;_afd .SetContext (_dcd );return _dcd ;};func (_ccacg *PdfWriter )seekByName (_aedcg _gb .PdfObject ,_bcga []string ,_cgfed string )([]_gb .PdfObject ,error ){_dgf .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_aedcg );
var _gcfgd []_gb .PdfObject ;if _eggbdd ,_cfaa :=_aedcg .(*_gb .PdfIndirectObject );_cfaa {return _ccacg .seekByName (_eggbdd .PdfObject ,_bcga ,_cgfed );};if _cgbe ,_cbbgf :=_aedcg .(*_gb .PdfObjectStream );_cbbgf {return _ccacg .seekByName (_cgbe .PdfObjectDictionary ,_bcga ,_cgfed );
};if _egcfce ,_acaca :=_aedcg .(*_gb .PdfObjectDictionary );_acaca {_dgf .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_ddcgc :=range _egcfce .Keys (){_edfgf :=_egcfce .Get (_ddcgc );if string (_ddcgc )==_cgfed {_gcfgd =append (_gcfgd ,_edfgf );};for _ ,_gbfebg :=range _bcga {if string (_ddcgc )==_gbfebg {_dgf .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_gbfebg );
_eegge ,_bbbde :=_ccacg .seekByName (_edfgf ,_bcga ,_cgfed );if _bbbde !=nil {return _gcfgd ,_bbbde ;};_gcfgd =append (_gcfgd ,_eegge ...);break ;};};};return _gcfgd ,nil ;};return _gcfgd ,nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_dfgc *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ga .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_eeffd :=&PdfColorPattern {};_gbeb ,_eadaa :=objects [len (objects )-1].(*_gb .PdfObjectName );if !_eadaa {_dgf .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_eeffd .PatternName =*_gbeb ;if len (objects )> 1{_gfca :=objects [0:len (objects )-1];if _dfgc .UnderlyingCS ==nil {_dgf .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ga .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_aeaa ,_eabcd :=_dfgc .UnderlyingCS .ColorFromPdfObjects (_gfca );if _eabcd !=nil {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_eabcd );
return nil ,_eabcd ;};_eeffd .Color =_aeaa ;};return _eeffd ,nil ;};func (_eca *PdfReader )newPdfActionImportDataFromDict (_gfce *_gb .PdfObjectDictionary )(*PdfActionImportData ,error ){_bagd ,_dcf :=_ebg (_gfce .Get ("\u0046"));if _dcf !=nil {return nil ,_dcf ;
};return &PdfActionImportData {F :_bagd },nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gb .PdfObject ;LE _gb .PdfObject ;BS _gb .PdfObject ;IC _gb .PdfObject ;BE _gb .PdfObject ;IT _gb .PdfObject ;Measure _gb .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_eggfa *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_feeb :=vals [0];_abdbg :=[]float64 {_feeb };_aebc ,_bbcc :=_eggfa .TintTransform .Evaluate (_abdbg );
if _bbcc !=nil {_dgf .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_bbcc );_dgf .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_eggfa .TintTransform );
return nil ,_bbcc ;};_dgf .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_aebc ,_eggfa .AlternateSpace );
_fdgdd ,_bbcc :=_eggfa .AlternateSpace .ColorFromFloats (_aebc );if _bbcc !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_bbcc );
return nil ,_bbcc ;};return _fdgdd ,nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_gb .PdfIndirectObject )*PdfOutlineItem {_ffceb :=PdfOutlineItem {};_ffceb ._gdeda =&_ffceb ;_ffceb .Title =_gb .MakeString (title );_baac :=_gb .MakeArray ();_baac .Append (page );_baac .Append (_gb .MakeName ("\u0046\u0069\u0074"));
_ffceb .Dest =_baac ;return &_ffceb ;};func (_ggcf *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// ToPdfObject implements interface PdfModel.
func (_bde *PdfActionGoToR )ToPdfObject ()_gb .PdfObject {_bde .PdfAction .ToPdfObject ();_ag :=_bde ._cd ;_dbc :=_ag .PdfObject .(*_gb .PdfObjectDictionary );_dbc .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeGoToR )));if _bde .F !=nil {_dbc .Set ("\u0046",_bde .F .ToPdfObject ());
};_dbc .SetIfNotNil ("\u0044",_bde .D );_dbc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bde .NewWindow );return _ag ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _gb .PdfObject ;FS _gb .PdfObject ;F _gb .PdfObject ;UF _gb .PdfObject ;DOS _gb .PdfObject ;Mac _gb .PdfObject ;Unix _gb .PdfObject ;ID _gb .PdfObject ;V _gb .PdfObject ;EF _gb .PdfObject ;RF _gb .PdfObject ;Desc _gb .PdfObject ;
CI _gb .PdfObject ;_ebc _gb .PdfObject ;};var _fbagg =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};
func (_gdd *PdfReader )newPdfAnnotationStampFromDict (_ebeg *_gb .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_fgac :=PdfAnnotationStamp {};_agag ,_cfdfa :=_gdd .newPdfAnnotationMarkupFromDict (_ebeg );if _cfdfa !=nil {return nil ,_cfdfa ;};_fgac .PdfAnnotationMarkup =_agag ;
_fgac .Name =_ebeg .Get ("\u004e\u0061\u006d\u0065");return &_fgac ,nil ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_caef *PdfFont )ToUnicode ()string {if _caef .baseFields ()._bfdd ==nil {return "";};return _caef .baseFields ()._bfdd .Name ();};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bddgef *PdfOutlineItem )ToPdfObject ()_gb .PdfObject {_ddebe :=_bddgef ._caeeee ;_cgdfa :=_ddebe .PdfObject .(*_gb .PdfObjectDictionary );_cgdfa .Set ("\u0054\u0069\u0074l\u0065",_bddgef .Title );if _bddgef .A !=nil {_cgdfa .Set ("\u0041",_bddgef .A );
};if _ecde :=_cgdfa .Get ("\u0053\u0045");_ecde !=nil {_cgdfa .Remove ("\u0053\u0045");};if _bddgef .C !=nil {_cgdfa .Set ("\u0043",_bddgef .C );};if _bddgef .Dest !=nil {_cgdfa .Set ("\u0044\u0065\u0073\u0074",_bddgef .Dest );};if _bddgef .F !=nil {_cgdfa .Set ("\u0046",_bddgef .F );
};if _bddgef .Count !=nil {_cgdfa .Set ("\u0043\u006f\u0075n\u0074",_gb .MakeInteger (*_bddgef .Count ));};if _bddgef .Next !=nil {_cgdfa .Set ("\u004e\u0065\u0078\u0074",_bddgef .Next .ToPdfObject ());};if _bddgef .First !=nil {_cgdfa .Set ("\u0046\u0069\u0072s\u0074",_bddgef .First .ToPdfObject ());
};if _bddgef .Prev !=nil {_cgdfa .Set ("\u0050\u0072\u0065\u0076",_bddgef .Prev .GetContext ().GetContainingPdfObject ());};if _bddgef .Last !=nil {_cgdfa .Set ("\u004c\u0061\u0073\u0074",_bddgef .Last .GetContext ().GetContainingPdfObject ());};if _bddgef .Parent !=nil {_cgdfa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bddgef .Parent .GetContext ().GetContainingPdfObject ());
};return _ddebe ;};func (_abgg *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _abgg ._gedb .GetCrypter ()!=nil &&!_abgg ._gedb .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_edeca :=_abgg ._ggce ;_eaffe :=_edeca .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _eaffe ==nil {return nil ,nil ;};_dgf .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_acagag :=_gb .ResolveReference (_eaffe );
_dgf .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_acagag );if _ggga :=_gb .IsNullObject (_acagag );_ggga {_dgf .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_feef ,_bcfbb :=_acagag .(*_gb .PdfIndirectObject );if !_bcfbb {if _ ,_cbad :=_gb .GetDict (_acagag );!_cbad {_dgf .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_dgf .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_feef =_gb .MakeIndirectObject (_acagag );};_fdgbeg ,_bcfbb :=_feef .PdfObject .(*_gb .PdfObjectDictionary );if !_bcfbb {return nil ,_ga .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_dgf .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_fdgbeg );_bddfb ,_ ,_fgdd :=_abgg .buildOutlineTree (_feef ,nil ,nil ,nil );if _fgdd !=nil {return nil ,_fgdd ;};_dgf .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_bddfb );
return _bddfb ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_dfdcb *PdfWriter )SetForms (form *PdfAcroForm )error {_dfdcb ._dfcgf =form ;return nil };func _aedg ()_f .Time {_cgdc .Lock ();defer _cgdc .Unlock ();return _bacgg };

// Encoder returns the font's text encoder.
func (_bdeaed *pdfFontSimple )Encoder ()_fed .TextEncoder {if _bdeaed ._dgdge !=nil {return _bdeaed ._dgdge ;};if _bdeaed ._bdaa !=nil {return _bdeaed ._bdaa ;};_bdeb ,_ :=_fed .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _bdeb ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_fcag :=PdfColorDeviceGray (grayVal );return &_fcag ;};func _fgab (_gbdc _gb .PdfObject )(*fontFile ,error ){_dgf .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_gbdc );
_afdge :=&fontFile {};_gbdc =_gb .TraceToDirectObject (_gbdc );_gcee ,_abbgd :=_gbdc .(*_gb .PdfObjectStream );if !_abbgd {_dgf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_gbdc );
return nil ,_gb .ErrTypeError ;};_dceaa :=_gcee .PdfObjectDictionary ;_gebcd ,_adee :=_gb .DecodeStream (_gcee );if _adee !=nil {return nil ,_adee ;};_dcafe ,_abbgd :=_gb .GetNameVal (_dceaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_abbgd {_afdge ._bfbfg =_dcafe ;
if _dcafe =="\u0054\u0079\u0070\u0065\u0031\u0043"{_dgf .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_gbabe ,_ :=_gb .GetIntVal (_dceaa .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_fccf ,_ :=_gb .GetIntVal (_dceaa .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _gbabe > len (_gebcd ){_gbabe =len (_gebcd );
};if _gbabe +_fccf > len (_gebcd ){_fccf =len (_gebcd )-_gbabe ;};_aadbe :=_gebcd [:_gbabe ];var _bacea []byte ;if _fccf > 0{_bacea =_gebcd [_gbabe :_gbabe +_fccf ];};if _gbabe > 0&&_fccf > 0{_bffd :=_afdge .loadFromSegments (_aadbe ,_bacea );if _bffd !=nil {return nil ,_bffd ;
};};return _afdge ,nil ;};func (_gbeba *pdfFontType0 )subsetRegistered ()error {_edff ,_fgbbg :=_gbeba .DescendantFont ._cbab .(*pdfCIDFontType2 );if !_fgbbg {_dgf .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_gbeba .DescendantFont );
return nil ;};if _edff ==nil {return nil ;};if _edff ._fcgcf ==nil {_dgf .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _gbeba ._bdde ==nil {_dgf .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_bcef ,_fgbbg :=_gb .GetStream (_edff ._fcgcf .FontFile2 );if !_fgbbg {_dgf .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ga .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_gdcg ,_caaaf :=_gb .DecodeStream (_bcef );if _caaaf !=nil {_dgf .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_caaaf );
return _caaaf ;};_fbad ,_caaaf :=_dab .Parse (_bed .NewReader (_gdcg ));if _caaaf !=nil {_dgf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_bcef .Stream ));
return _caaaf ;};var _aebge []rune ;var _ceee *_dab .Font ;switch _cadc :=_gbeba ._bdde .(type ){case *_fed .TrueTypeFontEncoder :_aebge =_cadc .RegisteredRunes ();_ceee ,_caaaf =_fbad .SubsetKeepRunes (_aebge );if _caaaf !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caaaf );
return _caaaf ;};_cadc .SubsetRegistered ();case *_fed .IdentityEncoder :_aebge =_cadc .RegisteredRunes ();_becff :=make ([]_dab .GlyphIndex ,len (_aebge ));for _dfffb ,_cgce :=range _aebge {_becff [_dfffb ]=_dab .GlyphIndex (_cgce );};_ceee ,_caaaf =_fbad .SubsetKeepIndices (_becff );
if _caaaf !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caaaf );return _caaaf ;};case _fed .SimpleEncoder :_agbg :=_cadc .Charcodes ();for _ ,_adaf :=range _agbg {_dabag ,_bagec :=_cadc .CharcodeToRune (_adaf );if !_bagec {_dgf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_adaf );
continue ;};_aebge =append (_aebge ,_dabag );};default:return _b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_gbeba ._bdde );
};var _cbdf _bed .Buffer ;_caaaf =_ceee .Write (&_cbdf );if _caaaf !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caaaf );return _caaaf ;};if _gbeba ._bfdd !=nil {_cdca :=make (map[_de .CharCode ]rune ,len (_aebge ));for _ ,_dcbag :=range _aebge {_cgeg ,_cfcga :=_gbeba ._bdde .RuneToCharcode (_dcbag );
if !_cfcga {continue ;};_cdca [_de .CharCode (_cgeg )]=_dcbag ;};_gbeba ._bfdd =_de .NewToUnicodeCMap (_cdca );};_bcef ,_caaaf =_gb .MakeStream (_cbdf .Bytes (),_gb .NewFlateEncoder ());if _caaaf !=nil {_dgf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caaaf );
return _caaaf ;};_bcef .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gb .MakeInteger (int64 (_cbdf .Len ())));if _dddae ,_bcde :=_gb .GetStream (_edff ._fcgcf .FontFile2 );_bcde {*_dddae =*_bcef ;}else {_edff ._fcgcf .FontFile2 =_bcef ;};_eaefe :=_eggde ();
if len (_gbeba ._ebadb )> 0{_gbeba ._ebadb =_cfafc (_gbeba ._ebadb ,_eaefe );};if len (_edff ._ebadb )> 0{_edff ._ebadb =_cfafc (_edff ._ebadb ,_eaefe );};if len (_gbeba ._bege )> 0{_gbeba ._bege =_cfafc (_gbeba ._bege ,_eaefe );};if _edff ._fcgcf !=nil {_aeebe ,_caff :=_gb .GetName (_edff ._fcgcf .FontName );
if _caff &&len (_aeebe .String ())> 0{_ddded :=_cfafc (_aeebe .String (),_eaefe );_edff ._fcgcf .FontName =_gb .MakeName (_ddded );};};return nil ;};func _cdgcd (_abafc _gb .PdfObject )(*PdfPattern ,error ){_dgefg :=&PdfPattern {};var _gdgcf *_gb .PdfObjectDictionary ;
if _ebddc ,_gccfa :=_gb .GetIndirect (_abafc );_gccfa {_dgefg ._agab =_ebddc ;_febcd ,_ggaeb :=_ebddc .PdfObject .(*_gb .PdfObjectDictionary );if !_ggaeb {_dgf .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_ebddc .PdfObject );
return nil ,_gb .ErrTypeError ;};_gdgcf =_febcd ;}else if _agfgc ,_gcaaea :=_gb .GetStream (_abafc );_gcaaea {_dgefg ._agab =_agfgc ;_gdgcf =_agfgc .PdfObjectDictionary ;}else {_dgf .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_abafc );
return nil ,_gb .ErrTypeError ;};_gceg :=_gdgcf .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _gceg ==nil {_dgf .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbggg ,_abgf :=_gceg .(*_gb .PdfObjectInteger );if !_abgf {_dgf .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gceg );
return nil ,_gb .ErrTypeError ;};if *_cbggg !=1&&*_cbggg !=2{_dgf .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_cbggg );return nil ,_gb .ErrRangeError ;
};_dgefg .PatternType =int64 (*_cbggg );switch *_cbggg {case 1:_fdgc ,_eegg :=_gagb (_gdgcf );if _eegg !=nil {return nil ,_eegg ;};_fdgc .PdfPattern =_dgefg ;_dgefg ._bcaggd =_fdgc ;return _dgefg ,nil ;case 2:_gbdg ,_cadff :=_cabe (_gdgcf );if _cadff !=nil {return nil ,_cadff ;
};_gbdg .PdfPattern =_dgefg ;_dgefg ._bcaggd =_gbdg ;return _dgefg ,nil ;};return nil ,_ga .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// HasExtGState checks if ExtGState name is available.
func (_cebbc *PdfPage )HasExtGState (name _gb .PdfObjectName )bool {if _cebbc .Resources ==nil {return false ;};if _cebbc .Resources .ExtGState ==nil {return false ;};_bfcga ,_dgdda :=_gb .TraceToDirectObject (_cebbc .Resources .ExtGState ).(*_gb .PdfObjectDictionary );
if !_dgdda {_dgf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gb .TraceToDirectObject (_cebbc .Resources .ExtGState ));
return false ;};_dcbbbf :=_bfcga .Get (name );_dbbec :=_dcbbbf !=nil ;return _dbbec ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_bgg *PdfAnnotation )GetContext ()PdfModel {if _bgg ==nil {return nil ;};return _bgg ._defe ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_cgdc .Lock ();defer _cgdc .Unlock ();_fbae =creator };

// ToPdfObject returns the PDF representation of the colorspace.
func (_afddf *PdfColorspaceDeviceRGB )ToPdfObject ()_gb .PdfObject {return _gb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_defe PdfModel ;Rect _gb .PdfObject ;Contents _gb .PdfObject ;P _gb .PdfObject ;NM _gb .PdfObject ;M _gb .PdfObject ;F _gb .PdfObject ;AP _gb .PdfObject ;AS _gb .PdfObject ;Border _gb .PdfObject ;C _gb .PdfObject ;StructParent _gb .PdfObject ;
OC _gb .PdfObject ;_dccf *_gb .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_fgbe *DSS )ToPdfObject ()_gb .PdfObject {_gbdbb :=_fgbe ._dbdegb .PdfObject .(*_gb .PdfObjectDictionary );_gbdbb .Clear ();_bdff :=_gb .MakeDict ();for _fbec ,_agfcc :=range _fgbe .VRI {_bdff .Set (*_gb .MakeName (_fbec ),_agfcc .ToPdfObject ());
};_gbdbb .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_fdacg (_fgbe .Certs ));_gbdbb .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_fdacg (_fgbe .OCSPs ));_gbdbb .SetIfNotNil ("\u0043\u0052\u004c\u0073",_fdacg (_fgbe .CRLs ));_gbdbb .Set ("\u0056\u0052\u0049",_bdff );
return _fgbe ._dbdegb ;};func (_adcdd *LTV )buildCertChain (_fabgb ,_egecg []*_g .Certificate )([]*_g .Certificate ,map[string ]*_g .Certificate ,error ){_afbb :=map[string ]*_g .Certificate {};for _ ,_bgbdg :=range _fabgb {_afbb [_bgbdg .Subject .CommonName ]=_bgbdg ;
};_dabffd :=_fabgb ;for _ ,_fbfab :=range _egecg {_efcc :=_fbfab .Subject .CommonName ;if _ ,_bagca :=_afbb [_efcc ];_bagca {continue ;};_afbb [_efcc ]=_fbfab ;_dabffd =append (_dabffd ,_fbfab );};if len (_dabffd )==0{return nil ,nil ,ErrSignNoCertificates ;
};var _gabad error ;for _aafdc :=_dabffd [0];_aafdc !=nil &&!_adcdd .CertClient .IsCA (_aafdc );{_eggac ,_dgeg :=_afbb [_aafdc .Issuer .CommonName ];if !_dgeg {if _eggac ,_gabad =_adcdd .CertClient .GetIssuer (_aafdc );_gabad !=nil {_dgf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_gabad );
break ;};_afbb [_aafdc .Issuer .CommonName ]=_eggac ;_dabffd =append (_dabffd ,_eggac );};_aafdc =_eggac ;};return _dabffd ,_afbb ,nil ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_acba :=&PdfOutlineItem {_caeeee :_gb .MakeIndirectObject (_gb .MakeDict ())};_acba ._gdeda =_acba ;return _acba ;};

// Fill populates `form` with values provided by `provider`.
func (_bfccf *PdfAcroForm )Fill (provider FieldValueProvider )error {return _bfccf .fill (provider ,nil )};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_abecg []byte ;_ggcdd []float64 ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_bacb *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_efee *PdfShadingType4 )ToPdfObject ()_gb .PdfObject {_efee .PdfShading .ToPdfObject ();_eagbcd ,_ffea :=_efee .getShadingDict ();if _ffea !=nil {_dgf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _efee .BitsPerCoordinate !=nil {_eagbcd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_efee .BitsPerCoordinate );};if _efee .BitsPerComponent !=nil {_eagbcd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_efee .BitsPerComponent );
};if _efee .BitsPerFlag !=nil {_eagbcd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_efee .BitsPerFlag );};if _efee .Decode !=nil {_eagbcd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_efee .Decode );};if _efee .Function !=nil {if len (_efee .Function )==1{_eagbcd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efee .Function [0].ToPdfObject ());
}else {_gbadc :=_gb .MakeArray ();for _ ,_bfcf :=range _efee .Function {_gbadc .Append (_bfcf .ToPdfObject ());};_eagbcd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbadc );};};return _efee ._gccef ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _gb .PdfObject ;IsMap _gb .PdfObject ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _gb .PdfObject ;Volume _gb .PdfObject ;Synchronous _gb .PdfObject ;Repeat _gb .PdfObject ;Mix _gb .PdfObject ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ffceg *PdfReader )GetPageLabels ()(_gb .PdfObject ,error ){_bfbfae :=_gb .ResolveReference (_ffceg ._ggce .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _bfbfae ==nil {return nil ,nil ;};if !_ffceg ._ggea {_efbgf :=_ffceg .traverseObjectData (_bfbfae );
if _efbgf !=nil {return nil ,_efbgf ;};};return _bfbfae ,nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_afcdb *PdfFieldButton )GetType ()ButtonType {_cdgfg :=ButtonTypeCheckbox ;if _afcdb .Ff !=nil {if (uint32 (*_afcdb .Ff )&FieldFlagPushbutton .Mask ())> 0{_cdgfg =ButtonTypePush ;}else if (uint32 (*_afcdb .Ff )&FieldFlagRadio .Mask ())> 0{_cdgfg =ButtonTypeRadio ;
};};return _cdgfg ;};func (_afdee *PdfWriter )writeString (_fgce string ){if _afdee ._ffgef !=nil {return ;};_dbdcea ,_efdeb :=_afdee ._bcebe .WriteString (_fgce );_afdee ._bdabg +=int64 (_dbdcea );_afdee ._ffgef =_efdeb ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_bcdbf *PdfReader )IsEncrypted ()(bool ,error ){return _bcdbf ._gedb .IsEncrypted ()};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_bccf *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_bccf .GetNumComponents (){return nil ,_ga .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbbcg ,_bacdb :=_bccf .TintTransform .Evaluate (vals );
if _bacdb !=nil {return nil ,_bacdb ;};_cddg ,_bacdb :=_bccf .AlternateSpace .ColorFromFloats (_dbbcg );if _bacdb !=nil {return nil ,_bacdb ;};return _cddg ,nil ;};func (_ddgb *LTV )validateSig (_fcfeg *PdfSignature )error {if _fcfeg ==nil ||_fcfeg .Contents ==nil ||len (_fcfeg .Contents .Bytes ())==0{return _b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_fcfeg );
};return nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_cbccb *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _cbccb .MediaBox !=nil {return _cbccb .MediaBox ,nil ;};_fcefa :=_cbccb .Parent ;for _fcefa !=nil {_cfdg ,_fcda :=_gb .GetDict (_fcefa );if !_fcda {return nil ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _bbegb :=_cfdg .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_bbegb !=nil {_eagda ,_fgfe :=_gb .GetArray (_bbegb );if !_fgfe {return nil ,_ga .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_dbddfc ,_cbfa :=NewPdfRectangle (*_eagda );if _cbfa !=nil {return nil ,_cbfa ;};return _dbddfc ,nil ;};_fcefa =_cfdg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ga .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject implements interface PdfModel.
func (_ab *PdfActionSound )ToPdfObject ()_gb .PdfObject {_ab .PdfAction .ToPdfObject ();_afbf :=_ab ._cd ;_feg :=_afbf .PdfObject .(*_gb .PdfObjectDictionary );_feg .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeSound )));_feg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ab .Sound );
_feg .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_ab .Volume );_feg .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_ab .Synchronous );_feg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ab .Repeat );_feg .SetIfNotNil ("\u004d\u0069\u0078",_ab .Mix );
return _afbf ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gcab *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_gfcc *PdfFieldSignature )ToPdfObject ()_gb .PdfObject {if _gfcc .PdfAnnotationWidget !=nil {_gfcc .PdfAnnotationWidget .ToPdfObject ();};_gfcc .PdfField .ToPdfObject ();_ebfgg :=_gfcc ._faea ;_ffcb :=_ebfgg .PdfObject .(*_gb .PdfObjectDictionary );
_ffcb .SetIfNotNil ("\u0046\u0054",_gb .MakeName ("\u0053\u0069\u0067"));_ffcb .SetIfNotNil ("\u004c\u006f\u0063\u006b",_gfcc .Lock );_ffcb .SetIfNotNil ("\u0053\u0056",_gfcc .SV );if _gfcc .V !=nil {_ffcb .SetIfNotNil ("\u0056",_gfcc .V .ToPdfObject ());
};return _ebfgg ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_gad *PdfAction )GetContext ()PdfModel {if _gad ==nil {return nil ;};return _gad ._ce ;};func (_cfafd Image )getBase ()_fe .ImageBase {return _fe .NewImageBase (int (_cfafd .Width ),int (_cfafd .Height ),int (_cfafd .BitsPerComponent ),_cfafd .ColorComponents ,_cfafd .Data ,_cfafd ._abecg ,_cfafd ._ggcdd );
};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_defba OutlineDest )ToPdfObject ()_gb .PdfObject {if (_defba .PageObj ==nil &&_defba .Page < 0)||_defba .Mode ==""{return _gb .MakeNull ();};_eddab :=_gb .MakeArray ();if _defba .PageObj !=nil {_eddab .Append (_defba .PageObj );}else {_eddab .Append (_gb .MakeInteger (_defba .Page ));
};_eddab .Append (_gb .MakeName (_defba .Mode ));switch _defba .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_eddab .Append (_gb .MakeFloat (_defba .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_eddab .Append (_gb .MakeFloat (_defba .X ));
case "\u0058\u0059\u005a":_eddab .Append (_gb .MakeFloat (_defba .X ));_eddab .Append (_gb .MakeFloat (_defba .Y ));_eddab .Append (_gb .MakeFloat (_defba .Zoom ));default:_eddab .Set (1,_gb .MakeName ("\u0046\u0069\u0074"));};return _eddab ;};